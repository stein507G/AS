   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"mss_nvm.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.request_nvm_access,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  23              	request_nvm_access:
  24              	.LFB66:
  25              		.file 1 "../src/drivers/mss_nvm/mss_nvm.c"
   1:../src/drivers/mss_nvm/mss_nvm.c **** /*******************************************************************************
   2:../src/drivers/mss_nvm/mss_nvm.c ****  * (c) Copyright 2011-2016 Microsemi SoC Products Group.  All rights reserved.
   3:../src/drivers/mss_nvm/mss_nvm.c ****  *
   4:../src/drivers/mss_nvm/mss_nvm.c ****  * This source file contains SmartFusion2 eNVM driver code.
   5:../src/drivers/mss_nvm/mss_nvm.c ****  *
   6:../src/drivers/mss_nvm/mss_nvm.c ****  * SVN $Revision: 8442 $
   7:../src/drivers/mss_nvm/mss_nvm.c ****  * SVN $Date: 2016-06-23 12:32:32 +0530 (Thu, 23 Jun 2016) $
   8:../src/drivers/mss_nvm/mss_nvm.c ****  */
   9:../src/drivers/mss_nvm/mss_nvm.c **** 
  10:../src/drivers/mss_nvm/mss_nvm.c **** #include "../../CMSIS/m2sxxx.h"
  11:../src/drivers/mss_nvm/mss_nvm.c **** #include "../../CMSIS/mss_assert.h"
  12:../src/drivers/mss_nvm/mss_nvm.c **** #include "../../CMSIS/system_m2sxxx.h"
  13:../src/drivers/mss_nvm/mss_nvm.c **** #include "mss_nvm.h"
  14:../src/drivers/mss_nvm/mss_nvm.c **** 
  15:../src/drivers/mss_nvm/mss_nvm.c **** #ifdef __cplusplus
  16:../src/drivers/mss_nvm/mss_nvm.c **** extern "C" {
  17:../src/drivers/mss_nvm/mss_nvm.c **** #endif
  18:../src/drivers/mss_nvm/mss_nvm.c **** 
  19:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************/
  20:../src/drivers/mss_nvm/mss_nvm.c **** /* Preprocessor definitions                                               */
  21:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************/
  22:../src/drivers/mss_nvm/mss_nvm.c **** /*     eNVM command codes       */
  23:../src/drivers/mss_nvm/mss_nvm.c **** #define PROG_ADS                        0x08000000u  /* One shot program with data in WD */
  24:../src/drivers/mss_nvm/mss_nvm.c **** #define VERIFY_ADS                      0x10000000u  /* One shot verification with data in WD */
  25:../src/drivers/mss_nvm/mss_nvm.c **** #define USER_UNLOCK                     0x13000000u  /* User unlock */
  26:../src/drivers/mss_nvm/mss_nvm.c **** 
  27:../src/drivers/mss_nvm/mss_nvm.c **** #define BITS_PER_PAGE                   1024u                   /* Number of bits per page */
  28:../src/drivers/mss_nvm/mss_nvm.c **** #define BYTES_PER_PAGE                  (BITS_PER_PAGE / 8u)    /* Number of bytes per page */
  29:../src/drivers/mss_nvm/mss_nvm.c **** 
  30:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM_OFFSET_SIGNIFICANT_BITS     0x0007FFFFu
  31:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM1_BOTTOM_OFFSET              0x00040000u
  32:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM1_TOP_OFFSET                 0x0007FFFFu
  33:../src/drivers/mss_nvm/mss_nvm.c **** 
  34:../src/drivers/mss_nvm/mss_nvm.c **** #define PARAM_LOCK_PAGE_FLAG            0x00000002u
  35:../src/drivers/mss_nvm/mss_nvm.c **** #define ACCESS_DENIED_FLAG_CLEAR        0x00000002u
  36:../src/drivers/mss_nvm/mss_nvm.c **** 
  37:../src/drivers/mss_nvm/mss_nvm.c **** #define PAGES_PER_BLOCK                 2048u
  38:../src/drivers/mss_nvm/mss_nvm.c **** 
  39:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM_BOTTOM_OFFSET               0x00000000u
  40:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM_TOP_OFFSET                  0x0007FFFFu
  41:../src/drivers/mss_nvm/mss_nvm.c **** 
  42:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM_BASE_ADDRESS                0x60000000u
  43:../src/drivers/mss_nvm/mss_nvm.c ****   
  44:../src/drivers/mss_nvm/mss_nvm.c **** #define PAGE_ADDR_MASK                  0xFFFFFF80u
  45:../src/drivers/mss_nvm/mss_nvm.c **** 
  46:../src/drivers/mss_nvm/mss_nvm.c **** #define WD_WORD_SIZE                    32u
  47:../src/drivers/mss_nvm/mss_nvm.c **** 
  48:../src/drivers/mss_nvm/mss_nvm.c **** #define NB_OF_BYTES_IN_A_WORD           4u
  49:../src/drivers/mss_nvm/mss_nvm.c **** 
  50:../src/drivers/mss_nvm/mss_nvm.c **** #define MAX_512K_OFFSET                 0x00080000u
  51:../src/drivers/mss_nvm/mss_nvm.c **** 
  52:../src/drivers/mss_nvm/mss_nvm.c **** #define WRITE_ERROR_MASK                (MSS_NVM_VERIFY_FAIL | \
  53:../src/drivers/mss_nvm/mss_nvm.c ****                                             MSS_NVM_EVERIFY_FAIL | \
  54:../src/drivers/mss_nvm/mss_nvm.c ****                                             MSS_NVM_WVERIFY_FAIL | \
  55:../src/drivers/mss_nvm/mss_nvm.c ****                                             MSS_NVM_PEFAIL_LOCK | \
  56:../src/drivers/mss_nvm/mss_nvm.c ****                                             MSS_NVM_WR_DENIED)
  57:../src/drivers/mss_nvm/mss_nvm.c ****                                         
  58:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM_FREQRNG_MASK                0xFFFFE01Fu
  59:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM_FREQRNG_MAX                 ((uint32_t)0xFF << 5u)     /* FREQRNG is set to 15. */
  60:../src/drivers/mss_nvm/mss_nvm.c **** 
  61:../src/drivers/mss_nvm/mss_nvm.c **** #define ON                              0x1u
  62:../src/drivers/mss_nvm/mss_nvm.c **** #define OFF                             0x0u
  63:../src/drivers/mss_nvm/mss_nvm.c **** 
  64:../src/drivers/mss_nvm/mss_nvm.c **** /*******************************************************************************
  65:../src/drivers/mss_nvm/mss_nvm.c ****  * Combined status definitions
  66:../src/drivers/mss_nvm/mss_nvm.c ****  * Below definitions should be used to decoded the bit encoded status returned 
  67:../src/drivers/mss_nvm/mss_nvm.c ****  * by the function MSS_NVM_get_status().
  68:../src/drivers/mss_nvm/mss_nvm.c ****  */
  69:../src/drivers/mss_nvm/mss_nvm.c **** #define MSS_NVM_BUSY_B                  (1u)                    /* NVM is performing an internal op
  70:../src/drivers/mss_nvm/mss_nvm.c **** #define MSS_NVM_VERIFY_FAIL             ((uint32_t)1 << 1u)     /* NVM verify operation failed */
  71:../src/drivers/mss_nvm/mss_nvm.c **** #define MSS_NVM_EVERIFY_FAIL            ((uint32_t)1 << 2u)     /* NVM erase verify operation faile
  72:../src/drivers/mss_nvm/mss_nvm.c **** #define MSS_NVM_WVERIFY_FAIL            ((uint32_t)1 << 3u)     /* NVM write verify operation faile
  73:../src/drivers/mss_nvm/mss_nvm.c **** #define MSS_NVM_PEFAIL_LOCK             ((uint32_t)1 << 4u)     /* NVM program / erase operation fa
  74:../src/drivers/mss_nvm/mss_nvm.c **** #define MSS_NVM_WRCNT_OVER              ((uint32_t)1 << 5u)     /* NVM write count overflowed */
  75:../src/drivers/mss_nvm/mss_nvm.c **** #define MSS_NVM_WR_DENIED               ((uint32_t)1 << 18u)    /* NVM write is denied due to prote
  76:../src/drivers/mss_nvm/mss_nvm.c **** 
  77:../src/drivers/mss_nvm/mss_nvm.c **** /*******************************************************************************
  78:../src/drivers/mss_nvm/mss_nvm.c ****  * eNVM Block Index values
  79:../src/drivers/mss_nvm/mss_nvm.c ****  */
  80:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM_BLOCK_0                     0u
  81:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM_BLOCK_1                     1u
  82:../src/drivers/mss_nvm/mss_nvm.c **** 
  83:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************/
  84:../src/drivers/mss_nvm/mss_nvm.c **** /* Global data definitions                                                */
  85:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************/
  86:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
  87:../src/drivers/mss_nvm/mss_nvm.c ****  * Look-up table for NVM blocks.
  88:../src/drivers/mss_nvm/mss_nvm.c ****  */
  89:../src/drivers/mss_nvm/mss_nvm.c **** static NVM_TypeDef * const g_nvm[] = 
  90:../src/drivers/mss_nvm/mss_nvm.c **** {
  91:../src/drivers/mss_nvm/mss_nvm.c ****     ENVM_1,
  92:../src/drivers/mss_nvm/mss_nvm.c ****     ENVM_2
  93:../src/drivers/mss_nvm/mss_nvm.c **** };
  94:../src/drivers/mss_nvm/mss_nvm.c **** 
  95:../src/drivers/mss_nvm/mss_nvm.c **** static NVM32_TypeDef * const g_nvm32[] =
  96:../src/drivers/mss_nvm/mss_nvm.c **** {
  97:../src/drivers/mss_nvm/mss_nvm.c ****     (NVM32_TypeDef *)ENVM1_BASE,
  98:../src/drivers/mss_nvm/mss_nvm.c ****     (NVM32_TypeDef *)ENVM2_BASE
  99:../src/drivers/mss_nvm/mss_nvm.c **** };
 100:../src/drivers/mss_nvm/mss_nvm.c **** 
 101:../src/drivers/mss_nvm/mss_nvm.c **** /* This variable is used for do not lock the page,
 102:../src/drivers/mss_nvm/mss_nvm.c ****  * if eNVM write or No R/W protection is enabled
 103:../src/drivers/mss_nvm/mss_nvm.c ****  */
 104:../src/drivers/mss_nvm/mss_nvm.c **** static uint8_t g_do_not_lock_page = OFF;
 105:../src/drivers/mss_nvm/mss_nvm.c ****         
 106:../src/drivers/mss_nvm/mss_nvm.c ****         
 107:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************/
 108:../src/drivers/mss_nvm/mss_nvm.c **** /* Private function declarations                                          */
 109:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************/
 110:../src/drivers/mss_nvm/mss_nvm.c **** static nvm_status_t request_nvm_access(uint32_t nvm_block_id);
 111:../src/drivers/mss_nvm/mss_nvm.c **** static nvm_status_t get_ctrl_access(uint32_t nvm_offset, uint32_t length);
 112:../src/drivers/mss_nvm/mss_nvm.c **** static void release_ctrl_access(void);
 113:../src/drivers/mss_nvm/mss_nvm.c **** static uint32_t get_remaining_page_length(uint32_t offset, uint32_t length);
 114:../src/drivers/mss_nvm/mss_nvm.c **** static uint32_t wait_nvm_ready(uint32_t block);
 115:../src/drivers/mss_nvm/mss_nvm.c **** static nvm_status_t get_error_code(uint32_t nvm_hw_status);
 116:../src/drivers/mss_nvm/mss_nvm.c **** static nvm_status_t check_protection_reserved_nvm(uint32_t offset, uint32_t length);
 117:../src/drivers/mss_nvm/mss_nvm.c **** static uint32_t protection_check(uint32_t protect_user, uint32_t length);
 118:../src/drivers/mss_nvm/mss_nvm.c **** 
 119:../src/drivers/mss_nvm/mss_nvm.c **** static void fill_wd_buffer
 120:../src/drivers/mss_nvm/mss_nvm.c **** (
 121:../src/drivers/mss_nvm/mss_nvm.c ****     const uint8_t * p_data,
 122:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t  length,
 123:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t block,
 124:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t offset
 125:../src/drivers/mss_nvm/mss_nvm.c **** );
 126:../src/drivers/mss_nvm/mss_nvm.c **** 
 127:../src/drivers/mss_nvm/mss_nvm.c **** static uint32_t 
 128:../src/drivers/mss_nvm/mss_nvm.c **** write_nvm
 129:../src/drivers/mss_nvm/mss_nvm.c **** (
 130:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t addr,
 131:../src/drivers/mss_nvm/mss_nvm.c ****     const uint8_t * pidata,
 132:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t length,
 133:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t lock_page,
 134:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t * p_status
 135:../src/drivers/mss_nvm/mss_nvm.c **** );
 136:../src/drivers/mss_nvm/mss_nvm.c **** 
 137:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************/
 138:../src/drivers/mss_nvm/mss_nvm.c **** /* Public function definitions                                            */
 139:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************/
 140:../src/drivers/mss_nvm/mss_nvm.c **** 
 141:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 142:../src/drivers/mss_nvm/mss_nvm.c ****  * See mss_nvm.h for details of how to use this function.
 143:../src/drivers/mss_nvm/mss_nvm.c ****  */
 144:../src/drivers/mss_nvm/mss_nvm.c **** nvm_status_t
 145:../src/drivers/mss_nvm/mss_nvm.c **** NVM_write
 146:../src/drivers/mss_nvm/mss_nvm.c **** (
 147:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t start_addr,
 148:../src/drivers/mss_nvm/mss_nvm.c ****     const uint8_t * pidata,
 149:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t length,
 150:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t lock_page
 151:../src/drivers/mss_nvm/mss_nvm.c **** )
 152:../src/drivers/mss_nvm/mss_nvm.c **** {
 153:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 154:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t lock_status = NVM_SUCCESS;
 155:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t nvm_offset;
 156:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t device_version;
 157:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t initial_nvm_config;
 158:../src/drivers/mss_nvm/mss_nvm.c **** 
 159:../src/drivers/mss_nvm/mss_nvm.c ****     g_do_not_lock_page = OFF;
 160:../src/drivers/mss_nvm/mss_nvm.c ****     
 161:../src/drivers/mss_nvm/mss_nvm.c ****     /* 
 162:../src/drivers/mss_nvm/mss_nvm.c ****      * SAR 57547: Set the FREQRNG field of the eNVM configuration register 
 163:../src/drivers/mss_nvm/mss_nvm.c ****      * to its maximum value (i.e. 15) to ensure successful writes to eNVM. 
 164:../src/drivers/mss_nvm/mss_nvm.c ****      * Store the value of the eNVM configuration before updating it, so 
 165:../src/drivers/mss_nvm/mss_nvm.c ****      * that the prior configuration can be restored when the eNVM write
 166:../src/drivers/mss_nvm/mss_nvm.c ****      * operation has completed. 
 167:../src/drivers/mss_nvm/mss_nvm.c ****      */
 168:../src/drivers/mss_nvm/mss_nvm.c ****     initial_nvm_config = SYSREG->ENVM_CR;
 169:../src/drivers/mss_nvm/mss_nvm.c ****     SYSREG->ENVM_CR = (initial_nvm_config & NVM_FREQRNG_MASK) | NVM_FREQRNG_MAX;
 170:../src/drivers/mss_nvm/mss_nvm.c **** 
 171:../src/drivers/mss_nvm/mss_nvm.c ****     /* Check input parameters */
 172:../src/drivers/mss_nvm/mss_nvm.c ****     if((start_addr >= (NVM_BASE_ADDRESS + NVM_TOP_OFFSET)) ||
 173:../src/drivers/mss_nvm/mss_nvm.c ****         ((start_addr >= NVM_TOP_OFFSET) &&
 174:../src/drivers/mss_nvm/mss_nvm.c ****         (start_addr < NVM_BASE_ADDRESS)) ||
 175:../src/drivers/mss_nvm/mss_nvm.c ****         (0u == pidata) ||
 176:../src/drivers/mss_nvm/mss_nvm.c ****         (0u == length) ||
 177:../src/drivers/mss_nvm/mss_nvm.c ****         (lock_page > PARAM_LOCK_PAGE_FLAG))
 178:../src/drivers/mss_nvm/mss_nvm.c ****     {
 179:../src/drivers/mss_nvm/mss_nvm.c ****         status =  NVM_INVALID_PARAMETER;
 180:../src/drivers/mss_nvm/mss_nvm.c ****     }
 181:../src/drivers/mss_nvm/mss_nvm.c ****     else
 182:../src/drivers/mss_nvm/mss_nvm.c ****     {
 183:../src/drivers/mss_nvm/mss_nvm.c **** 
 184:../src/drivers/mss_nvm/mss_nvm.c ****         /*
 185:../src/drivers/mss_nvm/mss_nvm.c ****          * Prevent pages being locked for silicon versions which do not allow
 186:../src/drivers/mss_nvm/mss_nvm.c ****          * locked pages to be unlocked.
 187:../src/drivers/mss_nvm/mss_nvm.c ****          */
 188:../src/drivers/mss_nvm/mss_nvm.c ****         device_version = SYSREG->DEVICE_VERSION;
 189:../src/drivers/mss_nvm/mss_nvm.c ****         if((0x0000F802u == device_version) || (0x0001F802u == device_version))
 190:../src/drivers/mss_nvm/mss_nvm.c ****         {
 191:../src/drivers/mss_nvm/mss_nvm.c ****             lock_page = NVM_DO_NOT_LOCK_PAGE;
 192:../src/drivers/mss_nvm/mss_nvm.c ****         }
 193:../src/drivers/mss_nvm/mss_nvm.c **** 
 194:../src/drivers/mss_nvm/mss_nvm.c ****         /* Ignore upper address bits to ignore remapping setting. */
 195:../src/drivers/mss_nvm/mss_nvm.c ****         nvm_offset = start_addr & NVM_OFFSET_SIGNIFICANT_BITS;  
 196:../src/drivers/mss_nvm/mss_nvm.c ****         
 197:../src/drivers/mss_nvm/mss_nvm.c ****         /* 
 198:../src/drivers/mss_nvm/mss_nvm.c ****          * SAR 70908.
 199:../src/drivers/mss_nvm/mss_nvm.c ****          * Check nvm offset is in protection or reserved area of eNVM
 200:../src/drivers/mss_nvm/mss_nvm.c ****          */
 201:../src/drivers/mss_nvm/mss_nvm.c ****         status = check_protection_reserved_nvm(nvm_offset, length);
 202:../src/drivers/mss_nvm/mss_nvm.c **** 
 203:../src/drivers/mss_nvm/mss_nvm.c ****         if(NVM_SUCCESS == status)
 204:../src/drivers/mss_nvm/mss_nvm.c ****         {
 205:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
 206:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 79545. 
 207:../src/drivers/mss_nvm/mss_nvm.c ****              * If eNVM write or No R/W protected is enabled, then don't lock the page
 208:../src/drivers/mss_nvm/mss_nvm.c ****              */
 209:../src/drivers/mss_nvm/mss_nvm.c ****             if((g_do_not_lock_page == ON)  && (NVM_LOCK_PAGE == lock_page)) 
 210:../src/drivers/mss_nvm/mss_nvm.c ****             {
 211:../src/drivers/mss_nvm/mss_nvm.c ****                 lock_page = NVM_DO_NOT_LOCK_PAGE;
 212:../src/drivers/mss_nvm/mss_nvm.c ****                 lock_status = NVM_PAGE_LOCK_WARNING;
 213:../src/drivers/mss_nvm/mss_nvm.c ****             }
 214:../src/drivers/mss_nvm/mss_nvm.c ****             
 215:../src/drivers/mss_nvm/mss_nvm.c ****             device_version = device_version & 0xFFFFu;
 216:../src/drivers/mss_nvm/mss_nvm.c ****             
 217:../src/drivers/mss_nvm/mss_nvm.c ****             /* Don't lock pages of 090/150  device -eNVM1 memory */
 218:../src/drivers/mss_nvm/mss_nvm.c ****             if((0xF807u == device_version) || (0xF806u == device_version))
 219:../src/drivers/mss_nvm/mss_nvm.c ****             {
 220:../src/drivers/mss_nvm/mss_nvm.c ****                 if(((nvm_offset >= NVM1_BOTTOM_OFFSET) || ((nvm_offset + length) > NVM1_BOTTOM_OFFS
 221:../src/drivers/mss_nvm/mss_nvm.c ****                             && (NVM_LOCK_PAGE == lock_page)) 
 222:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 223:../src/drivers/mss_nvm/mss_nvm.c ****                     lock_page = NVM_DO_NOT_LOCK_PAGE;
 224:../src/drivers/mss_nvm/mss_nvm.c ****                     lock_status = NVM_PAGE_LOCK_WARNING;
 225:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 226:../src/drivers/mss_nvm/mss_nvm.c ****             }
 227:../src/drivers/mss_nvm/mss_nvm.c ****             /* Don't lock pages of 060 device */
 228:../src/drivers/mss_nvm/mss_nvm.c ****             else if((0xF808u == device_version) && (NVM_LOCK_PAGE == lock_page)) 
 229:../src/drivers/mss_nvm/mss_nvm.c ****             {
 230:../src/drivers/mss_nvm/mss_nvm.c ****                 lock_page = NVM_DO_NOT_LOCK_PAGE;
 231:../src/drivers/mss_nvm/mss_nvm.c ****                 lock_status = NVM_PAGE_LOCK_WARNING;
 232:../src/drivers/mss_nvm/mss_nvm.c ****             }
 233:../src/drivers/mss_nvm/mss_nvm.c ****             
 234:../src/drivers/mss_nvm/mss_nvm.c ****             /* Gain exclusive access to eNVM controller */
 235:../src/drivers/mss_nvm/mss_nvm.c ****             status = get_ctrl_access(nvm_offset, length);
 236:../src/drivers/mss_nvm/mss_nvm.c **** 
 237:../src/drivers/mss_nvm/mss_nvm.c ****             /* Write eNVM one page at a time. */
 238:../src/drivers/mss_nvm/mss_nvm.c ****             if(NVM_SUCCESS == status)
 239:../src/drivers/mss_nvm/mss_nvm.c ****             {
 240:../src/drivers/mss_nvm/mss_nvm.c ****                 uint32_t remaining_length = length;
 241:../src/drivers/mss_nvm/mss_nvm.c ****                 uint32_t errors_and_warnings;
 242:../src/drivers/mss_nvm/mss_nvm.c ****                 
 243:../src/drivers/mss_nvm/mss_nvm.c ****                 while(remaining_length > 0u)
 244:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 245:../src/drivers/mss_nvm/mss_nvm.c ****                     uint32_t length_written;
 246:../src/drivers/mss_nvm/mss_nvm.c ****                     uint32_t nvm_hw_status = 0u;
 247:../src/drivers/mss_nvm/mss_nvm.c **** 
 248:../src/drivers/mss_nvm/mss_nvm.c ****                     length_written = write_nvm(start_addr + (length - remaining_length),
 249:../src/drivers/mss_nvm/mss_nvm.c ****                                                 &pidata[length - remaining_length],
 250:../src/drivers/mss_nvm/mss_nvm.c ****                                                 remaining_length,
 251:../src/drivers/mss_nvm/mss_nvm.c ****                                                 lock_page,
 252:../src/drivers/mss_nvm/mss_nvm.c ****                                                 &nvm_hw_status);
 253:../src/drivers/mss_nvm/mss_nvm.c **** 
 254:../src/drivers/mss_nvm/mss_nvm.c ****                     /* Check for errors and warnings. */
 255:../src/drivers/mss_nvm/mss_nvm.c ****                     errors_and_warnings = nvm_hw_status & (WRITE_ERROR_MASK | MSS_NVM_WRCNT_OVER);
 256:../src/drivers/mss_nvm/mss_nvm.c ****                     if(errors_and_warnings)
 257:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 258:../src/drivers/mss_nvm/mss_nvm.c ****                        /* 
 259:../src/drivers/mss_nvm/mss_nvm.c ****                         * Ensure that the status returned by the NVM_write()
 260:../src/drivers/mss_nvm/mss_nvm.c ****                         * function is NVM_WRITE_THRESHOLD_WARNING if at least one
 261:../src/drivers/mss_nvm/mss_nvm.c ****                         * of the written eNVM pages indicate a write over
 262:../src/drivers/mss_nvm/mss_nvm.c ****                         * threshold condition.
 263:../src/drivers/mss_nvm/mss_nvm.c ****                         */ 
 264:../src/drivers/mss_nvm/mss_nvm.c ****                         status = get_error_code(nvm_hw_status);
 265:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 266:../src/drivers/mss_nvm/mss_nvm.c **** 
 267:../src/drivers/mss_nvm/mss_nvm.c ****                     if((NVM_SUCCESS == status) || (NVM_WRITE_THRESHOLD_WARNING == status ))
 268:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 269:../src/drivers/mss_nvm/mss_nvm.c ****                         if(remaining_length > length_written)
 270:../src/drivers/mss_nvm/mss_nvm.c ****                         {
 271:../src/drivers/mss_nvm/mss_nvm.c ****                             remaining_length -= length_written;
 272:../src/drivers/mss_nvm/mss_nvm.c ****                         }
 273:../src/drivers/mss_nvm/mss_nvm.c ****                         else
 274:../src/drivers/mss_nvm/mss_nvm.c ****                         {
 275:../src/drivers/mss_nvm/mss_nvm.c ****                             remaining_length = 0u;
 276:../src/drivers/mss_nvm/mss_nvm.c ****                         }
 277:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 278:../src/drivers/mss_nvm/mss_nvm.c ****                     else
 279:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 280:../src/drivers/mss_nvm/mss_nvm.c ****                         remaining_length = 0u;
 281:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 282:../src/drivers/mss_nvm/mss_nvm.c **** 
 283:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 284:../src/drivers/mss_nvm/mss_nvm.c **** 
 285:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Release eNVM controllers so that other masters can gain access to it. */
 286:../src/drivers/mss_nvm/mss_nvm.c ****                 release_ctrl_access();
 287:../src/drivers/mss_nvm/mss_nvm.c ****             }
 288:../src/drivers/mss_nvm/mss_nvm.c ****         }
 289:../src/drivers/mss_nvm/mss_nvm.c ****     }
 290:../src/drivers/mss_nvm/mss_nvm.c **** 
 291:../src/drivers/mss_nvm/mss_nvm.c ****     g_do_not_lock_page = OFF;
 292:../src/drivers/mss_nvm/mss_nvm.c **** 
 293:../src/drivers/mss_nvm/mss_nvm.c ****     /* Restore back to original value. */
 294:../src/drivers/mss_nvm/mss_nvm.c ****     SYSREG->ENVM_CR = initial_nvm_config;
 295:../src/drivers/mss_nvm/mss_nvm.c ****     
 296:../src/drivers/mss_nvm/mss_nvm.c ****     if((NVM_SUCCESS == status) && (NVM_PAGE_LOCK_WARNING == lock_status))
 297:../src/drivers/mss_nvm/mss_nvm.c ****     {
 298:../src/drivers/mss_nvm/mss_nvm.c ****         status = lock_status;
 299:../src/drivers/mss_nvm/mss_nvm.c ****     }
 300:../src/drivers/mss_nvm/mss_nvm.c ****     return status;
 301:../src/drivers/mss_nvm/mss_nvm.c **** }
 302:../src/drivers/mss_nvm/mss_nvm.c **** 
 303:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 304:../src/drivers/mss_nvm/mss_nvm.c ****   Generate error code based on NVM status value.
 305:../src/drivers/mss_nvm/mss_nvm.c ****   
 306:../src/drivers/mss_nvm/mss_nvm.c ****   The hardware nvm status passed as parameter is expected to be masked using the
 307:../src/drivers/mss_nvm/mss_nvm.c ****   following mask:
 308:../src/drivers/mss_nvm/mss_nvm.c ****                 (MSS_NVM_VERIFY_FAIL | \
 309:../src/drivers/mss_nvm/mss_nvm.c ****                  MSS_NVM_EVERIFY_FAIL | \
 310:../src/drivers/mss_nvm/mss_nvm.c ****                  MSS_NVM_WVERIFY_FAIL | \
 311:../src/drivers/mss_nvm/mss_nvm.c ****                  MSS_NVM_PEFAIL_LOCK | \
 312:../src/drivers/mss_nvm/mss_nvm.c ****                  MSS_NVM_WRCNT_OVER | \
 313:../src/drivers/mss_nvm/mss_nvm.c ****                  MSS_NVM_WR_DENIED)
 314:../src/drivers/mss_nvm/mss_nvm.c ****   
 315:../src/drivers/mss_nvm/mss_nvm.c ****  */
 316:../src/drivers/mss_nvm/mss_nvm.c **** static nvm_status_t get_error_code(uint32_t nvm_hw_status)
 317:../src/drivers/mss_nvm/mss_nvm.c **** {
 318:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 319:../src/drivers/mss_nvm/mss_nvm.c ****     
 320:../src/drivers/mss_nvm/mss_nvm.c ****     if(nvm_hw_status & MSS_NVM_WR_DENIED)
 321:../src/drivers/mss_nvm/mss_nvm.c ****     {
 322:../src/drivers/mss_nvm/mss_nvm.c ****         status = NVM_PROTECTION_ERROR;
 323:../src/drivers/mss_nvm/mss_nvm.c ****     }
 324:../src/drivers/mss_nvm/mss_nvm.c ****     else if(nvm_hw_status & MSS_NVM_PEFAIL_LOCK)
 325:../src/drivers/mss_nvm/mss_nvm.c ****     {
 326:../src/drivers/mss_nvm/mss_nvm.c ****         status = NVM_PAGE_LOCK_ERROR;
 327:../src/drivers/mss_nvm/mss_nvm.c ****     }
 328:../src/drivers/mss_nvm/mss_nvm.c ****     else if(nvm_hw_status & (MSS_NVM_VERIFY_FAIL |
 329:../src/drivers/mss_nvm/mss_nvm.c ****             MSS_NVM_EVERIFY_FAIL | MSS_NVM_WVERIFY_FAIL))
 330:../src/drivers/mss_nvm/mss_nvm.c ****     {
 331:../src/drivers/mss_nvm/mss_nvm.c ****         status = NVM_VERIFY_FAILURE;
 332:../src/drivers/mss_nvm/mss_nvm.c ****     }
 333:../src/drivers/mss_nvm/mss_nvm.c ****     else if(nvm_hw_status & MSS_NVM_WRCNT_OVER)
 334:../src/drivers/mss_nvm/mss_nvm.c ****     {
 335:../src/drivers/mss_nvm/mss_nvm.c ****         status = NVM_WRITE_THRESHOLD_WARNING;
 336:../src/drivers/mss_nvm/mss_nvm.c ****     }
 337:../src/drivers/mss_nvm/mss_nvm.c ****     else
 338:../src/drivers/mss_nvm/mss_nvm.c ****     {
 339:../src/drivers/mss_nvm/mss_nvm.c ****         status = NVM_SUCCESS;
 340:../src/drivers/mss_nvm/mss_nvm.c ****     }
 341:../src/drivers/mss_nvm/mss_nvm.c ****     
 342:../src/drivers/mss_nvm/mss_nvm.c ****     return status;
 343:../src/drivers/mss_nvm/mss_nvm.c **** }
 344:../src/drivers/mss_nvm/mss_nvm.c **** 
 345:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 346:../src/drivers/mss_nvm/mss_nvm.c ****  * See mss_nvm.h for details of how to use this function.
 347:../src/drivers/mss_nvm/mss_nvm.c ****  */
 348:../src/drivers/mss_nvm/mss_nvm.c **** nvm_status_t
 349:../src/drivers/mss_nvm/mss_nvm.c **** NVM_unlock
 350:../src/drivers/mss_nvm/mss_nvm.c **** (
 351:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t start_addr,
 352:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t length
 353:../src/drivers/mss_nvm/mss_nvm.c **** )
 354:../src/drivers/mss_nvm/mss_nvm.c **** {
 355:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 356:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t nvm_offset;
 357:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t first_page;
 358:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t last_page;
 359:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t current_page;
 360:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t current_offset;
 361:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t initial_nvm_config;
 362:../src/drivers/mss_nvm/mss_nvm.c **** 
 363:../src/drivers/mss_nvm/mss_nvm.c ****     /* 
 364:../src/drivers/mss_nvm/mss_nvm.c ****      * SAR 57547: Set the FREQRNG field of the eNVM configuration register 
 365:../src/drivers/mss_nvm/mss_nvm.c ****      * to its maximum value (i.e. 15) to ensure successful writes to eNVM. 
 366:../src/drivers/mss_nvm/mss_nvm.c ****      * Store the value of the eNVM configuration before updating it, so 
 367:../src/drivers/mss_nvm/mss_nvm.c ****      * that the prior configuration can be restored when the eNVM write
 368:../src/drivers/mss_nvm/mss_nvm.c ****      * operation has completed. 
 369:../src/drivers/mss_nvm/mss_nvm.c ****      */
 370:../src/drivers/mss_nvm/mss_nvm.c ****     initial_nvm_config = SYSREG->ENVM_CR;
 371:../src/drivers/mss_nvm/mss_nvm.c ****     SYSREG->ENVM_CR = (initial_nvm_config & NVM_FREQRNG_MASK) | NVM_FREQRNG_MAX;
 372:../src/drivers/mss_nvm/mss_nvm.c ****     
 373:../src/drivers/mss_nvm/mss_nvm.c ****     /* Check input parameters */
 374:../src/drivers/mss_nvm/mss_nvm.c ****     if((start_addr >= (NVM_BASE_ADDRESS + NVM_TOP_OFFSET)) ||
 375:../src/drivers/mss_nvm/mss_nvm.c ****         ((start_addr >= NVM_TOP_OFFSET) &&
 376:../src/drivers/mss_nvm/mss_nvm.c ****         (start_addr < NVM_BASE_ADDRESS)) ||
 377:../src/drivers/mss_nvm/mss_nvm.c ****         (0u == length))
 378:../src/drivers/mss_nvm/mss_nvm.c ****     {
 379:../src/drivers/mss_nvm/mss_nvm.c ****         status =  NVM_INVALID_PARAMETER;
 380:../src/drivers/mss_nvm/mss_nvm.c ****     }
 381:../src/drivers/mss_nvm/mss_nvm.c ****     else
 382:../src/drivers/mss_nvm/mss_nvm.c ****     {
 383:../src/drivers/mss_nvm/mss_nvm.c ****         /* Ignore upper address bits to ignore remapping setting. */
 384:../src/drivers/mss_nvm/mss_nvm.c ****         nvm_offset = start_addr & NVM_OFFSET_SIGNIFICANT_BITS;
 385:../src/drivers/mss_nvm/mss_nvm.c ****         
 386:../src/drivers/mss_nvm/mss_nvm.c ****         /* Check nvm offset is in protection or reserved area of eNVM */
 387:../src/drivers/mss_nvm/mss_nvm.c ****         status = check_protection_reserved_nvm(nvm_offset, length);
 388:../src/drivers/mss_nvm/mss_nvm.c **** 
 389:../src/drivers/mss_nvm/mss_nvm.c ****         if(NVM_SUCCESS == status)
 390:../src/drivers/mss_nvm/mss_nvm.c ****         {
 391:../src/drivers/mss_nvm/mss_nvm.c ****             first_page = nvm_offset / BYTES_PER_PAGE;
 392:../src/drivers/mss_nvm/mss_nvm.c ****             last_page = (nvm_offset + (length - 1u)) / BYTES_PER_PAGE;
 393:../src/drivers/mss_nvm/mss_nvm.c **** 
 394:../src/drivers/mss_nvm/mss_nvm.c ****             /* Gain exclusive access to eNVM controller */
 395:../src/drivers/mss_nvm/mss_nvm.c ****             status = get_ctrl_access(nvm_offset, length);
 396:../src/drivers/mss_nvm/mss_nvm.c **** 
 397:../src/drivers/mss_nvm/mss_nvm.c ****             /* Unlock eNVM one page at a time. */
 398:../src/drivers/mss_nvm/mss_nvm.c ****             if(NVM_SUCCESS == status)
 399:../src/drivers/mss_nvm/mss_nvm.c ****             {
 400:../src/drivers/mss_nvm/mss_nvm.c ****                 uint32_t block;
 401:../src/drivers/mss_nvm/mss_nvm.c ****                 uint32_t inc;
 402:../src/drivers/mss_nvm/mss_nvm.c ****                 uint32_t * p_nvm32;
 403:../src/drivers/mss_nvm/mss_nvm.c ****                 uint32_t errors_and_warnings;
 404:../src/drivers/mss_nvm/mss_nvm.c **** 
 405:../src/drivers/mss_nvm/mss_nvm.c **** 
 406:../src/drivers/mss_nvm/mss_nvm.c ****                 for(current_page = first_page; (current_page <= last_page) &&
 407:../src/drivers/mss_nvm/mss_nvm.c ****                     ((NVM_SUCCESS == status) ||(NVM_WRITE_THRESHOLD_WARNING == status));
 408:../src/drivers/mss_nvm/mss_nvm.c ****                     ++current_page)
 409:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 410:../src/drivers/mss_nvm/mss_nvm.c ****                     uint32_t ctrl_status;
 411:../src/drivers/mss_nvm/mss_nvm.c **** 
 412:../src/drivers/mss_nvm/mss_nvm.c ****                     if(current_page >= PAGES_PER_BLOCK)
 413:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 414:../src/drivers/mss_nvm/mss_nvm.c ****                         block = NVM_BLOCK_1;
 415:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 416:../src/drivers/mss_nvm/mss_nvm.c ****                     else
 417:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 418:../src/drivers/mss_nvm/mss_nvm.c ****                         block = NVM_BLOCK_0;
 419:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 420:../src/drivers/mss_nvm/mss_nvm.c **** 
 421:../src/drivers/mss_nvm/mss_nvm.c ****                     if(g_nvm[block]->STATUS & MSS_NVM_WR_DENIED)
 422:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 423:../src/drivers/mss_nvm/mss_nvm.c ****                         /* Clear the access denied flag */
 424:../src/drivers/mss_nvm/mss_nvm.c ****                         g_nvm[block]->CLRHINT |= ACCESS_DENIED_FLAG_CLEAR;
 425:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 426:../src/drivers/mss_nvm/mss_nvm.c **** 
 427:../src/drivers/mss_nvm/mss_nvm.c ****                     current_offset = (current_page << 0x7u);
 428:../src/drivers/mss_nvm/mss_nvm.c ****                     p_nvm32 = (uint32_t *)(NVM_BASE_ADDRESS + current_offset);
 429:../src/drivers/mss_nvm/mss_nvm.c ****                      
 430:../src/drivers/mss_nvm/mss_nvm.c ****                     for(inc = 0u; inc < WD_WORD_SIZE; ++inc)
 431:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 432:../src/drivers/mss_nvm/mss_nvm.c ****                         g_nvm32[block]->WD[inc] = p_nvm32[inc];
 433:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 434:../src/drivers/mss_nvm/mss_nvm.c ****                     
 435:../src/drivers/mss_nvm/mss_nvm.c ****                     g_nvm[block]->PAGE_LOCK = NVM_DO_NOT_LOCK_PAGE;
 436:../src/drivers/mss_nvm/mss_nvm.c ****                     g_nvm[block]->CMD = USER_UNLOCK | (current_offset & PAGE_ADDR_MASK);
 437:../src/drivers/mss_nvm/mss_nvm.c **** 
 438:../src/drivers/mss_nvm/mss_nvm.c ****                     /* Issue program command */
 439:../src/drivers/mss_nvm/mss_nvm.c ****                     g_nvm[block]->CMD = PROG_ADS | (current_offset & PAGE_ADDR_MASK);
 440:../src/drivers/mss_nvm/mss_nvm.c **** 
 441:../src/drivers/mss_nvm/mss_nvm.c ****                     /* Wait for NVM to become ready. */
 442:../src/drivers/mss_nvm/mss_nvm.c ****                     ctrl_status = wait_nvm_ready(block);
 443:../src/drivers/mss_nvm/mss_nvm.c **** 
 444:../src/drivers/mss_nvm/mss_nvm.c ****                     /* Check for errors and warnings. */
 445:../src/drivers/mss_nvm/mss_nvm.c ****                     errors_and_warnings = ctrl_status & (WRITE_ERROR_MASK | MSS_NVM_WRCNT_OVER);
 446:../src/drivers/mss_nvm/mss_nvm.c ****                     if(errors_and_warnings)
 447:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 448:../src/drivers/mss_nvm/mss_nvm.c ****                         status = get_error_code(ctrl_status);
 449:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 450:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 451:../src/drivers/mss_nvm/mss_nvm.c **** 
 452:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Release eNVM controllers so that other masters can gain access to it. */
 453:../src/drivers/mss_nvm/mss_nvm.c ****                 release_ctrl_access();
 454:../src/drivers/mss_nvm/mss_nvm.c ****             }
 455:../src/drivers/mss_nvm/mss_nvm.c ****         }
 456:../src/drivers/mss_nvm/mss_nvm.c ****     }
 457:../src/drivers/mss_nvm/mss_nvm.c ****     /* Restore back to original value. */
 458:../src/drivers/mss_nvm/mss_nvm.c ****     SYSREG->ENVM_CR = initial_nvm_config;
 459:../src/drivers/mss_nvm/mss_nvm.c ****     
 460:../src/drivers/mss_nvm/mss_nvm.c ****     return status;
 461:../src/drivers/mss_nvm/mss_nvm.c **** }
 462:../src/drivers/mss_nvm/mss_nvm.c **** 
 463:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************/
 464:../src/drivers/mss_nvm/mss_nvm.c **** /* Private function definitions                                            */
 465:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************/
 466:../src/drivers/mss_nvm/mss_nvm.c **** 
 467:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 468:../src/drivers/mss_nvm/mss_nvm.c ****  *  Gain access to eNVM controller
 469:../src/drivers/mss_nvm/mss_nvm.c ****  */
 470:../src/drivers/mss_nvm/mss_nvm.c **** #define ACCESS_REQUEST_TIMEOUT      0x00800000u
 471:../src/drivers/mss_nvm/mss_nvm.c **** #define REQUEST_NVM_ACCESS          0x01u
 472:../src/drivers/mss_nvm/mss_nvm.c **** #define CORTEX_M3_ACCESS_GRANTED    0x05u
 473:../src/drivers/mss_nvm/mss_nvm.c **** 
 474:../src/drivers/mss_nvm/mss_nvm.c **** static uint8_t g_envm_ctrl_locks = 0x00u;
 475:../src/drivers/mss_nvm/mss_nvm.c **** 
 476:../src/drivers/mss_nvm/mss_nvm.c **** static nvm_status_t request_nvm_access(uint32_t nvm_block_id)
 477:../src/drivers/mss_nvm/mss_nvm.c **** {
  26              		.loc 1 477 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 478:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status = NVM_SUCCESS;
 479:../src/drivers/mss_nvm/mss_nvm.c ****     volatile uint32_t timeout_counter;
 480:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t access;
 481:../src/drivers/mss_nvm/mss_nvm.c ****     
 482:../src/drivers/mss_nvm/mss_nvm.c ****     /*
 483:../src/drivers/mss_nvm/mss_nvm.c ****      * Use the SystemCoreClock frequency to compute a delay counter value giving
 484:../src/drivers/mss_nvm/mss_nvm.c ****      * us a delay in the 500ms range. This is a very approximate delay.
 485:../src/drivers/mss_nvm/mss_nvm.c ****      */
 486:../src/drivers/mss_nvm/mss_nvm.c ****     timeout_counter = SystemCoreClock / 16u;
  32              		.loc 1 486 0
  33 0000 0F4B     		ldr	r3, .L8
 477:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status = NVM_SUCCESS;
  34              		.loc 1 477 0
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 8
  37              		.loc 1 486 0
  38 0004 1B68     		ldr	r3, [r3]
  39 0006 1B09     		lsrs	r3, r3, #4
  40 0008 0193     		str	r3, [sp, #4]
 487:../src/drivers/mss_nvm/mss_nvm.c ****     
 488:../src/drivers/mss_nvm/mss_nvm.c ****     /*
 489:../src/drivers/mss_nvm/mss_nvm.c ****      * Gain access to eNVM controller.
 490:../src/drivers/mss_nvm/mss_nvm.c ****      */
 491:../src/drivers/mss_nvm/mss_nvm.c ****     do {
 492:../src/drivers/mss_nvm/mss_nvm.c ****         g_nvm[nvm_block_id]->REQ_ACCESS = REQUEST_NVM_ACCESS;
  41              		.loc 1 492 0
  42 000a 0E4B     		ldr	r3, .L8+4
  43 000c 53F82020 		ldr	r2, [r3, r0, lsl #2]
  44              	.L3:
  45 0010 0123     		movs	r3, #1
  46 0012 C2F8FC31 		str	r3, [r2, #508]
 493:../src/drivers/mss_nvm/mss_nvm.c ****         access = g_nvm[nvm_block_id]->REQ_ACCESS;
  47              		.loc 1 493 0
  48 0016 D2F8FC11 		ldr	r1, [r2, #508]
  49              	.LVL1:
 494:../src/drivers/mss_nvm/mss_nvm.c ****         if(access != CORTEX_M3_ACCESS_GRANTED)
  50              		.loc 1 494 0
  51 001a 0529     		cmp	r1, #5
  52 001c 07D0     		beq	.L2
 495:../src/drivers/mss_nvm/mss_nvm.c ****         {
 496:../src/drivers/mss_nvm/mss_nvm.c ****             /*
 497:../src/drivers/mss_nvm/mss_nvm.c ****              * Time out if another AHB master locked access to eNVM to prevent
 498:../src/drivers/mss_nvm/mss_nvm.c ****              * the Cortex-M3 from locking up on eNVM write if some other part
 499:../src/drivers/mss_nvm/mss_nvm.c ****              * of the system fails from releasing the eNVM.
 500:../src/drivers/mss_nvm/mss_nvm.c ****              */
 501:../src/drivers/mss_nvm/mss_nvm.c ****             --timeout_counter;
  53              		.loc 1 501 0
  54 001e 019B     		ldr	r3, [sp, #4]
  55 0020 013B     		subs	r3, r3, #1
  56 0022 0193     		str	r3, [sp, #4]
 502:../src/drivers/mss_nvm/mss_nvm.c ****             if(0u == timeout_counter)
  57              		.loc 1 502 0
  58 0024 019B     		ldr	r3, [sp, #4]
  59 0026 002B     		cmp	r3, #0
  60 0028 F2D1     		bne	.L3
 503:../src/drivers/mss_nvm/mss_nvm.c ****             {
 504:../src/drivers/mss_nvm/mss_nvm.c ****                 status = NVM_IN_USE_BY_OTHER_MASTER;
  61              		.loc 1 504 0
  62 002a 0620     		movs	r0, #6
  63              	.LVL2:
  64 002c 05E0     		b	.L6
  65              	.LVL3:
  66              	.L2:
 505:../src/drivers/mss_nvm/mss_nvm.c ****             }
 506:../src/drivers/mss_nvm/mss_nvm.c ****         }
 507:../src/drivers/mss_nvm/mss_nvm.c ****     } while((access != CORTEX_M3_ACCESS_GRANTED) && (NVM_SUCCESS == status));
 508:../src/drivers/mss_nvm/mss_nvm.c ****     
 509:../src/drivers/mss_nvm/mss_nvm.c ****     /*
 510:../src/drivers/mss_nvm/mss_nvm.c ****      * Mark controller as locked if successful so that it will be unlocked by a
 511:../src/drivers/mss_nvm/mss_nvm.c ****      * call to release_ctrl_access.
 512:../src/drivers/mss_nvm/mss_nvm.c ****      */
 513:../src/drivers/mss_nvm/mss_nvm.c ****     if(NVM_SUCCESS == status)
 514:../src/drivers/mss_nvm/mss_nvm.c ****     {
 515:../src/drivers/mss_nvm/mss_nvm.c ****         g_envm_ctrl_locks |= (uint8_t)((uint32_t)0x01 << nvm_block_id);
  67              		.loc 1 515 0
  68 002e 0649     		ldr	r1, .L8+8
  69              	.LVL4:
  70 0030 8340     		lsls	r3, r3, r0
  71 0032 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  72 0034 0020     		movs	r0, #0
  73              	.LVL5:
  74 0036 1343     		orrs	r3, r3, r2
  75 0038 0B70     		strb	r3, [r1]
  76              	.L6:
 516:../src/drivers/mss_nvm/mss_nvm.c ****     }
 517:../src/drivers/mss_nvm/mss_nvm.c ****     
 518:../src/drivers/mss_nvm/mss_nvm.c ****     return status;
 519:../src/drivers/mss_nvm/mss_nvm.c **** }
  77              		.loc 1 519 0
  78 003a 02B0     		add	sp, sp, #8
  79              		.cfi_def_cfa_offset 0
  80              		@ sp needed
  81 003c 7047     		bx	lr
  82              	.L9:
  83 003e 00BF     		.align	2
  84              	.L8:
  85 0040 00000000 		.word	SystemCoreClock
  86 0044 00000000 		.word	.LANCHOR0
  87 0048 00000000 		.word	.LANCHOR1
  88              		.cfi_endproc
  89              	.LFE66:
  91              		.section	.text.release_ctrl_access,"ax",%progbits
  92              		.align	1
  93              		.thumb
  94              		.thumb_func
  96              	release_ctrl_access:
  97              	.LFB68:
 520:../src/drivers/mss_nvm/mss_nvm.c **** 
 521:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 522:../src/drivers/mss_nvm/mss_nvm.c ****  * Get access to eNVM controller for eNVM0 and eNVM1
 523:../src/drivers/mss_nvm/mss_nvm.c ****  */
 524:../src/drivers/mss_nvm/mss_nvm.c **** static nvm_status_t get_ctrl_access(uint32_t nvm_offset, uint32_t length)
 525:../src/drivers/mss_nvm/mss_nvm.c **** {
 526:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t access_req_status;
 527:../src/drivers/mss_nvm/mss_nvm.c ****     
 528:../src/drivers/mss_nvm/mss_nvm.c ****     /*
 529:../src/drivers/mss_nvm/mss_nvm.c ****      * Gain access to eNVM controller(s).
 530:../src/drivers/mss_nvm/mss_nvm.c ****      */
 531:../src/drivers/mss_nvm/mss_nvm.c ****     if(nvm_offset < NVM1_BOTTOM_OFFSET)
 532:../src/drivers/mss_nvm/mss_nvm.c ****     {
 533:../src/drivers/mss_nvm/mss_nvm.c ****         access_req_status = request_nvm_access(NVM_BLOCK_0);
 534:../src/drivers/mss_nvm/mss_nvm.c ****         if(NVM_SUCCESS == access_req_status)
 535:../src/drivers/mss_nvm/mss_nvm.c ****         {
 536:../src/drivers/mss_nvm/mss_nvm.c ****             uint32_t last_offset;
 537:../src/drivers/mss_nvm/mss_nvm.c ****             last_offset = nvm_offset + (length - 0x1u);
 538:../src/drivers/mss_nvm/mss_nvm.c ****             if(last_offset >= NVM1_BOTTOM_OFFSET)
 539:../src/drivers/mss_nvm/mss_nvm.c ****             {
 540:../src/drivers/mss_nvm/mss_nvm.c ****                 access_req_status = request_nvm_access(NVM_BLOCK_1);
 541:../src/drivers/mss_nvm/mss_nvm.c ****                 if(NVM_IN_USE_BY_OTHER_MASTER == access_req_status)
 542:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 543:../src/drivers/mss_nvm/mss_nvm.c ****                     release_ctrl_access();
 544:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 545:../src/drivers/mss_nvm/mss_nvm.c ****             }
 546:../src/drivers/mss_nvm/mss_nvm.c ****         }
 547:../src/drivers/mss_nvm/mss_nvm.c ****     }
 548:../src/drivers/mss_nvm/mss_nvm.c ****     else
 549:../src/drivers/mss_nvm/mss_nvm.c ****     {
 550:../src/drivers/mss_nvm/mss_nvm.c ****         access_req_status = request_nvm_access(NVM_BLOCK_1);
 551:../src/drivers/mss_nvm/mss_nvm.c ****     }
 552:../src/drivers/mss_nvm/mss_nvm.c ****     
 553:../src/drivers/mss_nvm/mss_nvm.c ****     return access_req_status;
 554:../src/drivers/mss_nvm/mss_nvm.c **** }
 555:../src/drivers/mss_nvm/mss_nvm.c **** 
 556:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 557:../src/drivers/mss_nvm/mss_nvm.c ****  * Release access to eNVM controllers.
 558:../src/drivers/mss_nvm/mss_nvm.c ****  */
 559:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM_BLOCK_0_LOCK_MASK   0x01u
 560:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM_BLOCK_1_LOCK_MASK   0x02u
 561:../src/drivers/mss_nvm/mss_nvm.c **** 
 562:../src/drivers/mss_nvm/mss_nvm.c **** static void release_ctrl_access(void)
 563:../src/drivers/mss_nvm/mss_nvm.c **** {
  98              		.loc 1 563 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 564:../src/drivers/mss_nvm/mss_nvm.c ****     uint8_t block_locked;
 565:../src/drivers/mss_nvm/mss_nvm.c ****     
 566:../src/drivers/mss_nvm/mss_nvm.c ****     block_locked = g_envm_ctrl_locks & NVM_BLOCK_0_LOCK_MASK;
 103              		.loc 1 566 0
 104 0000 0C4B     		ldr	r3, .L19
 105 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 106              	.LVL6:
 567:../src/drivers/mss_nvm/mss_nvm.c ****     if(block_locked)
 107              		.loc 1 567 0
 108 0004 D107     		lsls	r1, r2, #31
 568:../src/drivers/mss_nvm/mss_nvm.c ****     {
 569:../src/drivers/mss_nvm/mss_nvm.c ****         g_nvm[NVM_BLOCK_0]->REQ_ACCESS = 0x00u;
 109              		.loc 1 569 0
 110 0006 41BF     		itttt	mi
 111 0008 0B49     		ldrmi	r1, .L19+4
 570:../src/drivers/mss_nvm/mss_nvm.c ****         g_envm_ctrl_locks &= ~NVM_BLOCK_0_LOCK_MASK;
 112              		.loc 1 570 0
 113 000a 22F00102 		bicmi	r2, r2, #1
 114              	.LVL7:
 569:../src/drivers/mss_nvm/mss_nvm.c ****         g_envm_ctrl_locks &= ~NVM_BLOCK_0_LOCK_MASK;
 115              		.loc 1 569 0
 116 000e 0020     		movmi	r0, #0
 117 0010 C1F8FC01 		strmi	r0, [r1, #508]
 118              		.loc 1 570 0
 119 0014 48BF     		it	mi
 120 0016 1A70     		strbmi	r2, [r3]
 571:../src/drivers/mss_nvm/mss_nvm.c ****     }
 572:../src/drivers/mss_nvm/mss_nvm.c ****     
 573:../src/drivers/mss_nvm/mss_nvm.c ****     block_locked = g_envm_ctrl_locks & NVM_BLOCK_1_LOCK_MASK;
 121              		.loc 1 573 0
 122 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 123              	.LVL8:
 574:../src/drivers/mss_nvm/mss_nvm.c ****     if(block_locked)
 124              		.loc 1 574 0
 125 001a 9A07     		lsls	r2, r3, #30
 575:../src/drivers/mss_nvm/mss_nvm.c ****     {
 576:../src/drivers/mss_nvm/mss_nvm.c ****         g_nvm[NVM_BLOCK_1]->REQ_ACCESS = 0x00u;
 126              		.loc 1 576 0
 127 001c 41BF     		itttt	mi
 128 001e 074A     		ldrmi	r2, .L19+8
 129 0020 0021     		movmi	r1, #0
 130 0022 C2F8FC11 		strmi	r1, [r2, #508]
 577:../src/drivers/mss_nvm/mss_nvm.c ****         g_envm_ctrl_locks &= ~NVM_BLOCK_1_LOCK_MASK;
 131              		.loc 1 577 0
 132 0026 034A     		ldrmi	r2, .L19
 133 0028 44BF     		itt	mi
 134 002a 23F00203 		bicmi	r3, r3, #2
 135              	.LVL9:
 136 002e 1370     		strbmi	r3, [r2]
 137              	.LVL10:
 138 0030 7047     		bx	lr
 139              	.L20:
 140 0032 00BF     		.align	2
 141              	.L19:
 142 0034 00000000 		.word	.LANCHOR1
 143 0038 00000860 		.word	1611137024
 144 003c 00000C60 		.word	1611399168
 145              		.cfi_endproc
 146              	.LFE68:
 148              		.section	.text.wait_nvm_ready,"ax",%progbits
 149              		.align	1
 150              		.thumb
 151              		.thumb_func
 153              	wait_nvm_ready:
 154              	.LFB69:
 578:../src/drivers/mss_nvm/mss_nvm.c ****     }
 579:../src/drivers/mss_nvm/mss_nvm.c **** }
 580:../src/drivers/mss_nvm/mss_nvm.c **** 
 581:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 582:../src/drivers/mss_nvm/mss_nvm.c ****  * Wait for NVM to become ready from busy state
 583:../src/drivers/mss_nvm/mss_nvm.c ****  */
 584:../src/drivers/mss_nvm/mss_nvm.c **** static uint32_t wait_nvm_ready(uint32_t block) 
 585:../src/drivers/mss_nvm/mss_nvm.c **** {
 155              		.loc 1 585 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 8
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160              	.LVL11:
 586:../src/drivers/mss_nvm/mss_nvm.c ****     volatile uint32_t ctrl_status;
 587:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t ctrl_ready;
 588:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t inc;
 589:../src/drivers/mss_nvm/mss_nvm.c ****     
 590:../src/drivers/mss_nvm/mss_nvm.c ****     /*
 591:../src/drivers/mss_nvm/mss_nvm.c ****      * Wait for NVM to become ready.
 592:../src/drivers/mss_nvm/mss_nvm.c ****      * We must ensure that we can read the ready bit set to 1 twice before we
 593:../src/drivers/mss_nvm/mss_nvm.c ****      * can assume that the other status bits are valid. See SmartFusion2 errata.
 594:../src/drivers/mss_nvm/mss_nvm.c ****      */
 595:../src/drivers/mss_nvm/mss_nvm.c ****     for(inc = 0u; inc < 2u; ++inc)
 596:../src/drivers/mss_nvm/mss_nvm.c ****     {
 597:../src/drivers/mss_nvm/mss_nvm.c ****         do {
 598:../src/drivers/mss_nvm/mss_nvm.c ****             ctrl_status = g_nvm[block]->STATUS;
 161              		.loc 1 598 0
 162 0000 094B     		ldr	r3, .L29
 585:../src/drivers/mss_nvm/mss_nvm.c ****     volatile uint32_t ctrl_status;
 163              		.loc 1 585 0
 164 0002 82B0     		sub	sp, sp, #8
 165              		.cfi_def_cfa_offset 8
 166              		.loc 1 598 0
 167 0004 53F82030 		ldr	r3, [r3, r0, lsl #2]
 168              	.L22:
 169 0008 D3F82021 		ldr	r2, [r3, #288]
 170 000c 0192     		str	r2, [sp, #4]
 599:../src/drivers/mss_nvm/mss_nvm.c ****             ctrl_ready = ctrl_status  & MSS_NVM_BUSY_B;
 171              		.loc 1 599 0
 172 000e 019A     		ldr	r2, [sp, #4]
 173              	.LVL12:
 600:../src/drivers/mss_nvm/mss_nvm.c ****         } while(0u == ctrl_ready);
 174              		.loc 1 600 0
 175 0010 D107     		lsls	r1, r2, #31
 176 0012 F9D5     		bpl	.L22
 177              	.LVL13:
 178              	.L26:
 598:../src/drivers/mss_nvm/mss_nvm.c ****             ctrl_ready = ctrl_status  & MSS_NVM_BUSY_B;
 179              		.loc 1 598 0
 180 0014 D3F82021 		ldr	r2, [r3, #288]
 181 0018 0192     		str	r2, [sp, #4]
 599:../src/drivers/mss_nvm/mss_nvm.c ****             ctrl_ready = ctrl_status  & MSS_NVM_BUSY_B;
 182              		.loc 1 599 0
 183 001a 019A     		ldr	r2, [sp, #4]
 184              	.LVL14:
 185              		.loc 1 600 0
 186 001c D207     		lsls	r2, r2, #31
 187              	.LVL15:
 188 001e F9D5     		bpl	.L26
 189              	.LVL16:
 601:../src/drivers/mss_nvm/mss_nvm.c ****     }
 602:../src/drivers/mss_nvm/mss_nvm.c ****     
 603:../src/drivers/mss_nvm/mss_nvm.c ****     return ctrl_status;
 190              		.loc 1 603 0
 191 0020 0198     		ldr	r0, [sp, #4]
 192              	.LVL17:
 604:../src/drivers/mss_nvm/mss_nvm.c **** }
 193              		.loc 1 604 0
 194 0022 02B0     		add	sp, sp, #8
 195              		.cfi_def_cfa_offset 0
 196              		@ sp needed
 197 0024 7047     		bx	lr
 198              	.L30:
 199 0026 00BF     		.align	2
 200              	.L29:
 201 0028 00000000 		.word	.LANCHOR0
 202              		.cfi_endproc
 203              	.LFE69:
 205              		.section	.text.fill_wd_buffer,"ax",%progbits
 206              		.align	1
 207              		.thumb
 208              		.thumb_func
 210              	fill_wd_buffer:
 211              	.LFB72:
 605:../src/drivers/mss_nvm/mss_nvm.c **** 
 606:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 607:../src/drivers/mss_nvm/mss_nvm.c ****   Write as much data as will fit into the eNVM page corresponding to the
 608:../src/drivers/mss_nvm/mss_nvm.c ****   address "addr" passed as parameter. Return the number of bytes written into
 609:../src/drivers/mss_nvm/mss_nvm.c ****   the page.
 610:../src/drivers/mss_nvm/mss_nvm.c ****   In case of error, return the content of the eNVM controller status register
 611:../src/drivers/mss_nvm/mss_nvm.c ****   into the 32-bit word pointed to by p_status.
 612:../src/drivers/mss_nvm/mss_nvm.c ****  */
 613:../src/drivers/mss_nvm/mss_nvm.c **** static uint32_t 
 614:../src/drivers/mss_nvm/mss_nvm.c **** write_nvm
 615:../src/drivers/mss_nvm/mss_nvm.c **** (
 616:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t addr,
 617:../src/drivers/mss_nvm/mss_nvm.c ****     const uint8_t * pidata,
 618:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t  length,
 619:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t  lock_page,
 620:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t * p_status
 621:../src/drivers/mss_nvm/mss_nvm.c **** )
 622:../src/drivers/mss_nvm/mss_nvm.c **** {
 623:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t length_written;
 624:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t offset;
 625:../src/drivers/mss_nvm/mss_nvm.c ****    
 626:../src/drivers/mss_nvm/mss_nvm.c ****     *p_status = 0u;
 627:../src/drivers/mss_nvm/mss_nvm.c ****     
 628:../src/drivers/mss_nvm/mss_nvm.c ****     /* Ignore upper address bits to ignore remapping setting. */    
 629:../src/drivers/mss_nvm/mss_nvm.c ****     offset = addr & NVM_OFFSET_SIGNIFICANT_BITS;
 630:../src/drivers/mss_nvm/mss_nvm.c ****     
 631:../src/drivers/mss_nvm/mss_nvm.c ****     ASSERT(offset <= NVM1_TOP_OFFSET);
 632:../src/drivers/mss_nvm/mss_nvm.c ****     
 633:../src/drivers/mss_nvm/mss_nvm.c ****     /* Adjust length to fit within one page. */
 634:../src/drivers/mss_nvm/mss_nvm.c ****     length_written = get_remaining_page_length(offset, length);
 635:../src/drivers/mss_nvm/mss_nvm.c ****     
 636:../src/drivers/mss_nvm/mss_nvm.c ****     if(offset <= NVM1_TOP_OFFSET)
 637:../src/drivers/mss_nvm/mss_nvm.c ****     {
 638:../src/drivers/mss_nvm/mss_nvm.c ****         uint32_t block;
 639:../src/drivers/mss_nvm/mss_nvm.c ****         volatile uint32_t ctrl_status;
 640:../src/drivers/mss_nvm/mss_nvm.c ****         uint32_t errors;
 641:../src/drivers/mss_nvm/mss_nvm.c ****         
 642:../src/drivers/mss_nvm/mss_nvm.c ****         if(offset < NVM1_BOTTOM_OFFSET)
 643:../src/drivers/mss_nvm/mss_nvm.c ****         {
 644:../src/drivers/mss_nvm/mss_nvm.c ****             block = NVM_BLOCK_0;
 645:../src/drivers/mss_nvm/mss_nvm.c ****         }
 646:../src/drivers/mss_nvm/mss_nvm.c ****         else
 647:../src/drivers/mss_nvm/mss_nvm.c ****         {
 648:../src/drivers/mss_nvm/mss_nvm.c ****             block = NVM_BLOCK_1;
 649:../src/drivers/mss_nvm/mss_nvm.c ****             offset = offset - NVM1_BOTTOM_OFFSET;
 650:../src/drivers/mss_nvm/mss_nvm.c ****         }
 651:../src/drivers/mss_nvm/mss_nvm.c ****         
 652:../src/drivers/mss_nvm/mss_nvm.c ****         if(g_nvm[block]->STATUS & MSS_NVM_WR_DENIED)
 653:../src/drivers/mss_nvm/mss_nvm.c ****         {
 654:../src/drivers/mss_nvm/mss_nvm.c ****             /* Clear the access denied flag */
 655:../src/drivers/mss_nvm/mss_nvm.c ****             g_nvm[block]->CLRHINT |= ACCESS_DENIED_FLAG_CLEAR;
 656:../src/drivers/mss_nvm/mss_nvm.c ****         }
 657:../src/drivers/mss_nvm/mss_nvm.c **** 
 658:../src/drivers/mss_nvm/mss_nvm.c ****         fill_wd_buffer(pidata, length_written, block, offset);
 659:../src/drivers/mss_nvm/mss_nvm.c **** 
 660:../src/drivers/mss_nvm/mss_nvm.c ****         /* Set requested locking option. */
 661:../src/drivers/mss_nvm/mss_nvm.c ****         g_nvm[block]->PAGE_LOCK = lock_page;
 662:../src/drivers/mss_nvm/mss_nvm.c ****         
 663:../src/drivers/mss_nvm/mss_nvm.c ****         /* Issue program command */
 664:../src/drivers/mss_nvm/mss_nvm.c ****         g_nvm[block]->CMD = PROG_ADS | (offset & PAGE_ADDR_MASK);
 665:../src/drivers/mss_nvm/mss_nvm.c ****         
 666:../src/drivers/mss_nvm/mss_nvm.c ****         /* Wait for NVM to become ready. */
 667:../src/drivers/mss_nvm/mss_nvm.c ****         ctrl_status = wait_nvm_ready(block);
 668:../src/drivers/mss_nvm/mss_nvm.c **** 
 669:../src/drivers/mss_nvm/mss_nvm.c ****         /* Check for errors. */
 670:../src/drivers/mss_nvm/mss_nvm.c ****         errors = ctrl_status & WRITE_ERROR_MASK;
 671:../src/drivers/mss_nvm/mss_nvm.c ****         if(errors)
 672:../src/drivers/mss_nvm/mss_nvm.c ****         {
 673:../src/drivers/mss_nvm/mss_nvm.c ****             *p_status = ctrl_status;
 674:../src/drivers/mss_nvm/mss_nvm.c ****         }
 675:../src/drivers/mss_nvm/mss_nvm.c ****         else
 676:../src/drivers/mss_nvm/mss_nvm.c ****         {
 677:../src/drivers/mss_nvm/mss_nvm.c ****             /* Perform a verify. */
 678:../src/drivers/mss_nvm/mss_nvm.c ****             g_nvm[block]->CMD = VERIFY_ADS | (offset & PAGE_ADDR_MASK);
 679:../src/drivers/mss_nvm/mss_nvm.c ****             /* Wait for NVM to become ready. */
 680:../src/drivers/mss_nvm/mss_nvm.c ****             ctrl_status = wait_nvm_ready(block);
 681:../src/drivers/mss_nvm/mss_nvm.c **** 
 682:../src/drivers/mss_nvm/mss_nvm.c ****             *p_status = ctrl_status;
 683:../src/drivers/mss_nvm/mss_nvm.c ****         }
 684:../src/drivers/mss_nvm/mss_nvm.c ****     }
 685:../src/drivers/mss_nvm/mss_nvm.c ****     
 686:../src/drivers/mss_nvm/mss_nvm.c ****     return length_written;
 687:../src/drivers/mss_nvm/mss_nvm.c **** }
 688:../src/drivers/mss_nvm/mss_nvm.c **** 
 689:../src/drivers/mss_nvm/mss_nvm.c **** /*******************************************************************************
 690:../src/drivers/mss_nvm/mss_nvm.c ****   Return the number of bytes between the offset location and the end of the page
 691:../src/drivers/mss_nvm/mss_nvm.c ****   containing the first offset location. This tells us how many actual bytes can
 692:../src/drivers/mss_nvm/mss_nvm.c ****   be programmed with a single ProgramADS command.
 693:../src/drivers/mss_nvm/mss_nvm.c ****   This also tells us if we are programming a full page. If the return value is
 694:../src/drivers/mss_nvm/mss_nvm.c ****   equal to BYTES_PER_PAGE then we will be programming an entire NVM page.
 695:../src/drivers/mss_nvm/mss_nvm.c ****   Alternatively, this function returning a value other than BYTES_PER_PAGE
 696:../src/drivers/mss_nvm/mss_nvm.c ****   indicates that the WD[] buffer will have to be seeded with the existing
 697:../src/drivers/mss_nvm/mss_nvm.c ****   content of the eNVM before copying the data to program to eNVM into the WD[]
 698:../src/drivers/mss_nvm/mss_nvm.c ****   buffer.
 699:../src/drivers/mss_nvm/mss_nvm.c ****  */
 700:../src/drivers/mss_nvm/mss_nvm.c **** static uint32_t get_remaining_page_length(uint32_t offset, uint32_t length)
 701:../src/drivers/mss_nvm/mss_nvm.c **** {
 702:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t start_page_plus_one;
 703:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t last_page;
 704:../src/drivers/mss_nvm/mss_nvm.c ****     
 705:../src/drivers/mss_nvm/mss_nvm.c ****     start_page_plus_one = (offset / BYTES_PER_PAGE) + 1u;
 706:../src/drivers/mss_nvm/mss_nvm.c ****     last_page = (offset + length) / BYTES_PER_PAGE;
 707:../src/drivers/mss_nvm/mss_nvm.c ****     if(last_page >= start_page_plus_one)
 708:../src/drivers/mss_nvm/mss_nvm.c ****     {
 709:../src/drivers/mss_nvm/mss_nvm.c ****         length = BYTES_PER_PAGE - (offset % BYTES_PER_PAGE);
 710:../src/drivers/mss_nvm/mss_nvm.c ****     }
 711:../src/drivers/mss_nvm/mss_nvm.c ****     
 712:../src/drivers/mss_nvm/mss_nvm.c ****     return length;
 713:../src/drivers/mss_nvm/mss_nvm.c **** }
 714:../src/drivers/mss_nvm/mss_nvm.c **** 
 715:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 716:../src/drivers/mss_nvm/mss_nvm.c ****  * Fill the eNVM controller write data(WD) buffer with data
 717:../src/drivers/mss_nvm/mss_nvm.c ****  */
 718:../src/drivers/mss_nvm/mss_nvm.c **** static void fill_wd_buffer
 719:../src/drivers/mss_nvm/mss_nvm.c **** (
 720:../src/drivers/mss_nvm/mss_nvm.c ****     const uint8_t * p_data,
 721:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t  length,
 722:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t block,
 723:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t offset
 724:../src/drivers/mss_nvm/mss_nvm.c **** )
 725:../src/drivers/mss_nvm/mss_nvm.c **** {
 212              		.loc 1 725 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              	.LVL18:
 726:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t inc;
 727:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t wd_offset;
 728:../src/drivers/mss_nvm/mss_nvm.c ****     
 729:../src/drivers/mss_nvm/mss_nvm.c ****     if(length != BYTES_PER_PAGE)
 217              		.loc 1 729 0
 218 0000 8029     		cmp	r1, #128
 725:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t inc;
 219              		.loc 1 725 0
 220 0002 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 221              		.cfi_def_cfa_offset 28
 222              		.cfi_offset 4, -28
 223              		.cfi_offset 5, -24
 224              		.cfi_offset 6, -20
 225              		.cfi_offset 7, -16
 226              		.cfi_offset 8, -12
 227              		.cfi_offset 9, -8
 228              		.cfi_offset 14, -4
 229 0006 03F07F0E 		and	lr, r3, #127
 230              		.loc 1 729 0
 231 000a 02D1     		bne	.L32
 232              	.LVL19:
 233              	.L39:
 234 000c 0144     		add	r1, r1, r0
 235              	.LVL20:
 730:../src/drivers/mss_nvm/mss_nvm.c ****     {
 731:../src/drivers/mss_nvm/mss_nvm.c ****         uint32_t * p_nvm32;
 732:../src/drivers/mss_nvm/mss_nvm.c ****         uint32_t nb_non_written_words;
 733:../src/drivers/mss_nvm/mss_nvm.c ****         uint32_t first_non_written_word;
 734:../src/drivers/mss_nvm/mss_nvm.c ****         /* 
 735:../src/drivers/mss_nvm/mss_nvm.c ****          * Fill beginning of WD[] with current content of NVM page that must not
 736:../src/drivers/mss_nvm/mss_nvm.c ****          * be overwritten.
 737:../src/drivers/mss_nvm/mss_nvm.c ****          */
 738:../src/drivers/mss_nvm/mss_nvm.c ****         p_nvm32 = (uint32_t *)((NVM_BASE_ADDRESS + offset + (block * NVM1_BOTTOM_OFFSET)) & PAGE_AD
 739:../src/drivers/mss_nvm/mss_nvm.c ****         nb_non_written_words = (offset % BYTES_PER_PAGE) / NB_OF_BYTES_IN_A_WORD;
 740:../src/drivers/mss_nvm/mss_nvm.c ****         if((offset % NB_OF_BYTES_IN_A_WORD) > 0u)
 741:../src/drivers/mss_nvm/mss_nvm.c ****         {
 742:../src/drivers/mss_nvm/mss_nvm.c ****             ++nb_non_written_words;
 743:../src/drivers/mss_nvm/mss_nvm.c ****         }
 744:../src/drivers/mss_nvm/mss_nvm.c ****         for(inc = 0u; (inc < WD_WORD_SIZE) && (inc < nb_non_written_words); ++inc)
 745:../src/drivers/mss_nvm/mss_nvm.c ****         {
 746:../src/drivers/mss_nvm/mss_nvm.c ****             g_nvm32[block]->WD[inc] = p_nvm32[inc];
 747:../src/drivers/mss_nvm/mss_nvm.c ****         }
 748:../src/drivers/mss_nvm/mss_nvm.c ****         
 749:../src/drivers/mss_nvm/mss_nvm.c ****         /*
 750:../src/drivers/mss_nvm/mss_nvm.c ****          * Fill end of WD[] with current content of NVM page that must not be
 751:../src/drivers/mss_nvm/mss_nvm.c ****          * overwritten.
 752:../src/drivers/mss_nvm/mss_nvm.c ****          */
 753:../src/drivers/mss_nvm/mss_nvm.c ****         first_non_written_word = ((offset + length) % BYTES_PER_PAGE) / NB_OF_BYTES_IN_A_WORD;
 754:../src/drivers/mss_nvm/mss_nvm.c ****         nb_non_written_words = (BYTES_PER_PAGE / NB_OF_BYTES_IN_A_WORD) - first_non_written_word;
 755:../src/drivers/mss_nvm/mss_nvm.c ****         
 756:../src/drivers/mss_nvm/mss_nvm.c ****         for(inc = 0u; inc < nb_non_written_words; ++inc)
 757:../src/drivers/mss_nvm/mss_nvm.c ****         {
 758:../src/drivers/mss_nvm/mss_nvm.c ****             g_nvm32[block]->WD[first_non_written_word + inc] = p_nvm32[first_non_written_word + inc
 759:../src/drivers/mss_nvm/mss_nvm.c ****         }
 760:../src/drivers/mss_nvm/mss_nvm.c ****     }
 761:../src/drivers/mss_nvm/mss_nvm.c ****     
 762:../src/drivers/mss_nvm/mss_nvm.c ****     /*
 763:../src/drivers/mss_nvm/mss_nvm.c ****      * Fill WD[] with data requested to be written into NVM.
 764:../src/drivers/mss_nvm/mss_nvm.c ****      */
 765:../src/drivers/mss_nvm/mss_nvm.c ****     wd_offset = offset % BYTES_PER_PAGE;
 766:../src/drivers/mss_nvm/mss_nvm.c ****     for(inc = 0u; inc < length; ++inc)
 236              		.loc 1 766 0
 237 000e 0446     		mov	r4, r0
 238 0010 30E0     		b	.L33
 239              	.LVL21:
 240              	.L32:
 241 0012 03F1C044 		add	r4, r3, #1610612736
 242              	.LBB24:
 740:../src/drivers/mss_nvm/mss_nvm.c ****         {
 243              		.loc 1 740 0
 244 0016 9D07     		lsls	r5, r3, #30
 738:../src/drivers/mss_nvm/mss_nvm.c ****         nb_non_written_words = (offset % BYTES_PER_PAGE) / NB_OF_BYTES_IN_A_WORD;
 245              		.loc 1 738 0
 246 0018 04EB8244 		add	r4, r4, r2, lsl #18
 739:../src/drivers/mss_nvm/mss_nvm.c ****         if((offset % NB_OF_BYTES_IN_A_WORD) > 0u)
 247              		.loc 1 739 0
 248 001c 4FEA9E0C 		lsr	ip, lr, #2
 738:../src/drivers/mss_nvm/mss_nvm.c ****         nb_non_written_words = (offset % BYTES_PER_PAGE) / NB_OF_BYTES_IN_A_WORD;
 249              		.loc 1 738 0
 250 0020 24F07F04 		bic	r4, r4, #127
 251              	.LVL22:
 742:../src/drivers/mss_nvm/mss_nvm.c ****         }
 252              		.loc 1 742 0
 253 0024 18BF     		it	ne
 254 0026 0CF1010C 		addne	ip, ip, #1
 255              	.LVL23:
 744:../src/drivers/mss_nvm/mss_nvm.c ****         {
 256              		.loc 1 744 0
 257 002a 0025     		movs	r5, #0
 258              	.LVL24:
 259              	.L35:
 744:../src/drivers/mss_nvm/mss_nvm.c ****         {
 260              		.loc 1 744 0 is_stmt 0 discriminator 3
 261 002c 6545     		cmp	r5, ip
 262 002e DFF86880 		ldr	r8, .L47+4
 263 0032 0AD0     		beq	.L38
 746:../src/drivers/mss_nvm/mss_nvm.c ****         }
 264              		.loc 1 746 0 is_stmt 1 discriminator 4
 265 0034 54F82560 		ldr	r6, [r4, r5, lsl #2]
 266 0038 05F12009 		add	r9, r5, #32
 267 003c 58F82270 		ldr	r7, [r8, r2, lsl #2]
 744:../src/drivers/mss_nvm/mss_nvm.c ****         {
 268              		.loc 1 744 0 discriminator 4
 269 0040 0135     		adds	r5, r5, #1
 270              	.LVL25:
 271 0042 202D     		cmp	r5, #32
 746:../src/drivers/mss_nvm/mss_nvm.c ****         }
 272              		.loc 1 746 0 discriminator 4
 273 0044 47F82960 		str	r6, [r7, r9, lsl #2]
 744:../src/drivers/mss_nvm/mss_nvm.c ****         {
 274              		.loc 1 744 0 discriminator 4
 275 0048 F0D1     		bne	.L35
 276              	.L38:
 753:../src/drivers/mss_nvm/mss_nvm.c ****         nb_non_written_words = (BYTES_PER_PAGE / NB_OF_BYTES_IN_A_WORD) - first_non_written_word;
 277              		.loc 1 753 0
 278 004a 0B44     		add	r3, r3, r1
 279              	.LVL26:
 280 004c C3F38409 		ubfx	r9, r3, #2, #5
 281              	.LVL27:
 758:../src/drivers/mss_nvm/mss_nvm.c ****         }
 282              		.loc 1 758 0
 283 0050 58F82260 		ldr	r6, [r8, r2, lsl #2]
 754:../src/drivers/mss_nvm/mss_nvm.c ****         
 284              		.loc 1 754 0
 285 0054 C9F1200C 		rsb	ip, r9, #32
 286              	.LVL28:
 287 0058 04EB8904 		add	r4, r4, r9, lsl #2
 288              	.LVL29:
 756:../src/drivers/mss_nvm/mss_nvm.c ****         {
 289              		.loc 1 756 0
 290 005c 0025     		movs	r5, #0
 291              	.LVL30:
 292              	.L36:
 293 005e 05EB0907 		add	r7, r5, r9
 758:../src/drivers/mss_nvm/mss_nvm.c ****         }
 294              		.loc 1 758 0 discriminator 3
 295 0062 54F82530 		ldr	r3, [r4, r5, lsl #2]
 756:../src/drivers/mss_nvm/mss_nvm.c ****         {
 296              		.loc 1 756 0 discriminator 3
 297 0066 0135     		adds	r5, r5, #1
 298              	.LVL31:
 758:../src/drivers/mss_nvm/mss_nvm.c ****         }
 299              		.loc 1 758 0 discriminator 3
 300 0068 2037     		adds	r7, r7, #32
 756:../src/drivers/mss_nvm/mss_nvm.c ****         {
 301              		.loc 1 756 0 discriminator 3
 302 006a 6545     		cmp	r5, ip
 758:../src/drivers/mss_nvm/mss_nvm.c ****         }
 303              		.loc 1 758 0 discriminator 3
 304 006c 46F82730 		str	r3, [r6, r7, lsl #2]
 756:../src/drivers/mss_nvm/mss_nvm.c ****         {
 305              		.loc 1 756 0 discriminator 3
 306 0070 F5D1     		bne	.L36
 307 0072 CBE7     		b	.L39
 308              	.LVL32:
 309              	.L33:
 310              	.LBE24:
 311              		.loc 1 766 0 discriminator 1
 312 0074 8C42     		cmp	r4, r1
 313 0076 0BD0     		beq	.L46
 767:../src/drivers/mss_nvm/mss_nvm.c ****     {
 768:../src/drivers/mss_nvm/mss_nvm.c ****         g_nvm[block]->WD[wd_offset + inc] = p_data[inc];
 314              		.loc 1 768 0 discriminator 3
 315 0078 064B     		ldr	r3, .L47
 316 007a 53F82260 		ldr	r6, [r3, r2, lsl #2]
 317 007e C0EB0E03 		rsb	r3, r0, lr
 318 0082 2344     		add	r3, r3, r4
 319 0084 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 320              	.LVL33:
 321 0088 3344     		add	r3, r3, r6
 322 008a 83F88050 		strb	r5, [r3, #128]
 323              	.LVL34:
 324 008e F1E7     		b	.L33
 325              	.L46:
 769:../src/drivers/mss_nvm/mss_nvm.c ****     }
 770:../src/drivers/mss_nvm/mss_nvm.c **** }
 326              		.loc 1 770 0
 327 0090 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 328              	.LVL35:
 329              	.L48:
 330              		.align	2
 331              	.L47:
 332 0094 00000000 		.word	.LANCHOR0
 333 0098 00000000 		.word	.LANCHOR2
 334              		.cfi_endproc
 335              	.LFE72:
 337              		.section	.text.check_protection_reserved_nvm,"ax",%progbits
 338              		.align	1
 339              		.thumb
 340              		.thumb_func
 342              	check_protection_reserved_nvm:
 343              	.LFB74:
 771:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 772:../src/drivers/mss_nvm/mss_nvm.c ****  * See mss_nvm.h for details of how to use this function.
 773:../src/drivers/mss_nvm/mss_nvm.c ****  */
 774:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM0_BASE_ADDRESS                0x60000000u
 775:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM1_BASE_ADDRESS                0x60040000u
 776:../src/drivers/mss_nvm/mss_nvm.c **** 
 777:../src/drivers/mss_nvm/mss_nvm.c **** #define AUX_DATA_WC_MASK    0x00FFFFF0u
 778:../src/drivers/mss_nvm/mss_nvm.c **** #define AUX_DATA_WC_SHIFT   4
 779:../src/drivers/mss_nvm/mss_nvm.c **** 
 780:../src/drivers/mss_nvm/mss_nvm.c **** uint32_t
 781:../src/drivers/mss_nvm/mss_nvm.c **** NVM_read_page_write_count
 782:../src/drivers/mss_nvm/mss_nvm.c **** (
 783:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t addr
 784:../src/drivers/mss_nvm/mss_nvm.c **** )
 785:../src/drivers/mss_nvm/mss_nvm.c **** {
 786:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t write_count = 0u;
 787:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t block;
 788:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t offset;
 789:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t status;
 790:../src/drivers/mss_nvm/mss_nvm.c **** 
 791:../src/drivers/mss_nvm/mss_nvm.c ****     if((addr >= (NVM_BASE_ADDRESS + NVM_TOP_OFFSET)) || \
 792:../src/drivers/mss_nvm/mss_nvm.c ****        ((addr >= NVM_TOP_OFFSET) && (addr < NVM_BASE_ADDRESS)))
 793:../src/drivers/mss_nvm/mss_nvm.c ****     {
 794:../src/drivers/mss_nvm/mss_nvm.c ****         write_count = 0u;
 795:../src/drivers/mss_nvm/mss_nvm.c ****     }
 796:../src/drivers/mss_nvm/mss_nvm.c ****     else
 797:../src/drivers/mss_nvm/mss_nvm.c ****     {
 798:../src/drivers/mss_nvm/mss_nvm.c ****         write_count = 0u;
 799:../src/drivers/mss_nvm/mss_nvm.c ****         offset = addr & NVM_OFFSET_SIGNIFICANT_BITS;
 800:../src/drivers/mss_nvm/mss_nvm.c ****         
 801:../src/drivers/mss_nvm/mss_nvm.c ****         status = check_protection_reserved_nvm(offset, 0u);
 802:../src/drivers/mss_nvm/mss_nvm.c ****         
 803:../src/drivers/mss_nvm/mss_nvm.c ****         if(NVM_SUCCESS == status)
 804:../src/drivers/mss_nvm/mss_nvm.c ****         {  
 805:../src/drivers/mss_nvm/mss_nvm.c ****             /* Gain exclusive access to eNVM controller */
 806:../src/drivers/mss_nvm/mss_nvm.c ****             status = get_ctrl_access(offset, 1u);
 807:../src/drivers/mss_nvm/mss_nvm.c ****         
 808:../src/drivers/mss_nvm/mss_nvm.c ****             /* Read page write counter. */
 809:../src/drivers/mss_nvm/mss_nvm.c ****             if(NVM_SUCCESS == status)
 810:../src/drivers/mss_nvm/mss_nvm.c ****             {
 811:../src/drivers/mss_nvm/mss_nvm.c ****                 if(offset < NVM1_BOTTOM_OFFSET)
 812:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 813:../src/drivers/mss_nvm/mss_nvm.c ****                     block = NVM_BLOCK_0;
 814:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 815:../src/drivers/mss_nvm/mss_nvm.c ****                 else
 816:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 817:../src/drivers/mss_nvm/mss_nvm.c ****                     block = NVM_BLOCK_1;
 818:../src/drivers/mss_nvm/mss_nvm.c ****                     offset = offset - NVM1_BOTTOM_OFFSET;
 819:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 820:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Set R/W page status select bit for write count in auxiliary page read */
 821:../src/drivers/mss_nvm/mss_nvm.c ****                 g_nvm[block]->NV_PAGE_STATUS |= 0x2u;
 822:../src/drivers/mss_nvm/mss_nvm.c ****         
 823:../src/drivers/mss_nvm/mss_nvm.c ****                 if(block == NVM_BLOCK_0)
 824:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 825:../src/drivers/mss_nvm/mss_nvm.c ****                     write_count = *((uint32_t *)((NVM0_BASE_ADDRESS + offset) & PAGE_ADDR_MASK));
 826:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 827:../src/drivers/mss_nvm/mss_nvm.c ****                 else
 828:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 829:../src/drivers/mss_nvm/mss_nvm.c ****                     write_count = *((uint32_t *)((NVM1_BASE_ADDRESS + offset) & PAGE_ADDR_MASK));
 830:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 831:../src/drivers/mss_nvm/mss_nvm.c ****         
 832:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Wait for NVM to become ready. */
 833:../src/drivers/mss_nvm/mss_nvm.c ****                 status = wait_nvm_ready(block);
 834:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Clear R/W page status select bit */
 835:../src/drivers/mss_nvm/mss_nvm.c ****                 g_nvm[block]->NV_PAGE_STATUS &= ~(0x2u);
 836:../src/drivers/mss_nvm/mss_nvm.c ****             }
 837:../src/drivers/mss_nvm/mss_nvm.c ****         
 838:../src/drivers/mss_nvm/mss_nvm.c ****             /* Release eNVM controllers so that other masters can gain access to it. */
 839:../src/drivers/mss_nvm/mss_nvm.c ****             release_ctrl_access();
 840:../src/drivers/mss_nvm/mss_nvm.c ****         
 841:../src/drivers/mss_nvm/mss_nvm.c ****             /* The write count is contained in bits [24:4] of the page's auxiliary data. */
 842:../src/drivers/mss_nvm/mss_nvm.c ****             write_count = (write_count & AUX_DATA_WC_MASK) >> AUX_DATA_WC_SHIFT;
 843:../src/drivers/mss_nvm/mss_nvm.c ****         }
 844:../src/drivers/mss_nvm/mss_nvm.c ****     }
 845:../src/drivers/mss_nvm/mss_nvm.c ****     
 846:../src/drivers/mss_nvm/mss_nvm.c ****     return write_count;
 847:../src/drivers/mss_nvm/mss_nvm.c **** }
 848:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 849:../src/drivers/mss_nvm/mss_nvm.c ****  *
 850:../src/drivers/mss_nvm/mss_nvm.c ****  */
 851:../src/drivers/mss_nvm/mss_nvm.c ****  
 852:../src/drivers/mss_nvm/mss_nvm.c **** /* eNVM0 -010/025/050 */
 853:../src/drivers/mss_nvm/mss_nvm.c **** #define LOWER0_PROTECT_BOTTOM_OFFSET        0x00000000
 854:../src/drivers/mss_nvm/mss_nvm.c **** #define LOWER0_PROTECT_TOP_OFFSET           0x00000FFFu
 855:../src/drivers/mss_nvm/mss_nvm.c **** 
 856:../src/drivers/mss_nvm/mss_nvm.c **** #define UPPER0_PROTECT_BOTTOM_OFFSET        0x0003F000u
 857:../src/drivers/mss_nvm/mss_nvm.c **** #define UPPER0_PROTECT_TOP_OFFSET           0x0003FFFFu
 858:../src/drivers/mss_nvm/mss_nvm.c **** 
 859:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM0_RSV_OFFSET                     0x0003F800u
 860:../src/drivers/mss_nvm/mss_nvm.c **** 
 861:../src/drivers/mss_nvm/mss_nvm.c **** /* 060 */
 862:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM0_UPPER1_PROTECT_BOTTOM_OFFSET   0x0003D000u
 863:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM0_UPPER1_PROTECT_TOP_OFFSET      0x0003DFFFu
 864:../src/drivers/mss_nvm/mss_nvm.c **** #define O60_NVM_RSV_OFFSET                  0x0003E000u
 865:../src/drivers/mss_nvm/mss_nvm.c **** 
 866:../src/drivers/mss_nvm/mss_nvm.c **** /* 005 */
 867:../src/drivers/mss_nvm/mss_nvm.c **** #define OO5_UPPER0_PROTECT_BOTTOM_OFFSET    0x0001F000u
 868:../src/drivers/mss_nvm/mss_nvm.c **** #define OO5_UPPER0_PROTECT_TOP_OFFSET       0x0001FFFFu
 869:../src/drivers/mss_nvm/mss_nvm.c **** #define OO5_NVM_RSV_OFFSET                  0x0001F800u
 870:../src/drivers/mss_nvm/mss_nvm.c **** 
 871:../src/drivers/mss_nvm/mss_nvm.c **** /* eNVM1 - 090/150 */
 872:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM0_UPPER0_PROTECT_BOTTOM_OFFSET   0x0007D000u
 873:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM0_UPPER0_PROTECT_TOP_OFFSET      0x0007DFFFu
 874:../src/drivers/mss_nvm/mss_nvm.c **** 
 875:../src/drivers/mss_nvm/mss_nvm.c **** #define LOWER1_PROTECT_BOTTOM_OFFSET        0x0007C000u
 876:../src/drivers/mss_nvm/mss_nvm.c **** #define LOWER1_PROTECT_TOP_OFFSET           0x0007CFFFu
 877:../src/drivers/mss_nvm/mss_nvm.c **** 
 878:../src/drivers/mss_nvm/mss_nvm.c **** #define UPPER1_PROTECT_BOTTOM_OFFSET        0x0007B000u
 879:../src/drivers/mss_nvm/mss_nvm.c **** #define UPPER1_PROTECT_TOP_OFFSET           0x0007BFFFu
 880:../src/drivers/mss_nvm/mss_nvm.c **** 
 881:../src/drivers/mss_nvm/mss_nvm.c **** #define NVM1_RSV_OFFSET                     0x0007E000u
 882:../src/drivers/mss_nvm/mss_nvm.c **** 
 883:../src/drivers/mss_nvm/mss_nvm.c **** #define PROTECT_USER_MASK                   0x9999u
 884:../src/drivers/mss_nvm/mss_nvm.c **** #define READ_ONLY                           0x1u
 885:../src/drivers/mss_nvm/mss_nvm.c **** #define WRITE_ONLY                          0x8u
 886:../src/drivers/mss_nvm/mss_nvm.c **** #define NO_READ_WRITE                       0x0u
 887:../src/drivers/mss_nvm/mss_nvm.c **** #define WRITE_ENABLED                       (WRITE_ONLY | READ_ONLY)
 888:../src/drivers/mss_nvm/mss_nvm.c **** 
 889:../src/drivers/mss_nvm/mss_nvm.c **** #define PROTECTION_ON                       0x1u
 890:../src/drivers/mss_nvm/mss_nvm.c **** #define PROTECTION_OFF                      0x0u
 891:../src/drivers/mss_nvm/mss_nvm.c **** 
 892:../src/drivers/mss_nvm/mss_nvm.c **** 
 893:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 894:../src/drivers/mss_nvm/mss_nvm.c ****  * Check protection region and reserved region of eNVM
 895:../src/drivers/mss_nvm/mss_nvm.c ****  *
 896:../src/drivers/mss_nvm/mss_nvm.c ****  * 005 device
 897:../src/drivers/mss_nvm/mss_nvm.c ****  *  The 005 device has 128KB of eNVM memory(0x00000 - 0x1FFFF)
 898:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x1F800 - 0x1FFFF - 2KB(16 pages) reserved eNVM memory   
 899:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x00000 - 0x00FFF - 4KB(32 pages) user lower(bottom) protected area of eNVM0 memory.
 900:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x1F000 - 0x1FFFF - 4KB(32 pages) user upper(top) protected area of eNVM0 memory
 901:../src/drivers/mss_nvm/mss_nvm.c ****  *
 902:../src/drivers/mss_nvm/mss_nvm.c ****  * 010/025/050 device
 903:../src/drivers/mss_nvm/mss_nvm.c ****  *  The 010/025/050 device has 256KB of eNVM memory(0x00000 - 0x3FFFF)
 904:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x3F800 - 0x3FFFF - 2KB(16 pages) reserved eNVM memory   
 905:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x00000 - 0x00FFF - 4KB(32 pages) user lower(bottom) protected area of eNVM0 memory.
 906:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x3F000 - 0x3FFFF - 4KB(32 pages) user upper(top) protected area of eNVM0 memory
 907:../src/drivers/mss_nvm/mss_nvm.c ****  *
 908:../src/drivers/mss_nvm/mss_nvm.c ****  * 060 device
 909:../src/drivers/mss_nvm/mss_nvm.c ****  *  The 060 device has 256KB of eNVM memory(0x00000 - 0x3FFFF)
 910:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x3E000 - 0x3FFFF - 8KB(64 pages) reserved eNVM memory   
 911:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x00000 - 0x00FFF - 4KB(32 pages) user lower0(bottom) protected area of eNVM0 memory.
 912:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x3F000 - 0x3FFFF - 4KB(32 pages) user upper0(top) protected area of eNVM0 memory    
 913:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x3E000 - 0x3EFFF - 4KB(32 pages) user lower1(bottom) protected area of eNVM0 memory.
 914:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x3D000 - 0x3DFFF - 4KB(32 pages) user upper1(top) protected area of eNVM0 memory.
 915:../src/drivers/mss_nvm/mss_nvm.c ****  *
 916:../src/drivers/mss_nvm/mss_nvm.c ****  * 090/150 device
 917:../src/drivers/mss_nvm/mss_nvm.c ****  *  The 090/150 device has 512KB of eNVM memory(0x00000 - 0x7FFFF)
 918:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x7E000 - 0x7FFFF - 8KB(64 pages) reserved eNVM memory   
 919:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x00000 - 0x00FFF - 4KB(32 pages) user lower0(bottom) protected area of eNVM0 memory.
 920:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x7D000 - 0x7DFFF - 4KB(32 pages) user upper0(top) protected area of eNVM1 memory    
 921:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x7C000 - 0x7CFFF - 4KB(32 pages) user lower1(bottom) protected area of eNVM1 memory.
 922:../src/drivers/mss_nvm/mss_nvm.c ****  *  0x7B000 - 0x7BFFF - 4KB(32 pages) user upper1(top) protected area of eNVM1 memory.          
 923:../src/drivers/mss_nvm/mss_nvm.c ****  *
 924:../src/drivers/mss_nvm/mss_nvm.c ****  */
 925:../src/drivers/mss_nvm/mss_nvm.c **** static nvm_status_t check_protection_reserved_nvm(uint32_t offset, uint32_t length)
 926:../src/drivers/mss_nvm/mss_nvm.c **** {
 344              		.loc 1 926 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              	.LVL36:
 349 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 350              		.cfi_def_cfa_offset 20
 351              		.cfi_offset 4, -20
 352              		.cfi_offset 5, -16
 353              		.cfi_offset 6, -12
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356              		.loc 1 926 0
 357 0002 0446     		mov	r4, r0
 927:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t device_version;
 928:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t protection_data;
 929:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t protection_user0;
 930:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t protection_user1;
 931:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t protection_user2;
 932:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t protection_user3;
 933:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t protection_flag;
 934:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t length_minus_one = 0u;
 935:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status = NVM_SUCCESS;
 936:../src/drivers/mss_nvm/mss_nvm.c **** 
 937:../src/drivers/mss_nvm/mss_nvm.c ****     if(0u != length)
 358              		.loc 1 937 0
 359 0004 09B1     		cbz	r1, .L95
 938:../src/drivers/mss_nvm/mss_nvm.c ****     {
 939:../src/drivers/mss_nvm/mss_nvm.c ****         length_minus_one = length - 1u;
 360              		.loc 1 939 0
 361 0006 4D1E     		subs	r5, r1, #1
 362              	.LVL37:
 363 0008 00E0     		b	.L50
 364              	.LVL38:
 365              	.L95:
 934:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status = NVM_SUCCESS;
 366              		.loc 1 934 0
 367 000a 0D46     		mov	r5, r1
 368              	.LVL39:
 369              	.L50:
 940:../src/drivers/mss_nvm/mss_nvm.c ****     }
 941:../src/drivers/mss_nvm/mss_nvm.c **** 
 942:../src/drivers/mss_nvm/mss_nvm.c ****     device_version = (SYSREG->DEVICE_VERSION & 0xFFFFu);
 943:../src/drivers/mss_nvm/mss_nvm.c ****     
 944:../src/drivers/mss_nvm/mss_nvm.c ****     protection_flag = PROTECTION_OFF;
 945:../src/drivers/mss_nvm/mss_nvm.c ****     
 946:../src/drivers/mss_nvm/mss_nvm.c ****     /* 005 device */
 947:../src/drivers/mss_nvm/mss_nvm.c ****     if(0xF805u == device_version)
 370              		.loc 1 947 0
 371 000c 4FF60500 		movw	r0, #63493
 372              	.LVL40:
 942:../src/drivers/mss_nvm/mss_nvm.c ****     
 373              		.loc 1 942 0
 374 0010 9E4B     		ldr	r3, .L181
 375 0012 D3F84C21 		ldr	r2, [r3, #332]
 376 0016 92B2     		uxth	r2, r2
 377              	.LVL41:
 378              		.loc 1 947 0
 379 0018 8242     		cmp	r2, r0
 380 001a 3AD1     		bne	.L51
 948:../src/drivers/mss_nvm/mss_nvm.c ****     {
 949:../src/drivers/mss_nvm/mss_nvm.c ****         /* Read eNVM user protect register for lower and upper area protection data */
 950:../src/drivers/mss_nvm/mss_nvm.c ****         protection_data = (SYSREG->ENVM_PROTECT_USER & PROTECT_USER_MASK);
 381              		.loc 1 950 0
 382 001c D3F84421 		ldr	r2, [r3, #324]
 383              	.LVL42:
 384 0020 49F69913 		movw	r3, #39321
 951:../src/drivers/mss_nvm/mss_nvm.c ****         
 952:../src/drivers/mss_nvm/mss_nvm.c ****         /* Check whether the eNVM0 lower or upper area is protected or not */
 953:../src/drivers/mss_nvm/mss_nvm.c ****         if(PROTECT_USER_MASK != protection_data)
 385              		.loc 1 953 0
 386 0024 49F69910 		movw	r0, #39321
 950:../src/drivers/mss_nvm/mss_nvm.c ****         
 387              		.loc 1 950 0
 388 0028 1340     		ands	r3, r3, r2
 389              	.LVL43:
 390              		.loc 1 953 0
 391 002a 8342     		cmp	r3, r0
 392 002c 23D0     		beq	.L82
 954:../src/drivers/mss_nvm/mss_nvm.c ****         {
 955:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user0 = (protection_data & 0x000Fu);
 956:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user1 = ((protection_data & 0x00F0u) >> 4u);
 393              		.loc 1 956 0
 394 002e 02F09003 		and	r3, r2, #144
 395              	.LVL44:
 957:../src/drivers/mss_nvm/mss_nvm.c ****             
 958:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
 959:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 79545. 
 960:../src/drivers/mss_nvm/mss_nvm.c ****              * Check write or No read/write protection is enabled then don't lock pages
 961:../src/drivers/mss_nvm/mss_nvm.c ****              * of that eNVM block
 962:../src/drivers/mss_nvm/mss_nvm.c ****              */
 963:../src/drivers/mss_nvm/mss_nvm.c ****             if((WRITE_ONLY == protection_user0) || (WRITE_ONLY == protection_user1) ||
 396              		.loc 1 963 0
 397 0032 D707     		lsls	r7, r2, #31
 955:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user1 = ((protection_data & 0x00F0u) >> 4u);
 398              		.loc 1 955 0
 399 0034 02F00900 		and	r0, r2, #9
 400              	.LVL45:
 956:../src/drivers/mss_nvm/mss_nvm.c ****             
 401              		.loc 1 956 0
 402 0038 4FEA1313 		lsr	r3, r3, #4
 403              	.LVL46:
 404              		.loc 1 963 0
 405 003c 01D5     		bpl	.L53
 964:../src/drivers/mss_nvm/mss_nvm.c ****                (NO_READ_WRITE == protection_user0) || (NO_READ_WRITE == protection_user1))
 406              		.loc 1 964 0
 407 003e DE07     		lsls	r6, r3, #31
 408 0040 02D4     		bmi	.L54
 409              	.L53:
 965:../src/drivers/mss_nvm/mss_nvm.c ****             {
 966:../src/drivers/mss_nvm/mss_nvm.c ****                 g_do_not_lock_page = ON;
 410              		.loc 1 966 0
 411 0042 934A     		ldr	r2, .L181+4
 412              	.LVL47:
 413 0044 0126     		movs	r6, #1
 414 0046 1670     		strb	r6, [r2]
 415              	.L54:
 967:../src/drivers/mss_nvm/mss_nvm.c ****             }
 968:../src/drivers/mss_nvm/mss_nvm.c ****             
 969:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
 970:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 70908.
 971:../src/drivers/mss_nvm/mss_nvm.c ****              * Checking NVM0 lower protected area is Read or Write or 'No R/W' access
 972:../src/drivers/mss_nvm/mss_nvm.c ****              */
 973:../src/drivers/mss_nvm/mss_nvm.c ****             if(WRITE_ENABLED != protection_user0)
 416              		.loc 1 973 0
 417 0048 0928     		cmp	r0, #9
 418 004a 07D0     		beq	.L55
 974:../src/drivers/mss_nvm/mss_nvm.c ****             {
 975:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset is in the range of lower protected memory area,
 976:../src/drivers/mss_nvm/mss_nvm.c ****                  * if it is then the memory is protected.
 977:../src/drivers/mss_nvm/mss_nvm.c ****                  */
 978:../src/drivers/mss_nvm/mss_nvm.c ****                 if(offset <= LOWER0_PROTECT_TOP_OFFSET)
 419              		.loc 1 978 0
 420 004c B4F5805F 		cmp	r4, #4096
 421 0050 04D2     		bcs	.L55
 422              	.LVL48:
 423              	.LBB25:
 424              	.LBB26:
 979:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 980:../src/drivers/mss_nvm/mss_nvm.c ****                     protection_flag = protection_check(protection_user0, length);
 981:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 982:../src/drivers/mss_nvm/mss_nvm.c ****             }
 983:../src/drivers/mss_nvm/mss_nvm.c ****             
 984:../src/drivers/mss_nvm/mss_nvm.c ****             /*
 985:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 70908.
 986:../src/drivers/mss_nvm/mss_nvm.c ****              * Checking NVM0 upper protected area is Read or Write or 'No R/W' access 
 987:../src/drivers/mss_nvm/mss_nvm.c ****              */
 988:../src/drivers/mss_nvm/mss_nvm.c ****             if((WRITE_ENABLED != protection_user1) && (OFF == protection_flag))
 989:../src/drivers/mss_nvm/mss_nvm.c ****             {
 990:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset or (offset + length) is in the range of upper 
 991:../src/drivers/mss_nvm/mss_nvm.c ****                  *  protect memory area, if it is then the memory is protected.
 992:../src/drivers/mss_nvm/mss_nvm.c ****                  */
 993:../src/drivers/mss_nvm/mss_nvm.c ****                 if(((offset >= OO5_UPPER0_PROTECT_BOTTOM_OFFSET) && 
 994:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= OO5_UPPER0_PROTECT_TOP_OFFSET)) ||
 995:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= OO5_UPPER0_PROTECT_BOTTOM_OFFSET) &&
 996:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < OO5_UPPER0_PROTECT_BOTTOM_OFFSET)))
 997:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 998:../src/drivers/mss_nvm/mss_nvm.c ****                     protection_flag = protection_check(protection_user1, length);
 999:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1000:../src/drivers/mss_nvm/mss_nvm.c ****             }
1001:../src/drivers/mss_nvm/mss_nvm.c ****         }
1002:../src/drivers/mss_nvm/mss_nvm.c ****         
1003:../src/drivers/mss_nvm/mss_nvm.c ****         /* Check the eNVM memory is protected or not */
1004:../src/drivers/mss_nvm/mss_nvm.c ****         if(PROTECTION_ON == protection_flag)
1005:../src/drivers/mss_nvm/mss_nvm.c ****         {
1006:../src/drivers/mss_nvm/mss_nvm.c ****             /* Status is protection error if lower or upper area of eNVM is protected */
1007:../src/drivers/mss_nvm/mss_nvm.c ****             status = NVM_PROTECTION_ERROR;
1008:../src/drivers/mss_nvm/mss_nvm.c ****         }
1009:../src/drivers/mss_nvm/mss_nvm.c ****         else
1010:../src/drivers/mss_nvm/mss_nvm.c ****         {
1011:../src/drivers/mss_nvm/mss_nvm.c ****             /* Check (offset + length) is out of eNVM memory */
1012:../src/drivers/mss_nvm/mss_nvm.c ****             if((offset + length_minus_one) > OO5_UPPER0_PROTECT_TOP_OFFSET)
1013:../src/drivers/mss_nvm/mss_nvm.c ****             {
1014:../src/drivers/mss_nvm/mss_nvm.c ****                 status = NVM_INVALID_PARAMETER;
1015:../src/drivers/mss_nvm/mss_nvm.c ****             }
1016:../src/drivers/mss_nvm/mss_nvm.c ****             else
1017:../src/drivers/mss_nvm/mss_nvm.c ****             {
1018:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset is in eNVM reserved memory area - 16 pages reserved */
1019:../src/drivers/mss_nvm/mss_nvm.c ****                 if(((offset >= OO5_NVM_RSV_OFFSET) && (offset <= OO5_UPPER0_PROTECT_TOP_OFFSET)) ||
1020:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= OO5_NVM_RSV_OFFSET) &&
1021:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < OO5_NVM_RSV_OFFSET)))
1022:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1023:../src/drivers/mss_nvm/mss_nvm.c ****                     /* 
1024:../src/drivers/mss_nvm/mss_nvm.c ****                      * SAR 70908.
1025:../src/drivers/mss_nvm/mss_nvm.c ****                      * Status is protection error if the offset or (offset + length) is 
1026:../src/drivers/mss_nvm/mss_nvm.c ****                      * in reserved area of eNVM
1027:../src/drivers/mss_nvm/mss_nvm.c ****                      */
1028:../src/drivers/mss_nvm/mss_nvm.c ****                     status = NVM_PROTECTION_ERROR;
1029:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1030:../src/drivers/mss_nvm/mss_nvm.c ****                 else
1031:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1032:../src/drivers/mss_nvm/mss_nvm.c ****                     /* Status is success if the offset or (offset + length) is 
1033:../src/drivers/mss_nvm/mss_nvm.c ****                      * in RW access of eNVM memory(not protected)
1034:../src/drivers/mss_nvm/mss_nvm.c ****                      */
1035:../src/drivers/mss_nvm/mss_nvm.c ****                     status = NVM_SUCCESS;
1036:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1037:../src/drivers/mss_nvm/mss_nvm.c ****             }
1038:../src/drivers/mss_nvm/mss_nvm.c ****         }
1039:../src/drivers/mss_nvm/mss_nvm.c ****     }
1040:../src/drivers/mss_nvm/mss_nvm.c ****     
1041:../src/drivers/mss_nvm/mss_nvm.c ****     /* 010/025/050 device */
1042:../src/drivers/mss_nvm/mss_nvm.c ****     else if((0xF802u == device_version) || (0xF803u == device_version) || (0xF804u == device_versio
1043:../src/drivers/mss_nvm/mss_nvm.c ****     {    
1044:../src/drivers/mss_nvm/mss_nvm.c ****         /* Read eNVM user protect register for lower and upper area protection data */
1045:../src/drivers/mss_nvm/mss_nvm.c ****         protection_data = (SYSREG->ENVM_PROTECT_USER & PROTECT_USER_MASK);
1046:../src/drivers/mss_nvm/mss_nvm.c ****         
1047:../src/drivers/mss_nvm/mss_nvm.c ****         /* Check whether the eNVM0 lower or upper area is protected or not */
1048:../src/drivers/mss_nvm/mss_nvm.c ****         if(PROTECT_USER_MASK != protection_data)
1049:../src/drivers/mss_nvm/mss_nvm.c ****         {
1050:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user0 = (protection_data & 0x000Fu);
1051:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user1 = ((protection_data & 0x00F0u) >> 4u);
1052:../src/drivers/mss_nvm/mss_nvm.c ****             
1053:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
1054:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 79545. 
1055:../src/drivers/mss_nvm/mss_nvm.c ****              * Check write or No read/write protection is enabled then don't lock pages
1056:../src/drivers/mss_nvm/mss_nvm.c ****              * of that eNVM block
1057:../src/drivers/mss_nvm/mss_nvm.c ****              */
1058:../src/drivers/mss_nvm/mss_nvm.c ****             if((WRITE_ONLY == protection_user0) || (WRITE_ONLY == protection_user1) ||
1059:../src/drivers/mss_nvm/mss_nvm.c ****                (NO_READ_WRITE == protection_user0) || (NO_READ_WRITE == protection_user1))
1060:../src/drivers/mss_nvm/mss_nvm.c ****             {
1061:../src/drivers/mss_nvm/mss_nvm.c ****                 g_do_not_lock_page = ON;
1062:../src/drivers/mss_nvm/mss_nvm.c ****             }
1063:../src/drivers/mss_nvm/mss_nvm.c ****             
1064:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
1065:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 70908.
1066:../src/drivers/mss_nvm/mss_nvm.c ****              * Check NVM0 lower protected area is Read or Write or 'No R/W' access
1067:../src/drivers/mss_nvm/mss_nvm.c ****              */
1068:../src/drivers/mss_nvm/mss_nvm.c ****             if(WRITE_ENABLED != protection_user0)
1069:../src/drivers/mss_nvm/mss_nvm.c ****             {
1070:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset is in the range of lower protected memory area,
1071:../src/drivers/mss_nvm/mss_nvm.c ****                  * if it is then the memory is protected.
1072:../src/drivers/mss_nvm/mss_nvm.c ****                  */
1073:../src/drivers/mss_nvm/mss_nvm.c ****                 if(offset <= LOWER0_PROTECT_TOP_OFFSET)
1074:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1075:../src/drivers/mss_nvm/mss_nvm.c ****                     protection_flag = protection_check(protection_user0, length);
1076:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1077:../src/drivers/mss_nvm/mss_nvm.c ****             }
1078:../src/drivers/mss_nvm/mss_nvm.c ****             
1079:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
1080:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 70908.
1081:../src/drivers/mss_nvm/mss_nvm.c ****              * Check NVM0 upper protected area is Read or Write or 'No R/W' access
1082:../src/drivers/mss_nvm/mss_nvm.c ****              */
1083:../src/drivers/mss_nvm/mss_nvm.c ****             if((WRITE_ENABLED != protection_user1) && (OFF == protection_flag))
1084:../src/drivers/mss_nvm/mss_nvm.c ****             {
1085:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset or (offset + length) is in the range of upper 
1086:../src/drivers/mss_nvm/mss_nvm.c ****                  * protect memory area, if it is then the memory is protected.
1087:../src/drivers/mss_nvm/mss_nvm.c ****                  */
1088:../src/drivers/mss_nvm/mss_nvm.c ****                 if(((offset >= UPPER0_PROTECT_BOTTOM_OFFSET) &&
1089:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= UPPER0_PROTECT_TOP_OFFSET)) ||
1090:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= UPPER0_PROTECT_BOTTOM_OFFSET) &&
1091:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < UPPER0_PROTECT_BOTTOM_OFFSET)))
1092:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1093:../src/drivers/mss_nvm/mss_nvm.c ****                     protection_flag = protection_check(protection_user1, length);
1094:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1095:../src/drivers/mss_nvm/mss_nvm.c ****             } 
1096:../src/drivers/mss_nvm/mss_nvm.c ****         }
1097:../src/drivers/mss_nvm/mss_nvm.c ****         
1098:../src/drivers/mss_nvm/mss_nvm.c ****         /* Check eNVM lower or upper area of memory is protected or not */
1099:../src/drivers/mss_nvm/mss_nvm.c ****         if(PROTECTION_ON == protection_flag)
1100:../src/drivers/mss_nvm/mss_nvm.c ****         {
1101:../src/drivers/mss_nvm/mss_nvm.c ****             /* Status is protection error if lower or upper area of eNVM is protected */
1102:../src/drivers/mss_nvm/mss_nvm.c ****             status = NVM_PROTECTION_ERROR;
1103:../src/drivers/mss_nvm/mss_nvm.c ****         }
1104:../src/drivers/mss_nvm/mss_nvm.c ****         else
1105:../src/drivers/mss_nvm/mss_nvm.c ****         {
1106:../src/drivers/mss_nvm/mss_nvm.c ****              /* Check (offset + length) is out of eNVM memory */
1107:../src/drivers/mss_nvm/mss_nvm.c ****             if((offset + length_minus_one) > UPPER0_PROTECT_TOP_OFFSET)
1108:../src/drivers/mss_nvm/mss_nvm.c ****             {
1109:../src/drivers/mss_nvm/mss_nvm.c ****                 status = NVM_INVALID_PARAMETER;
1110:../src/drivers/mss_nvm/mss_nvm.c ****             }
1111:../src/drivers/mss_nvm/mss_nvm.c ****             else
1112:../src/drivers/mss_nvm/mss_nvm.c ****             {
1113:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset is in eNVM reserved memory area - 16 pages reserved */
1114:../src/drivers/mss_nvm/mss_nvm.c ****                 if(((offset >= NVM0_RSV_OFFSET) && (offset <= UPPER0_PROTECT_TOP_OFFSET)) ||
1115:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM0_RSV_OFFSET) && (offset < NVM0_RSV_OFFSET)
1116:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1117:../src/drivers/mss_nvm/mss_nvm.c ****                     /* 
1118:../src/drivers/mss_nvm/mss_nvm.c ****                      * SAR 70908.
1119:../src/drivers/mss_nvm/mss_nvm.c ****                      * Status is protection error if the offset or (offset + length) is 
1120:../src/drivers/mss_nvm/mss_nvm.c ****                      * in reserved area of eNVM
1121:../src/drivers/mss_nvm/mss_nvm.c ****                      */
1122:../src/drivers/mss_nvm/mss_nvm.c ****                     status = NVM_PROTECTION_ERROR;
1123:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1124:../src/drivers/mss_nvm/mss_nvm.c ****                 else
1125:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1126:../src/drivers/mss_nvm/mss_nvm.c ****                     /* Status is success if offset or (offset + length) is 
1127:../src/drivers/mss_nvm/mss_nvm.c ****                      * in RW access of eNVM memory(not protected)
1128:../src/drivers/mss_nvm/mss_nvm.c ****                      */
1129:../src/drivers/mss_nvm/mss_nvm.c ****                     status = NVM_SUCCESS;
1130:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1131:../src/drivers/mss_nvm/mss_nvm.c ****             }
1132:../src/drivers/mss_nvm/mss_nvm.c ****         }
1133:../src/drivers/mss_nvm/mss_nvm.c ****     }
1134:../src/drivers/mss_nvm/mss_nvm.c ****     
1135:../src/drivers/mss_nvm/mss_nvm.c ****     /* 060 device */
1136:../src/drivers/mss_nvm/mss_nvm.c ****     else if(0xF808u == device_version)
1137:../src/drivers/mss_nvm/mss_nvm.c ****     {
1138:../src/drivers/mss_nvm/mss_nvm.c ****         /* Read eNVM user protect register for lower and upper area protection data */
1139:../src/drivers/mss_nvm/mss_nvm.c ****         protection_data = (SYSREG->ENVM_PROTECT_USER & PROTECT_USER_MASK);
1140:../src/drivers/mss_nvm/mss_nvm.c ****         
1141:../src/drivers/mss_nvm/mss_nvm.c ****         /* Check whether the eNVM0 lower0/1 or upper0/1 area is protected or not */
1142:../src/drivers/mss_nvm/mss_nvm.c ****         if(PROTECT_USER_MASK != protection_data)
1143:../src/drivers/mss_nvm/mss_nvm.c ****         {
1144:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user0 = (protection_data & 0x000Fu);
1145:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user1 = ((protection_data & 0x00F0u) >> 4u);
1146:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user2 = ((protection_data & 0x0F00u) >> 8u);
1147:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user3 = ((protection_data & 0xF000u) >> 12u);
1148:../src/drivers/mss_nvm/mss_nvm.c ****             
1149:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
1150:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 70908.
1151:../src/drivers/mss_nvm/mss_nvm.c ****              * Check NVM0 lower0 protected area is Read or Write or 'No R/W' access
1152:../src/drivers/mss_nvm/mss_nvm.c ****              */
1153:../src/drivers/mss_nvm/mss_nvm.c ****             if(WRITE_ENABLED != protection_user0) 
1154:../src/drivers/mss_nvm/mss_nvm.c ****             {
1155:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset is in the range of lower protected memory area,
1156:../src/drivers/mss_nvm/mss_nvm.c ****                  * if it is then the memory is protected.
1157:../src/drivers/mss_nvm/mss_nvm.c ****                  */  
1158:../src/drivers/mss_nvm/mss_nvm.c ****                 if(offset <= LOWER0_PROTECT_TOP_OFFSET)
1159:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1160:../src/drivers/mss_nvm/mss_nvm.c ****                     protection_flag = protection_check(protection_user0, length);
1161:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1162:../src/drivers/mss_nvm/mss_nvm.c ****             }
1163:../src/drivers/mss_nvm/mss_nvm.c ****             
1164:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
1165:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 70908.
1166:../src/drivers/mss_nvm/mss_nvm.c ****              * Check NVM0 upper1 protected area is Read or Write or 'No R/W' access
1167:../src/drivers/mss_nvm/mss_nvm.c ****              */
1168:../src/drivers/mss_nvm/mss_nvm.c ****             if((WRITE_ENABLED != protection_user3) && (OFF == protection_flag))
1169:../src/drivers/mss_nvm/mss_nvm.c ****             {
1170:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset or (offset + length) is in the range of upper1 
1171:../src/drivers/mss_nvm/mss_nvm.c ****                  *  protect memory area, if it is then the memory is protected.
1172:../src/drivers/mss_nvm/mss_nvm.c ****                  */
1173:../src/drivers/mss_nvm/mss_nvm.c ****                 if(((offset >= NVM0_UPPER1_PROTECT_BOTTOM_OFFSET) &&
1174:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= NVM0_UPPER1_PROTECT_TOP_OFFSET)) ||
1175:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM0_UPPER1_PROTECT_BOTTOM_OFFSET) &&
1176:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < NVM0_UPPER1_PROTECT_BOTTOM_OFFSET)))
1177:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1178:../src/drivers/mss_nvm/mss_nvm.c ****                     protection_flag = protection_check(protection_user3, length);
1179:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1180:../src/drivers/mss_nvm/mss_nvm.c ****             }
1181:../src/drivers/mss_nvm/mss_nvm.c ****         }
1182:../src/drivers/mss_nvm/mss_nvm.c ****         
1183:../src/drivers/mss_nvm/mss_nvm.c ****         /* Check eNVM lower0 or upper1 memory is protected or not.
1184:../src/drivers/mss_nvm/mss_nvm.c ****          * No protection check for  0x3F000 - 0x3FFFF and 0x3E000 - 0x3EFFF lower1/upper0 
1185:../src/drivers/mss_nvm/mss_nvm.c ****          * protected area of eNVM0 memory because it's fall under eNVM reserved area    
1186:../src/drivers/mss_nvm/mss_nvm.c ****          */
1187:../src/drivers/mss_nvm/mss_nvm.c ****         if(PROTECTION_ON == protection_flag)
1188:../src/drivers/mss_nvm/mss_nvm.c ****         {
1189:../src/drivers/mss_nvm/mss_nvm.c ****             /* Status is protection error if lower0 or upper1 area of eNVM is protected */
1190:../src/drivers/mss_nvm/mss_nvm.c ****             status = NVM_PROTECTION_ERROR;
1191:../src/drivers/mss_nvm/mss_nvm.c ****         }
1192:../src/drivers/mss_nvm/mss_nvm.c ****         else
1193:../src/drivers/mss_nvm/mss_nvm.c ****         {
1194:../src/drivers/mss_nvm/mss_nvm.c ****             /* Check (offset + length) is out of eNVM memory*/
1195:../src/drivers/mss_nvm/mss_nvm.c ****             if((offset + length_minus_one) > UPPER0_PROTECT_TOP_OFFSET)
1196:../src/drivers/mss_nvm/mss_nvm.c ****             {
1197:../src/drivers/mss_nvm/mss_nvm.c ****                 status = NVM_INVALID_PARAMETER;
1198:../src/drivers/mss_nvm/mss_nvm.c ****             }
1199:../src/drivers/mss_nvm/mss_nvm.c ****             else
1200:../src/drivers/mss_nvm/mss_nvm.c ****             {
1201:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset is in eNVM reserved memory area - 64 pages reserved */
1202:../src/drivers/mss_nvm/mss_nvm.c ****                 if(((offset >= O60_NVM_RSV_OFFSET) && (offset <= UPPER0_PROTECT_TOP_OFFSET)) ||
1203:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= O60_NVM_RSV_OFFSET) &&
1204:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < O60_NVM_RSV_OFFSET)))
1205:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1206:../src/drivers/mss_nvm/mss_nvm.c ****                     /* 
1207:../src/drivers/mss_nvm/mss_nvm.c ****                      * SAR 70908.
1208:../src/drivers/mss_nvm/mss_nvm.c ****                      * Status is protection error if the offset or (offset + length) is 
1209:../src/drivers/mss_nvm/mss_nvm.c ****                      * in reserved area of eNVM
1210:../src/drivers/mss_nvm/mss_nvm.c ****                      */
1211:../src/drivers/mss_nvm/mss_nvm.c ****                     status = NVM_PROTECTION_ERROR;
1212:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1213:../src/drivers/mss_nvm/mss_nvm.c ****                 else
1214:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1215:../src/drivers/mss_nvm/mss_nvm.c ****                     status = NVM_SUCCESS;
1216:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1217:../src/drivers/mss_nvm/mss_nvm.c ****             }
1218:../src/drivers/mss_nvm/mss_nvm.c ****         }    
1219:../src/drivers/mss_nvm/mss_nvm.c ****     }
1220:../src/drivers/mss_nvm/mss_nvm.c ****     
1221:../src/drivers/mss_nvm/mss_nvm.c ****     /* 090/150 device */
1222:../src/drivers/mss_nvm/mss_nvm.c ****     else if((0xF807u == device_version) || (0xF806u == device_version))
1223:../src/drivers/mss_nvm/mss_nvm.c ****     {
1224:../src/drivers/mss_nvm/mss_nvm.c ****         /* Read eNVM user protect register for lower and upper area protection data */
1225:../src/drivers/mss_nvm/mss_nvm.c ****         protection_data = (SYSREG->ENVM_PROTECT_USER & PROTECT_USER_MASK);
1226:../src/drivers/mss_nvm/mss_nvm.c ****         
1227:../src/drivers/mss_nvm/mss_nvm.c ****         /* Check whether the eNVM0 and eNVM1 lower or upper area is protected or not */
1228:../src/drivers/mss_nvm/mss_nvm.c ****         if(PROTECT_USER_MASK != protection_data)
1229:../src/drivers/mss_nvm/mss_nvm.c ****         {
1230:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user0 = (protection_data & 0x000Fu);
1231:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user1 = ((protection_data & 0x00F0u) >> 4u);
1232:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user2 = ((protection_data & 0x0F00u) >> 8u);
1233:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user3 = ((protection_data & 0xF000u) >> 12u);
1234:../src/drivers/mss_nvm/mss_nvm.c ****             
1235:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
1236:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 79545. 
1237:../src/drivers/mss_nvm/mss_nvm.c ****              * Check write or No read/write protection is enabled then don't lock pages
1238:../src/drivers/mss_nvm/mss_nvm.c ****              * of that eNVM block
1239:../src/drivers/mss_nvm/mss_nvm.c ****              */
1240:../src/drivers/mss_nvm/mss_nvm.c ****             if((WRITE_ONLY == protection_user0) || (NO_READ_WRITE == protection_user0))
1241:../src/drivers/mss_nvm/mss_nvm.c ****             {
1242:../src/drivers/mss_nvm/mss_nvm.c ****               if(offset < NVM1_BOTTOM_OFFSET)
1243:../src/drivers/mss_nvm/mss_nvm.c ****               {
1244:../src/drivers/mss_nvm/mss_nvm.c ****                  g_do_not_lock_page = ON;
1245:../src/drivers/mss_nvm/mss_nvm.c ****               }
1246:../src/drivers/mss_nvm/mss_nvm.c ****             }
1247:../src/drivers/mss_nvm/mss_nvm.c **** 
1248:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
1249:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 70908.
1250:../src/drivers/mss_nvm/mss_nvm.c ****              * Check NVM0 lower0 protected area is Read or Write or 'No R/W' access
1251:../src/drivers/mss_nvm/mss_nvm.c ****              */
1252:../src/drivers/mss_nvm/mss_nvm.c ****             if(WRITE_ENABLED != protection_user0) 
1253:../src/drivers/mss_nvm/mss_nvm.c ****             {
1254:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset is in the range of lower0 protect memory area,
1255:../src/drivers/mss_nvm/mss_nvm.c ****                  * if it is then the memory is protected.
1256:../src/drivers/mss_nvm/mss_nvm.c ****                  */
1257:../src/drivers/mss_nvm/mss_nvm.c ****                 if(offset <= LOWER0_PROTECT_TOP_OFFSET)
1258:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1259:../src/drivers/mss_nvm/mss_nvm.c ****                     protection_flag = protection_check(protection_user0, length);
1260:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1261:../src/drivers/mss_nvm/mss_nvm.c ****             }
1262:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
1263:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 70908.
1264:../src/drivers/mss_nvm/mss_nvm.c ****              * Check NVM1 upper1 protected area is Read or Write or 'No R/W' access
1265:../src/drivers/mss_nvm/mss_nvm.c ****              */            
1266:../src/drivers/mss_nvm/mss_nvm.c ****             if((WRITE_ENABLED != protection_user3) && (OFF == protection_flag))
1267:../src/drivers/mss_nvm/mss_nvm.c ****             {
1268:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset or (offset + length)is in the range of upper1 
1269:../src/drivers/mss_nvm/mss_nvm.c ****                  * protect memory area, if it is then the memory is protected.
1270:../src/drivers/mss_nvm/mss_nvm.c ****                  */
1271:../src/drivers/mss_nvm/mss_nvm.c ****                 if(((offset >= UPPER1_PROTECT_BOTTOM_OFFSET) &&
1272:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= UPPER1_PROTECT_TOP_OFFSET)) ||
1273:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= UPPER1_PROTECT_BOTTOM_OFFSET) &&
1274:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < UPPER1_PROTECT_BOTTOM_OFFSET)))
1275:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1276:../src/drivers/mss_nvm/mss_nvm.c ****                     protection_flag = protection_check(protection_user3, length);
1277:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1278:../src/drivers/mss_nvm/mss_nvm.c ****             }
1279:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
1280:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 70908.
1281:../src/drivers/mss_nvm/mss_nvm.c ****              * Check NVM1 lower1 protected area is Read or Write or 'No R/W' access
1282:../src/drivers/mss_nvm/mss_nvm.c ****              */
1283:../src/drivers/mss_nvm/mss_nvm.c ****             if((WRITE_ENABLED != protection_user2) && (OFF == protection_flag))
1284:../src/drivers/mss_nvm/mss_nvm.c ****             {
1285:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset or (offset + length)is in the range of lower1 
1286:../src/drivers/mss_nvm/mss_nvm.c ****                  * protect memory area, if it is then the memory is protected.
1287:../src/drivers/mss_nvm/mss_nvm.c ****                  */
1288:../src/drivers/mss_nvm/mss_nvm.c ****                 if(((offset >= LOWER1_PROTECT_BOTTOM_OFFSET) &&
1289:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= LOWER1_PROTECT_TOP_OFFSET)) ||
1290:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= LOWER1_PROTECT_BOTTOM_OFFSET) &&
1291:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < LOWER1_PROTECT_BOTTOM_OFFSET)))
1292:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1293:../src/drivers/mss_nvm/mss_nvm.c ****                     protection_flag = protection_check(protection_user2, length);
1294:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1295:../src/drivers/mss_nvm/mss_nvm.c ****             }
1296:../src/drivers/mss_nvm/mss_nvm.c ****             /* 
1297:../src/drivers/mss_nvm/mss_nvm.c ****              * SAR 70908.
1298:../src/drivers/mss_nvm/mss_nvm.c ****              * Check eNVM0 upper0 protected area(in eNVM1) is Read or Write or 'No R/W' access
1299:../src/drivers/mss_nvm/mss_nvm.c ****              */
1300:../src/drivers/mss_nvm/mss_nvm.c ****             if((WRITE_ENABLED != protection_user1) && (OFF == protection_flag))
1301:../src/drivers/mss_nvm/mss_nvm.c ****             {
1302:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset or (offset + length) is in the range of upper0
1303:../src/drivers/mss_nvm/mss_nvm.c ****                  *  protect memory area, if it is then the memory is protected.
1304:../src/drivers/mss_nvm/mss_nvm.c ****                  */
1305:../src/drivers/mss_nvm/mss_nvm.c ****                 if(((offset >= NVM0_UPPER0_PROTECT_BOTTOM_OFFSET) &&
1306:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= NVM0_UPPER0_PROTECT_TOP_OFFSET)) ||
1307:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM0_UPPER0_PROTECT_BOTTOM_OFFSET) &&
1308:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < NVM0_UPPER0_PROTECT_BOTTOM_OFFSET)))
1309:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1310:../src/drivers/mss_nvm/mss_nvm.c ****                     protection_flag = protection_check(protection_user1, length);
1311:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1312:../src/drivers/mss_nvm/mss_nvm.c ****             }
1313:../src/drivers/mss_nvm/mss_nvm.c ****         }
1314:../src/drivers/mss_nvm/mss_nvm.c **** 
1315:../src/drivers/mss_nvm/mss_nvm.c ****         /* Check eNVM lower0/1 and upper0/1 memory is protected or not */
1316:../src/drivers/mss_nvm/mss_nvm.c ****         if(PROTECTION_ON == protection_flag)
1317:../src/drivers/mss_nvm/mss_nvm.c ****         {
1318:../src/drivers/mss_nvm/mss_nvm.c ****            /* Status is protection error if lower or upper area of eNVM0 or 
1319:../src/drivers/mss_nvm/mss_nvm.c ****             * eNVM1 is protected 
1320:../src/drivers/mss_nvm/mss_nvm.c ****             */
1321:../src/drivers/mss_nvm/mss_nvm.c ****             status = NVM_PROTECTION_ERROR;
1322:../src/drivers/mss_nvm/mss_nvm.c ****         }
1323:../src/drivers/mss_nvm/mss_nvm.c ****         else
1324:../src/drivers/mss_nvm/mss_nvm.c ****         {
1325:../src/drivers/mss_nvm/mss_nvm.c ****             /* Check (offset + length) is out of eNVM memory */
1326:../src/drivers/mss_nvm/mss_nvm.c ****             if((offset + length_minus_one) > NVM1_TOP_OFFSET)
1327:../src/drivers/mss_nvm/mss_nvm.c ****             {
1328:../src/drivers/mss_nvm/mss_nvm.c ****                 status = NVM_INVALID_PARAMETER;
1329:../src/drivers/mss_nvm/mss_nvm.c ****             }
1330:../src/drivers/mss_nvm/mss_nvm.c ****             else
1331:../src/drivers/mss_nvm/mss_nvm.c ****             {
1332:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Check the offset is in eNVM reserved memory area - 64 pages reserved */
1333:../src/drivers/mss_nvm/mss_nvm.c ****                 if(((offset >= NVM1_RSV_OFFSET) && (offset <= NVM1_TOP_OFFSET)) ||
1334:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM1_RSV_OFFSET) &&
1335:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < NVM1_RSV_OFFSET)))
1336:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1337:../src/drivers/mss_nvm/mss_nvm.c ****                     /* 
1338:../src/drivers/mss_nvm/mss_nvm.c ****                      * SAR 70908.
1339:../src/drivers/mss_nvm/mss_nvm.c ****                      * Status is protection error if the offset or (offset + length) is 
1340:../src/drivers/mss_nvm/mss_nvm.c ****                      * in reserved area of eNVM
1341:../src/drivers/mss_nvm/mss_nvm.c ****                      */
1342:../src/drivers/mss_nvm/mss_nvm.c ****                     status = NVM_PROTECTION_ERROR;
1343:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1344:../src/drivers/mss_nvm/mss_nvm.c ****                 else
1345:../src/drivers/mss_nvm/mss_nvm.c ****                 {
1346:../src/drivers/mss_nvm/mss_nvm.c ****                     /* Status is success if offset or (offset + length) is 
1347:../src/drivers/mss_nvm/mss_nvm.c ****                      * in RW access of eNVM memory
1348:../src/drivers/mss_nvm/mss_nvm.c ****                      */
1349:../src/drivers/mss_nvm/mss_nvm.c ****                     status = NVM_SUCCESS;
1350:../src/drivers/mss_nvm/mss_nvm.c ****                 }
1351:../src/drivers/mss_nvm/mss_nvm.c ****             }
1352:../src/drivers/mss_nvm/mss_nvm.c ****         }
1353:../src/drivers/mss_nvm/mss_nvm.c ****     }
1354:../src/drivers/mss_nvm/mss_nvm.c ****     return status;
1355:../src/drivers/mss_nvm/mss_nvm.c **** }
1356:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
1357:../src/drivers/mss_nvm/mss_nvm.c ****  * protection_check()
1358:../src/drivers/mss_nvm/mss_nvm.c ****  * if the eNVM0 or eNVM1 lower/upper protected area with Read-Only access, 
1359:../src/drivers/mss_nvm/mss_nvm.c ****  * then NVM_read_page_write_count() function can read the write count value
1360:../src/drivers/mss_nvm/mss_nvm.c ****  * from eNVM page, length is set to zero in the function and return with 
1361:../src/drivers/mss_nvm/mss_nvm.c ****  * protection off 
1362:../src/drivers/mss_nvm/mss_nvm.c ****  * The NVM_write() and NVM_unlock() function parameter length is always
1363:../src/drivers/mss_nvm/mss_nvm.c ****  * greater than zero for read only access and returns protection on.
1364:../src/drivers/mss_nvm/mss_nvm.c ****  *
1365:../src/drivers/mss_nvm/mss_nvm.c ****  * if the eNVM0 or eNVM1 lower/upper protected area with W-Only or No_RW
1366:../src/drivers/mss_nvm/mss_nvm.c ****  * access then return with protection on
1367:../src/drivers/mss_nvm/mss_nvm.c ****  */
1368:../src/drivers/mss_nvm/mss_nvm.c **** static uint32_t protection_check(uint32_t protect_user, uint32_t length)
1369:../src/drivers/mss_nvm/mss_nvm.c **** {    
1370:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t protect_flag;
1371:../src/drivers/mss_nvm/mss_nvm.c ****     
1372:../src/drivers/mss_nvm/mss_nvm.c ****     /* Check Read Only access for page write count */
1373:../src/drivers/mss_nvm/mss_nvm.c ****     if((READ_ONLY == protect_user) && (0x0u == length))
 425              		.loc 1 1373 0
 426 0052 0128     		cmp	r0, #1
 427 0054 40F0EF80 		bne	.L114
 428 0058 01B1     		cbz	r1, .L55
 429 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 430              	.LVL49:
 431              	.L55:
 432              	.LBE26:
 433              	.LBE25:
 988:../src/drivers/mss_nvm/mss_nvm.c ****             {
 434              		.loc 1 988 0
 435 005c 092B     		cmp	r3, #9
 436 005e 0AD0     		beq	.L82
 993:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= OO5_UPPER0_PROTECT_TOP_OFFSET)) ||
 437              		.loc 1 993 0
 438 0060 A4F5F832 		sub	r2, r4, #126976
 439 0064 B2F5805F 		cmp	r2, #4096
 440 0068 C0F0E380 		bcc	.L57
 994:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= OO5_UPPER0_PROTECT_BOTTOM_OFFSET) &&
 441              		.loc 1 994 0
 442 006c 894A     		ldr	r2, .L181+8
 995:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < OO5_UPPER0_PROTECT_BOTTOM_OFFSET)))
 443              		.loc 1 995 0
 444 006e 2819     		adds	r0, r5, r4
 445              	.LVL50:
 994:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= OO5_UPPER0_PROTECT_BOTTOM_OFFSET) &&
 446              		.loc 1 994 0
 447 0070 9042     		cmp	r0, r2
 448 0072 00F2DB80 		bhi	.L174
 449              	.LVL51:
 450              	.L82:
1012:../src/drivers/mss_nvm/mss_nvm.c ****             {
 451              		.loc 1 1012 0
 452 0076 2544     		add	r5, r5, r4
 453              	.LVL52:
 454 0078 B5F5003F 		cmp	r5, #131072
 455 007c 01D3     		bcc	.L58
 456              	.L67:
1014:../src/drivers/mss_nvm/mss_nvm.c ****             }
 457              		.loc 1 1014 0
 458 007e 0720     		movs	r0, #7
 459 0080 F0BD     		pop	{r4, r5, r6, r7, pc}
 460              	.LVL53:
 461              	.L58:
1019:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= OO5_NVM_RSV_OFFSET) &&
 462              		.loc 1 1019 0
 463 0082 A4F5FC33 		sub	r3, r4, #129024
 464 0086 B3F5006F 		cmp	r3, #2048
 465 008a C0F0D480 		bcc	.L114
1019:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= OO5_NVM_RSV_OFFSET) &&
 466              		.loc 1 1019 0 is_stmt 0 discriminator 1
 467 008e 824B     		ldr	r3, .L181+12
 468 0090 C6E0     		b	.L172
 469              	.LVL54:
 470              	.L51:
1042:../src/drivers/mss_nvm/mss_nvm.c ****     {    
 471              		.loc 1 1042 0 is_stmt 1
 472 0092 A2F57840 		sub	r0, r2, #63488
 473 0096 861E     		subs	r6, r0, #2
 474 0098 022E     		cmp	r6, #2
 475 009a 38D8     		bhi	.L61
1045:../src/drivers/mss_nvm/mss_nvm.c ****         
 476              		.loc 1 1045 0
 477 009c D3F84421 		ldr	r2, [r3, #324]
 478              	.LVL55:
 479 00a0 49F69913 		movw	r3, #39321
1048:../src/drivers/mss_nvm/mss_nvm.c ****         {
 480              		.loc 1 1048 0
 481 00a4 49F69910 		movw	r0, #39321
 482              	.LVL56:
1045:../src/drivers/mss_nvm/mss_nvm.c ****         
 483              		.loc 1 1045 0
 484 00a8 1340     		ands	r3, r3, r2
 485              	.LVL57:
1048:../src/drivers/mss_nvm/mss_nvm.c ****         {
 486              		.loc 1 1048 0
 487 00aa 8342     		cmp	r3, r0
 488 00ac 23D0     		beq	.L84
1051:../src/drivers/mss_nvm/mss_nvm.c ****             
 489              		.loc 1 1051 0
 490 00ae 02F09003 		and	r3, r2, #144
 491              	.LVL58:
1050:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user1 = ((protection_data & 0x00F0u) >> 4u);
 492              		.loc 1 1050 0
 493 00b2 02F00900 		and	r0, r2, #9
 494              	.LVL59:
1058:../src/drivers/mss_nvm/mss_nvm.c ****                (NO_READ_WRITE == protection_user0) || (NO_READ_WRITE == protection_user1))
 495              		.loc 1 1058 0
 496 00b6 D207     		lsls	r2, r2, #31
 497              	.LVL60:
1051:../src/drivers/mss_nvm/mss_nvm.c ****             
 498              		.loc 1 1051 0
 499 00b8 4FEA1313 		lsr	r3, r3, #4
 500              	.LVL61:
1058:../src/drivers/mss_nvm/mss_nvm.c ****                (NO_READ_WRITE == protection_user0) || (NO_READ_WRITE == protection_user1))
 501              		.loc 1 1058 0
 502 00bc 01D5     		bpl	.L63
1059:../src/drivers/mss_nvm/mss_nvm.c ****             {
 503              		.loc 1 1059 0
 504 00be DF07     		lsls	r7, r3, #31
 505 00c0 02D4     		bmi	.L64
 506              	.L63:
1061:../src/drivers/mss_nvm/mss_nvm.c ****             }
 507              		.loc 1 1061 0
 508 00c2 734A     		ldr	r2, .L181+4
 509 00c4 0126     		movs	r6, #1
 510              	.LVL62:
 511 00c6 1670     		strb	r6, [r2]
 512              	.L64:
1068:../src/drivers/mss_nvm/mss_nvm.c ****             {
 513              		.loc 1 1068 0
 514 00c8 0928     		cmp	r0, #9
 515 00ca 07D0     		beq	.L65
1073:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 516              		.loc 1 1073 0
 517 00cc B4F5805F 		cmp	r4, #4096
 518 00d0 04D2     		bcs	.L65
 519              	.LVL63:
 520              	.LBB27:
 521              	.LBB28:
 522              		.loc 1 1373 0
 523 00d2 0128     		cmp	r0, #1
 524 00d4 40F0AF80 		bne	.L114
 525 00d8 01B1     		cbz	r1, .L65
 526 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 527              	.LVL64:
 528              	.L65:
 529              	.LBE28:
 530              	.LBE27:
1083:../src/drivers/mss_nvm/mss_nvm.c ****             {
 531              		.loc 1 1083 0
 532 00dc 092B     		cmp	r3, #9
 533 00de 0AD0     		beq	.L84
1088:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= UPPER0_PROTECT_TOP_OFFSET)) ||
 534              		.loc 1 1088 0
 535 00e0 A4F57C32 		sub	r2, r4, #258048
 536 00e4 B2F5805F 		cmp	r2, #4096
 537 00e8 C0F0AE80 		bcc	.L66
1089:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= UPPER0_PROTECT_BOTTOM_OFFSET) &&
 538              		.loc 1 1089 0
 539 00ec 6B4A     		ldr	r2, .L181+16
1090:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < UPPER0_PROTECT_BOTTOM_OFFSET)))
 540              		.loc 1 1090 0
 541 00ee 2819     		adds	r0, r5, r4
 542              	.LVL65:
1089:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= UPPER0_PROTECT_BOTTOM_OFFSET) &&
 543              		.loc 1 1089 0
 544 00f0 9042     		cmp	r0, r2
 545 00f2 00F2A680 		bhi	.L175
 546              	.LVL66:
 547              	.L84:
1107:../src/drivers/mss_nvm/mss_nvm.c ****             {
 548              		.loc 1 1107 0
 549 00f6 2544     		add	r5, r5, r4
 550              	.LVL67:
 551 00f8 B5F5802F 		cmp	r5, #262144
 552 00fc BFD2     		bcs	.L67
1114:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM0_RSV_OFFSET) && (offset < NVM0_RSV_OFFSET)
 553              		.loc 1 1114 0
 554 00fe A4F57E33 		sub	r3, r4, #260096
 555 0102 B3F5006F 		cmp	r3, #2048
 556 0106 C0F09680 		bcc	.L114
1114:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM0_RSV_OFFSET) && (offset < NVM0_RSV_OFFSET)
 557              		.loc 1 1114 0 is_stmt 0 discriminator 1
 558 010a 654B     		ldr	r3, .L181+20
 559 010c 88E0     		b	.L172
 560              	.LVL68:
 561              	.L61:
1136:../src/drivers/mss_nvm/mss_nvm.c ****     {
 562              		.loc 1 1136 0 is_stmt 1
 563 010e 4FF60806 		movw	r6, #63496
 564 0112 B242     		cmp	r2, r6
 565 0114 2DD1     		bne	.L68
1139:../src/drivers/mss_nvm/mss_nvm.c ****         
 566              		.loc 1 1139 0
 567 0116 D3F84401 		ldr	r0, [r3, #324]
 568              	.LVL69:
 569 011a 49F69913 		movw	r3, #39321
1142:../src/drivers/mss_nvm/mss_nvm.c ****         {
 570              		.loc 1 1142 0
 571 011e 49F69912 		movw	r2, #39321
 572              	.LVL70:
1139:../src/drivers/mss_nvm/mss_nvm.c ****         
 573              		.loc 1 1139 0
 574 0122 0340     		ands	r3, r3, r0
 575              	.LVL71:
1142:../src/drivers/mss_nvm/mss_nvm.c ****         {
 576              		.loc 1 1142 0
 577 0124 9342     		cmp	r3, r2
 578 0126 19D0     		beq	.L69
1144:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user1 = ((protection_data & 0x00F0u) >> 4u);
 579              		.loc 1 1144 0
 580 0128 00F00902 		and	r2, r0, #9
 581              	.LVL72:
1153:../src/drivers/mss_nvm/mss_nvm.c ****             {
 582              		.loc 1 1153 0
 583 012c 092A     		cmp	r2, #9
 584 012e 06D0     		beq	.L70
1158:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 585              		.loc 1 1158 0
 586 0130 B4F5805F 		cmp	r4, #4096
 587 0134 03D2     		bcs	.L70
 588              	.LVL73:
 589              	.LBB29:
 590              	.LBB30:
 591              		.loc 1 1373 0
 592 0136 012A     		cmp	r2, #1
 593 0138 7DD1     		bne	.L114
 594 013a 0029     		cmp	r1, #0
 595 013c 7BD1     		bne	.L114
 596              	.LVL74:
 597              	.L70:
 598              	.LBE30:
 599              	.LBE29:
1147:../src/drivers/mss_nvm/mss_nvm.c ****             
 600              		.loc 1 1147 0
 601 013e 00F41040 		and	r0, r0, #36864
 602              	.LVL75:
 603 0142 030B     		lsrs	r3, r0, #12
 604              	.LVL76:
1168:../src/drivers/mss_nvm/mss_nvm.c ****             {
 605              		.loc 1 1168 0
 606 0144 092B     		cmp	r3, #9
 607 0146 09D0     		beq	.L69
1173:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= NVM0_UPPER1_PROTECT_TOP_OFFSET)) ||
 608              		.loc 1 1173 0
 609 0148 A4F57432 		sub	r2, r4, #249856
 610              	.LVL77:
 611 014c B2F5805F 		cmp	r2, #4096
 612 0150 C0F08280 		bcc	.L71
1174:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM0_UPPER1_PROTECT_BOTTOM_OFFSET) &&
 613              		.loc 1 1174 0
 614 0154 534A     		ldr	r2, .L181+24
1175:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < NVM0_UPPER1_PROTECT_BOTTOM_OFFSET)))
 615              		.loc 1 1175 0
 616 0156 2819     		adds	r0, r5, r4
1174:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM0_UPPER1_PROTECT_BOTTOM_OFFSET) &&
 617              		.loc 1 1174 0
 618 0158 9042     		cmp	r0, r2
 619 015a 7BD8     		bhi	.L176
 620              	.L69:
 621              	.LVL78:
1195:../src/drivers/mss_nvm/mss_nvm.c ****             {
 622              		.loc 1 1195 0
 623 015c 2544     		add	r5, r5, r4
 624              	.LVL79:
 625 015e B5F5802F 		cmp	r5, #262144
 626 0162 8CD2     		bcs	.L67
1202:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= O60_NVM_RSV_OFFSET) &&
 627              		.loc 1 1202 0
 628 0164 A4F57833 		sub	r3, r4, #253952
 629 0168 B3F5005F 		cmp	r3, #8192
 630 016c 63D3     		bcc	.L114
1202:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= O60_NVM_RSV_OFFSET) &&
 631              		.loc 1 1202 0 is_stmt 0 discriminator 1
 632 016e 4E4B     		ldr	r3, .L181+28
 633 0170 56E0     		b	.L172
 634              	.LVL80:
 635              	.L68:
1222:../src/drivers/mss_nvm/mss_nvm.c ****     {
 636              		.loc 1 1222 0 is_stmt 1
 637 0172 0638     		subs	r0, r0, #6
 638 0174 0128     		cmp	r0, #1
 639 0176 57D8     		bhi	.L109
1225:../src/drivers/mss_nvm/mss_nvm.c ****         
 640              		.loc 1 1225 0
 641 0178 D3F84461 		ldr	r6, [r3, #324]
 642              	.LVL81:
 643 017c 49F69913 		movw	r3, #39321
1228:../src/drivers/mss_nvm/mss_nvm.c ****         {
 644              		.loc 1 1228 0
 645 0180 49F69912 		movw	r2, #39321
 646              	.LVL82:
1225:../src/drivers/mss_nvm/mss_nvm.c ****         
 647              		.loc 1 1225 0
 648 0184 3340     		ands	r3, r3, r6
 649              	.LVL83:
1228:../src/drivers/mss_nvm/mss_nvm.c ****         {
 650              		.loc 1 1228 0
 651 0186 9342     		cmp	r3, r2
 652 0188 3FD0     		beq	.L92
1231:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user2 = ((protection_data & 0x0F00u) >> 8u);
 653              		.loc 1 1231 0
 654 018a 06F09000 		and	r0, r6, #144
 655              	.LVL84:
1233:../src/drivers/mss_nvm/mss_nvm.c ****             
 656              		.loc 1 1233 0
 657 018e 06F41047 		and	r7, r6, #36864
1230:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user1 = ((protection_data & 0x00F0u) >> 4u);
 658              		.loc 1 1230 0
 659 0192 06F0090E 		and	lr, r6, #9
 660              	.LVL85:
1231:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user2 = ((protection_data & 0x0F00u) >> 8u);
 661              		.loc 1 1231 0
 662 0196 0309     		lsrs	r3, r0, #4
 663              	.LVL86:
1232:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user3 = ((protection_data & 0xF000u) >> 12u);
 664              		.loc 1 1232 0
 665 0198 06F41060 		and	r0, r6, #2304
1240:../src/drivers/mss_nvm/mss_nvm.c ****             {
 666              		.loc 1 1240 0
 667 019c F607     		lsls	r6, r6, #31
 668              	.LVL87:
1232:../src/drivers/mss_nvm/mss_nvm.c ****             protection_user3 = ((protection_data & 0xF000u) >> 12u);
 669              		.loc 1 1232 0
 670 019e 4FEA1022 		lsr	r2, r0, #8
 671              	.LVL88:
1233:../src/drivers/mss_nvm/mss_nvm.c ****             
 672              		.loc 1 1233 0
 673 01a2 4FEA1730 		lsr	r0, r7, #12
 674              	.LVL89:
1240:../src/drivers/mss_nvm/mss_nvm.c ****             {
 675              		.loc 1 1240 0
 676 01a6 05D4     		bmi	.L74
1242:../src/drivers/mss_nvm/mss_nvm.c ****               {
 677              		.loc 1 1242 0
 678 01a8 B4F5802F 		cmp	r4, #262144
 679 01ac 0CD2     		bcs	.L75
1244:../src/drivers/mss_nvm/mss_nvm.c ****               }
 680              		.loc 1 1244 0
 681 01ae 384E     		ldr	r6, .L181+4
 682 01b0 0127     		movs	r7, #1
 683 01b2 3770     		strb	r7, [r6]
 684              	.L74:
1252:../src/drivers/mss_nvm/mss_nvm.c ****             {
 685              		.loc 1 1252 0
 686 01b4 BEF1090F 		cmp	lr, #9
 687 01b8 06D0     		beq	.L75
1257:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 688              		.loc 1 1257 0
 689 01ba B4F5805F 		cmp	r4, #4096
 690 01be 03D2     		bcs	.L75
 691              	.LVL90:
 692              	.LBB31:
 693              	.LBB32:
 694              		.loc 1 1373 0
 695 01c0 BEF1010F 		cmp	lr, #1
 696 01c4 37D1     		bne	.L114
 697 01c6 B1BB     		cbnz	r1, .L114
 698              	.LVL91:
 699              	.L75:
 700              	.LBE32:
 701              	.LBE31:
1266:../src/drivers/mss_nvm/mss_nvm.c ****             {
 702              		.loc 1 1266 0
 703 01c8 0928     		cmp	r0, #9
 704 01ca 08D0     		beq	.L161
1271:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= UPPER1_PROTECT_TOP_OFFSET)) ||
 705              		.loc 1 1271 0
 706 01cc A4F5F626 		sub	r6, r4, #503808
 707 01d0 B6F5805F 		cmp	r6, #4096
 708 01d4 47D3     		bcc	.L76
1272:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= UPPER1_PROTECT_BOTTOM_OFFSET) &&
 709              		.loc 1 1272 0
 710 01d6 354E     		ldr	r6, .L181+32
1273:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < UPPER1_PROTECT_BOTTOM_OFFSET)))
 711              		.loc 1 1273 0
 712 01d8 2F19     		adds	r7, r5, r4
1272:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= UPPER1_PROTECT_BOTTOM_OFFSET) &&
 713              		.loc 1 1272 0
 714 01da B742     		cmp	r7, r6
 715 01dc 41D8     		bhi	.L177
 716              	.L161:
1283:../src/drivers/mss_nvm/mss_nvm.c ****             {
 717              		.loc 1 1283 0
 718 01de 092A     		cmp	r2, #9
 719 01e0 08D0     		beq	.L163
1288:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= LOWER1_PROTECT_TOP_OFFSET)) ||
 720              		.loc 1 1288 0
 721 01e2 A4F5F820 		sub	r0, r4, #507904
 722              	.LVL92:
 723 01e6 B0F5805F 		cmp	r0, #4096
 724 01ea 43D3     		bcc	.L78
1289:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= LOWER1_PROTECT_BOTTOM_OFFSET) &&
 725              		.loc 1 1289 0
 726 01ec 3048     		ldr	r0, .L181+36
1290:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < LOWER1_PROTECT_BOTTOM_OFFSET)))
 727              		.loc 1 1290 0
 728 01ee 2E19     		adds	r6, r5, r4
1289:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= LOWER1_PROTECT_BOTTOM_OFFSET) &&
 729              		.loc 1 1289 0
 730 01f0 8642     		cmp	r6, r0
 731 01f2 3DD8     		bhi	.L178
 732              	.L163:
1300:../src/drivers/mss_nvm/mss_nvm.c ****             {
 733              		.loc 1 1300 0
 734 01f4 092B     		cmp	r3, #9
 735 01f6 08D0     		beq	.L92
1305:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset <= NVM0_UPPER0_PROTECT_TOP_OFFSET)) ||
 736              		.loc 1 1305 0
 737 01f8 A4F5FA22 		sub	r2, r4, #512000
 738              	.LVL93:
 739 01fc B2F5805F 		cmp	r2, #4096
 740 0200 3FD3     		bcc	.L80
1306:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM0_UPPER0_PROTECT_BOTTOM_OFFSET) &&
 741              		.loc 1 1306 0
 742 0202 2C4A     		ldr	r2, .L181+40
1307:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < NVM0_UPPER0_PROTECT_BOTTOM_OFFSET)))
 743              		.loc 1 1307 0
 744 0204 2819     		adds	r0, r5, r4
1306:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM0_UPPER0_PROTECT_BOTTOM_OFFSET) &&
 745              		.loc 1 1306 0
 746 0206 9042     		cmp	r0, r2
 747 0208 39D8     		bhi	.L179
 748              	.LVL94:
 749              	.L92:
1326:../src/drivers/mss_nvm/mss_nvm.c ****             {
 750              		.loc 1 1326 0
 751 020a 2544     		add	r5, r5, r4
 752              	.LVL95:
 753 020c B5F5002F 		cmp	r5, #524288
 754 0210 BFF435AF 		bcs	.L67
1333:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM1_RSV_OFFSET) &&
 755              		.loc 1 1333 0
 756 0214 A4F5FC23 		sub	r3, r4, #516096
 757 0218 B3F5005F 		cmp	r3, #8192
 758 021c 0BD3     		bcc	.L114
1333:../src/drivers/mss_nvm/mss_nvm.c ****                     (((offset + length_minus_one) >= NVM1_RSV_OFFSET) &&
 759              		.loc 1 1333 0 is_stmt 0 discriminator 1
 760 021e 264B     		ldr	r3, .L181+44
 761              	.L172:
 762 0220 9D42     		cmp	r5, r3
 763 0222 01D9     		bls	.L109
1334:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < NVM1_RSV_OFFSET)))
 764              		.loc 1 1334 0 is_stmt 1
 765 0224 9C42     		cmp	r4, r3
 766 0226 06D9     		bls	.L114
 767              	.L109:
 935:../src/drivers/mss_nvm/mss_nvm.c **** 
 768              		.loc 1 935 0
 769 0228 0020     		movs	r0, #0
 770 022a F0BD     		pop	{r4, r5, r6, r7, pc}
 771              	.LVL96:
 772              	.L174:
 995:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < OO5_UPPER0_PROTECT_BOTTOM_OFFSET)))
 773              		.loc 1 995 0
 774 022c 9442     		cmp	r4, r2
 775 022e 3FF622AF 		bhi	.L82
 776              	.L57:
 777              	.LVL97:
 778              	.LBB33:
 779              	.LBB34:
 780              		.loc 1 1373 0
 781 0232 012B     		cmp	r3, #1
 782 0234 01D0     		beq	.L180
 783              	.LVL98:
 784              	.L114:
 785              	.LBE34:
 786              	.LBE33:
1007:../src/drivers/mss_nvm/mss_nvm.c ****         }
 787              		.loc 1 1007 0
 788 0236 0120     		movs	r0, #1
 789              	.LVL99:
 790 0238 F0BD     		pop	{r4, r5, r6, r7, pc}
 791              	.LVL100:
 792              	.L180:
 793              	.LBB36:
 794              	.LBB35:
 795              		.loc 1 1373 0
 796 023a 0029     		cmp	r1, #0
 797 023c 3FF41BAF 		beq	.L82
 798 0240 F9E7     		b	.L114
 799              	.LVL101:
 800              	.L175:
 801              	.LBE35:
 802              	.LBE36:
1090:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < UPPER0_PROTECT_BOTTOM_OFFSET)))
 803              		.loc 1 1090 0
 804 0242 9442     		cmp	r4, r2
 805 0244 3FF657AF 		bhi	.L84
 806              	.L66:
 807              	.LVL102:
 808              	.LBB37:
 809              	.LBB38:
 810              		.loc 1 1373 0
 811 0248 012B     		cmp	r3, #1
 812 024a F4D1     		bne	.L114
 813 024c 0029     		cmp	r1, #0
 814 024e 3FF452AF 		beq	.L84
 815 0252 F0E7     		b	.L114
 816              	.LVL103:
 817              	.L176:
 818              	.LBE38:
 819              	.LBE37:
1175:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < NVM0_UPPER1_PROTECT_BOTTOM_OFFSET)))
 820              		.loc 1 1175 0
 821 0254 9442     		cmp	r4, r2
 822 0256 81D8     		bhi	.L69
 823              	.L71:
 824              	.LVL104:
 825              	.LBB39:
 826              	.LBB40:
 827              		.loc 1 1373 0
 828 0258 012B     		cmp	r3, #1
 829 025a ECD1     		bne	.L114
 830 025c 0029     		cmp	r1, #0
 831 025e EAD1     		bne	.L114
 832 0260 7CE7     		b	.L69
 833              	.LVL105:
 834              	.L177:
 835              	.LBE40:
 836              	.LBE39:
1273:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < UPPER1_PROTECT_BOTTOM_OFFSET)))
 837              		.loc 1 1273 0
 838 0262 B442     		cmp	r4, r6
 839 0264 BBD8     		bhi	.L161
 840              	.L76:
 841              	.LVL106:
 842              	.LBB41:
 843              	.LBB42:
 844              		.loc 1 1373 0
 845 0266 0128     		cmp	r0, #1
 846 0268 E5D1     		bne	.L114
 847 026a 0029     		cmp	r1, #0
 848 026c B7D0     		beq	.L161
 849 026e F0BD     		pop	{r4, r5, r6, r7, pc}
 850              	.LVL107:
 851              	.L178:
 852              	.LBE42:
 853              	.LBE41:
1290:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < LOWER1_PROTECT_BOTTOM_OFFSET)))
 854              		.loc 1 1290 0
 855 0270 8442     		cmp	r4, r0
 856 0272 BFD8     		bhi	.L163
 857              	.L78:
 858              	.LVL108:
 859              	.LBB43:
 860              	.LBB44:
 861              		.loc 1 1373 0
 862 0274 012A     		cmp	r2, #1
 863 0276 DED1     		bne	.L114
 864 0278 0029     		cmp	r1, #0
 865 027a BBD0     		beq	.L163
 866 027c DBE7     		b	.L114
 867              	.LVL109:
 868              	.L179:
 869              	.LBE44:
 870              	.LBE43:
1307:../src/drivers/mss_nvm/mss_nvm.c ****                     (offset < NVM0_UPPER0_PROTECT_BOTTOM_OFFSET)))
 871              		.loc 1 1307 0
 872 027e 9442     		cmp	r4, r2
 873 0280 C3D8     		bhi	.L92
 874              	.L80:
 875              	.LVL110:
 876              	.LBB45:
 877              	.LBB46:
 878              		.loc 1 1373 0
 879 0282 012B     		cmp	r3, #1
 880 0284 D7D1     		bne	.L114
 881 0286 0029     		cmp	r1, #0
 882 0288 BFD0     		beq	.L92
 883 028a D4E7     		b	.L114
 884              	.L182:
 885              		.align	2
 886              	.L181:
 887 028c 00800340 		.word	1073971200
 888 0290 00000000 		.word	.LANCHOR3
 889 0294 FFEF0100 		.word	126975
 890 0298 FFF70100 		.word	129023
 891 029c FFEF0300 		.word	258047
 892 02a0 FFF70300 		.word	260095
 893 02a4 FFCF0300 		.word	249855
 894 02a8 FFDF0300 		.word	253951
 895 02ac FFAF0700 		.word	503807
 896 02b0 FFBF0700 		.word	507903
 897 02b4 FFCF0700 		.word	511999
 898 02b8 FFDF0700 		.word	516095
 899              	.LBE46:
 900              	.LBE45:
 901              		.cfi_endproc
 902              	.LFE74:
 904              		.section	.text.get_error_code,"ax",%progbits
 905              		.align	1
 906              		.thumb
 907              		.thumb_func
 909              	get_error_code:
 910              	.LFB64:
 317:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 911              		.loc 1 317 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
 916              	.LVL111:
 320:../src/drivers/mss_nvm/mss_nvm.c ****     {
 917              		.loc 1 320 0
 918 0000 4203     		lsls	r2, r0, #13
 919 0002 0AD4     		bmi	.L185
 324:../src/drivers/mss_nvm/mss_nvm.c ****     {
 920              		.loc 1 324 0
 921 0004 C306     		lsls	r3, r0, #27
 922 0006 0AD4     		bmi	.L186
 923              	.LVL112:
 924              	.LBB49:
 925              	.LBB50:
 328:../src/drivers/mss_nvm/mss_nvm.c ****             MSS_NVM_EVERIFY_FAIL | MSS_NVM_WVERIFY_FAIL))
 926              		.loc 1 328 0
 927 0008 10F00E0F 		tst	r0, #14
 928 000c 09D1     		bne	.L187
 333:../src/drivers/mss_nvm/mss_nvm.c ****     {
 929              		.loc 1 333 0
 930 000e 10F0200F 		tst	r0, #32
 339:../src/drivers/mss_nvm/mss_nvm.c ****     }
 931              		.loc 1 339 0
 932 0012 14BF     		ite	ne
 933 0014 0520     		movne	r0, #5
 934              	.LVL113:
 935 0016 0020     		moveq	r0, #0
 936 0018 7047     		bx	lr
 937              	.LVL114:
 938              	.L185:
 939              	.LBE50:
 940              	.LBE49:
 322:../src/drivers/mss_nvm/mss_nvm.c ****     }
 941              		.loc 1 322 0
 942 001a 0120     		movs	r0, #1
 943              	.LVL115:
 944 001c 7047     		bx	lr
 945              	.LVL116:
 946              	.L186:
 326:../src/drivers/mss_nvm/mss_nvm.c ****     }
 947              		.loc 1 326 0
 948 001e 0320     		movs	r0, #3
 949              	.LVL117:
 950 0020 7047     		bx	lr
 951              	.LVL118:
 952              	.L187:
 953              	.LBB52:
 954              	.LBB51:
 331:../src/drivers/mss_nvm/mss_nvm.c ****     }
 955              		.loc 1 331 0
 956 0022 0220     		movs	r0, #2
 957              	.LVL119:
 958              	.LBE51:
 959              	.LBE52:
 343:../src/drivers/mss_nvm/mss_nvm.c **** 
 960              		.loc 1 343 0
 961 0024 7047     		bx	lr
 962              		.cfi_endproc
 963              	.LFE64:
 965              		.section	.text.get_ctrl_access,"ax",%progbits
 966              		.align	1
 967              		.thumb
 968              		.thumb_func
 970              	get_ctrl_access:
 971              	.LFB67:
 525:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t access_req_status;
 972              		.loc 1 525 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              	.LVL120:
 977 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 978              		.cfi_def_cfa_offset 24
 979              		.cfi_offset 3, -24
 980              		.cfi_offset 4, -20
 981              		.cfi_offset 5, -16
 982              		.cfi_offset 6, -12
 983              		.cfi_offset 7, -8
 984              		.cfi_offset 14, -4
 531:../src/drivers/mss_nvm/mss_nvm.c ****     {
 985              		.loc 1 531 0
 986 0002 0F4F     		ldr	r7, .L192
 525:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t access_req_status;
 987              		.loc 1 525 0
 988 0004 0546     		mov	r5, r0
 531:../src/drivers/mss_nvm/mss_nvm.c ****     {
 989              		.loc 1 531 0
 990 0006 B842     		cmp	r0, r7
 525:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t access_req_status;
 991              		.loc 1 525 0
 992 0008 0E46     		mov	r6, r1
 531:../src/drivers/mss_nvm/mss_nvm.c ****     {
 993              		.loc 1 531 0
 994 000a 11D8     		bhi	.L190
 533:../src/drivers/mss_nvm/mss_nvm.c ****         if(NVM_SUCCESS == access_req_status)
 995              		.loc 1 533 0
 996 000c 0020     		movs	r0, #0
 997              	.LVL121:
 998 000e FFF7FEFF 		bl	request_nvm_access
 999              	.LVL122:
 534:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1000              		.loc 1 534 0
 1001 0012 0446     		mov	r4, r0
 1002 0014 88B9     		cbnz	r0, .L191
 1003              	.LVL123:
 1004 0016 013E     		subs	r6, r6, #1
 1005              	.LVL124:
 1006              	.LBB57:
 537:../src/drivers/mss_nvm/mss_nvm.c ****             if(last_offset >= NVM1_BOTTOM_OFFSET)
 1007              		.loc 1 537 0
 1008 0018 3544     		add	r5, r5, r6
 1009              	.LVL125:
 538:../src/drivers/mss_nvm/mss_nvm.c ****             {
 1010              		.loc 1 538 0
 1011 001a BD42     		cmp	r5, r7
 1012 001c 0DD9     		bls	.L191
 1013              	.LVL126:
 1014              	.LBE57:
 1015              	.LBB58:
 1016              	.LBB59:
 1017              	.LBB60:
 540:../src/drivers/mss_nvm/mss_nvm.c ****                 if(NVM_IN_USE_BY_OTHER_MASTER == access_req_status)
 1018              		.loc 1 540 0
 1019 001e 0120     		movs	r0, #1
 1020              	.LVL127:
 1021 0020 FFF7FEFF 		bl	request_nvm_access
 1022              	.LVL128:
 541:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 1023              		.loc 1 541 0
 1024 0024 0628     		cmp	r0, #6
 540:../src/drivers/mss_nvm/mss_nvm.c ****                 if(NVM_IN_USE_BY_OTHER_MASTER == access_req_status)
 1025              		.loc 1 540 0
 1026 0026 0446     		mov	r4, r0
 1027              	.LVL129:
 541:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 1028              		.loc 1 541 0
 1029 0028 07D1     		bne	.L191
 543:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 1030              		.loc 1 543 0
 1031 002a FFF7FEFF 		bl	release_ctrl_access
 1032              	.LVL130:
 1033 002e 04E0     		b	.L191
 1034              	.LVL131:
 1035              	.L190:
 1036              	.LBE60:
 1037              	.LBE59:
 1038              	.LBE58:
 550:../src/drivers/mss_nvm/mss_nvm.c ****     }
 1039              		.loc 1 550 0
 1040 0030 0120     		movs	r0, #1
 1041              	.LVL132:
 554:../src/drivers/mss_nvm/mss_nvm.c **** 
 1042              		.loc 1 554 0
 1043 0032 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1044              		.cfi_remember_state
 1045              		.cfi_restore 14
 1046              		.cfi_restore 7
 1047              		.cfi_restore 6
 1048              		.cfi_restore 5
 1049              		.cfi_restore 4
 1050              		.cfi_restore 3
 1051              		.cfi_def_cfa_offset 0
 1052              	.LVL133:
 550:../src/drivers/mss_nvm/mss_nvm.c ****     }
 1053              		.loc 1 550 0
 1054 0036 FFF7FEBF 		b	request_nvm_access
 1055              	.LVL134:
 1056              	.L191:
 1057              		.cfi_restore_state
 554:../src/drivers/mss_nvm/mss_nvm.c **** 
 1058              		.loc 1 554 0
 1059 003a 2046     		mov	r0, r4
 1060 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1061              	.LVL135:
 1062              	.L193:
 1063 003e 00BF     		.align	2
 1064              	.L192:
 1065 0040 FFFF0300 		.word	262143
 1066              		.cfi_endproc
 1067              	.LFE67:
 1069              		.section	.text.NVM_write,"ax",%progbits
 1070              		.align	1
 1071              		.global	NVM_write
 1072              		.thumb
 1073              		.thumb_func
 1075              	NVM_write:
 1076              	.LFB63:
 152:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 1077              		.loc 1 152 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 24
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              	.LVL136:
 1082 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1083              		.cfi_def_cfa_offset 36
 1084              		.cfi_offset 4, -36
 1085              		.cfi_offset 5, -32
 1086              		.cfi_offset 6, -28
 1087              		.cfi_offset 7, -24
 1088              		.cfi_offset 8, -20
 1089              		.cfi_offset 9, -16
 1090              		.cfi_offset 10, -12
 1091              		.cfi_offset 11, -8
 1092              		.cfi_offset 14, -4
 159:../src/drivers/mss_nvm/mss_nvm.c ****     
 1093              		.loc 1 159 0
 1094 0004 DFF8DCA1 		ldr	r10, .L239+24
 152:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 1095              		.loc 1 152 0
 1096 0008 1F46     		mov	r7, r3
 159:../src/drivers/mss_nvm/mss_nvm.c ****     
 1097              		.loc 1 159 0
 1098 000a 0025     		movs	r5, #0
 168:../src/drivers/mss_nvm/mss_nvm.c ****     SYSREG->ENVM_CR = (initial_nvm_config & NVM_FREQRNG_MASK) | NVM_FREQRNG_MAX;
 1099              		.loc 1 168 0
 1100 000c 6F4B     		ldr	r3, .L239
 1101              	.LVL137:
 159:../src/drivers/mss_nvm/mss_nvm.c ****     
 1102              		.loc 1 159 0
 1103 000e 8AF80050 		strb	r5, [r10]
 152:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 1104              		.loc 1 152 0
 1105 0012 9046     		mov	r8, r2
 168:../src/drivers/mss_nvm/mss_nvm.c ****     SYSREG->ENVM_CR = (initial_nvm_config & NVM_FREQRNG_MASK) | NVM_FREQRNG_MAX;
 1106              		.loc 1 168 0
 1107 0014 DA68     		ldr	r2, [r3, #12]
 1108              	.LVL138:
 152:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 1109              		.loc 1 152 0
 1110 0016 87B0     		sub	sp, sp, #28
 1111              		.cfi_def_cfa_offset 64
 168:../src/drivers/mss_nvm/mss_nvm.c ****     SYSREG->ENVM_CR = (initial_nvm_config & NVM_FREQRNG_MASK) | NVM_FREQRNG_MAX;
 1112              		.loc 1 168 0
 1113 0018 0292     		str	r2, [sp, #8]
 1114              	.LVL139:
 169:../src/drivers/mss_nvm/mss_nvm.c **** 
 1115              		.loc 1 169 0
 1116 001a 42F4FF52 		orr	r2, r2, #8160
 1117              	.LVL140:
 152:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 1118              		.loc 1 152 0
 1119 001e 0191     		str	r1, [sp, #4]
 169:../src/drivers/mss_nvm/mss_nvm.c **** 
 1120              		.loc 1 169 0
 1121 0020 DA60     		str	r2, [r3, #12]
 172:../src/drivers/mss_nvm/mss_nvm.c ****         ((start_addr >= NVM_TOP_OFFSET) &&
 1122              		.loc 1 172 0
 1123 0022 6B4A     		ldr	r2, .L239+4
 152:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 1124              		.loc 1 152 0
 1125 0024 8346     		mov	fp, r0
 172:../src/drivers/mss_nvm/mss_nvm.c ****         ((start_addr >= NVM_TOP_OFFSET) &&
 1126              		.loc 1 172 0
 1127 0026 9042     		cmp	r0, r2
 1128 0028 00F2BC80 		bhi	.L215
 173:../src/drivers/mss_nvm/mss_nvm.c ****         (start_addr < NVM_BASE_ADDRESS)) ||
 1129              		.loc 1 173 0 discriminator 1
 1130 002c A0F5FF22 		sub	r2, r0, #522240
 172:../src/drivers/mss_nvm/mss_nvm.c ****         ((start_addr >= NVM_TOP_OFFSET) &&
 1131              		.loc 1 172 0 discriminator 1
 1132 0030 6849     		ldr	r1, .L239+8
 1133              	.LVL141:
 173:../src/drivers/mss_nvm/mss_nvm.c ****         (start_addr < NVM_BASE_ADDRESS)) ||
 1134              		.loc 1 173 0 discriminator 1
 1135 0032 A2F2FF72 		subw	r2, r2, #2047
 172:../src/drivers/mss_nvm/mss_nvm.c ****         ((start_addr >= NVM_TOP_OFFSET) &&
 1136              		.loc 1 172 0 discriminator 1
 1137 0036 8A42     		cmp	r2, r1
 1138 0038 40F2B480 		bls	.L215
 174:../src/drivers/mss_nvm/mss_nvm.c ****         (0u == pidata) ||
 1139              		.loc 1 174 0
 1140 003c 019A     		ldr	r2, [sp, #4]
 1141 003e 002A     		cmp	r2, #0
 1142 0040 00F0AC80 		beq	.L213
 175:../src/drivers/mss_nvm/mss_nvm.c ****         (0u == length) ||
 1143              		.loc 1 175 0
 1144 0044 B8F1000F 		cmp	r8, #0
 1145 0048 00F0AA80 		beq	.L214
 176:../src/drivers/mss_nvm/mss_nvm.c ****         (lock_page > PARAM_LOCK_PAGE_FLAG))
 1146              		.loc 1 176 0
 1147 004c 022F     		cmp	r7, #2
 1148 004e 00F2A980 		bhi	.L215
 188:../src/drivers/mss_nvm/mss_nvm.c ****         if((0x0000F802u == device_version) || (0x0001F802u == device_version))
 1149              		.loc 1 188 0
 1150 0052 D3F84C41 		ldr	r4, [r3, #332]
 1151              	.LVL142:
 191:../src/drivers/mss_nvm/mss_nvm.c ****         }
 1152              		.loc 1 191 0
 1153 0056 4FF60203 		movw	r3, #63490
 195:../src/drivers/mss_nvm/mss_nvm.c ****         
 1154              		.loc 1 195 0
 1155 005a C0F31209 		ubfx	r9, r0, #0, #19
 189:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1156              		.loc 1 189 0
 1157 005e 24F48032 		bic	r2, r4, #65536
 201:../src/drivers/mss_nvm/mss_nvm.c **** 
 1158              		.loc 1 201 0
 1159 0062 4846     		mov	r0, r9
 1160              	.LVL143:
 1161 0064 4146     		mov	r1, r8
 191:../src/drivers/mss_nvm/mss_nvm.c ****         }
 1162              		.loc 1 191 0
 1163 0066 9A42     		cmp	r2, r3
 1164 0068 08BF     		it	eq
 1165 006a 2F46     		moveq	r7, r5
 1166              	.LVL144:
 201:../src/drivers/mss_nvm/mss_nvm.c **** 
 1167              		.loc 1 201 0
 1168 006c FFF7FEFF 		bl	check_protection_reserved_nvm
 1169              	.LVL145:
 203:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1170              		.loc 1 203 0
 1171 0070 0646     		mov	r6, r0
 1172 0072 0028     		cmp	r0, #0
 1173 0074 40F09980 		bne	.L217
 209:../src/drivers/mss_nvm/mss_nvm.c ****             {
 1174              		.loc 1 209 0
 1175 0078 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2
 1176 007c 012B     		cmp	r3, #1
 1177 007e 03D1     		bne	.L197
 209:../src/drivers/mss_nvm/mss_nvm.c ****             {
 1178              		.loc 1 209 0 is_stmt 0 discriminator 1
 1179 0080 012F     		cmp	r7, #1
 211:../src/drivers/mss_nvm/mss_nvm.c ****                 lock_status = NVM_PAGE_LOCK_WARNING;
 1180              		.loc 1 211 0 is_stmt 1 discriminator 1
 1181 0082 04BF     		itt	eq
 1182 0084 2F46     		moveq	r7, r5
 1183              	.LVL146:
 212:../src/drivers/mss_nvm/mss_nvm.c ****             }
 1184              		.loc 1 212 0 discriminator 1
 1185 0086 0426     		moveq	r6, #4
 1186              	.L197:
 1187              	.LVL147:
 215:../src/drivers/mss_nvm/mss_nvm.c ****             
 1188              		.loc 1 215 0
 1189 0088 A4B2     		uxth	r4, r4
 1190              	.LVL148:
 218:../src/drivers/mss_nvm/mss_nvm.c ****             {
 1191              		.loc 1 218 0
 1192 008a A4F57843 		sub	r3, r4, #63488
 1193 008e 063B     		subs	r3, r3, #6
 1194 0090 012B     		cmp	r3, #1
 1195 0092 08D8     		bhi	.L198
 220:../src/drivers/mss_nvm/mss_nvm.c ****                             && (NVM_LOCK_PAGE == lock_page)) 
 1196              		.loc 1 220 0
 1197 0094 B9F5802F 		cmp	r9, #262144
 1198 0098 09D2     		bcs	.L238
 220:../src/drivers/mss_nvm/mss_nvm.c ****                             && (NVM_LOCK_PAGE == lock_page)) 
 1199              		.loc 1 220 0 is_stmt 0 discriminator 1
 1200 009a 09EB0803 		add	r3, r9, r8
 1201 009e B3F5802F 		cmp	r3, #262144
 1202 00a2 08D9     		bls	.L200
 1203 00a4 03E0     		b	.L238
 1204              	.L198:
 228:../src/drivers/mss_nvm/mss_nvm.c ****             {
 1205              		.loc 1 228 0 is_stmt 1
 1206 00a6 4FF60803 		movw	r3, #63496
 1207 00aa 9C42     		cmp	r4, r3
 1208 00ac 03D1     		bne	.L200
 1209              	.L238:
 228:../src/drivers/mss_nvm/mss_nvm.c ****             {
 1210              		.loc 1 228 0 is_stmt 0 discriminator 1
 1211 00ae 012F     		cmp	r7, #1
 224:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 1212              		.loc 1 224 0 is_stmt 1 discriminator 1
 1213 00b0 04BF     		itt	eq
 1214 00b2 0426     		moveq	r6, #4
 1215              	.LVL149:
 223:../src/drivers/mss_nvm/mss_nvm.c ****                     lock_status = NVM_PAGE_LOCK_WARNING;
 1216              		.loc 1 223 0 discriminator 1
 1217 00b4 0027     		moveq	r7, #0
 1218              	.LVL150:
 1219              	.L200:
 235:../src/drivers/mss_nvm/mss_nvm.c **** 
 1220              		.loc 1 235 0
 1221 00b6 4846     		mov	r0, r9
 1222              	.LVL151:
 1223 00b8 4146     		mov	r1, r8
 1224 00ba FFF7FEFF 		bl	get_ctrl_access
 1225              	.LVL152:
 238:../src/drivers/mss_nvm/mss_nvm.c ****             {
 1226              		.loc 1 238 0
 1227 00be 0446     		mov	r4, r0
 1228              	.LVL153:
 1229 00c0 0028     		cmp	r0, #0
 1230 00c2 74D1     		bne	.L195
 1231 00c4 C146     		mov	r9, r8
 1232              	.LVL154:
 1233              	.L209:
 1234              	.LBB68:
 1235              	.LBB69:
 248:../src/drivers/mss_nvm/mss_nvm.c ****                                                 &pidata[length - remaining_length],
 1236              		.loc 1 248 0
 1237 00c6 C9EB0800 		rsb	r0, r9, r8
 1238 00ca 00EB0B03 		add	r3, r0, fp
 1239              	.LVL155:
 1240              	.LBB70:
 1241              	.LBB71:
 629:../src/drivers/mss_nvm/mss_nvm.c ****     
 1242              		.loc 1 629 0
 1243 00ce C3F31205 		ubfx	r5, r3, #0, #19
 1244              	.LVL156:
 1245              	.LBB72:
 1246              	.LBB73:
 705:../src/drivers/mss_nvm/mss_nvm.c ****     last_page = (offset + length) / BYTES_PER_PAGE;
 1247              		.loc 1 705 0
 1248 00d2 EA09     		lsrs	r2, r5, #7
 706:../src/drivers/mss_nvm/mss_nvm.c ****     if(last_page >= start_page_plus_one)
 1249              		.loc 1 706 0
 1250 00d4 05EB0901 		add	r1, r5, r9
 705:../src/drivers/mss_nvm/mss_nvm.c ****     last_page = (offset + length) / BYTES_PER_PAGE;
 1251              		.loc 1 705 0
 1252 00d8 0132     		adds	r2, r2, #1
 1253              	.LVL157:
 707:../src/drivers/mss_nvm/mss_nvm.c ****     {
 1254              		.loc 1 707 0
 1255 00da B2EBD11F 		cmp	r2, r1, lsr #7
 709:../src/drivers/mss_nvm/mss_nvm.c ****     }
 1256              		.loc 1 709 0
 1257 00de 9DBF     		ittte	ls
 1258 00e0 03F07F03 		andls	r3, r3, #127
 1259              	.LVL158:
 1260 00e4 C3F18003 		rsbls	r3, r3, #128
 1261 00e8 0093     		strls	r3, [sp]
 1262              	.LVL159:
 707:../src/drivers/mss_nvm/mss_nvm.c ****     {
 1263              		.loc 1 707 0
 1264 00ea CDF80090 		strhi	r9, [sp]
 1265              	.LVL160:
 1266              	.LBE73:
 1267              	.LBE72:
 1268              	.LBB74:
 652:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1269              		.loc 1 652 0
 1270 00ee 3A4B     		ldr	r3, .L239+12
 642:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1271              		.loc 1 642 0
 1272 00f0 B5F5802F 		cmp	r5, #262144
 1273              	.LVL161:
 648:../src/drivers/mss_nvm/mss_nvm.c ****             offset = offset - NVM1_BOTTOM_OFFSET;
 1274              		.loc 1 648 0
 1275 00f4 2CBF     		ite	cs
 1276 00f6 4FF0010C 		movcs	ip, #1
 644:../src/drivers/mss_nvm/mss_nvm.c ****         }
 1277              		.loc 1 644 0
 1278 00fa 4FF0000C 		movcc	ip, #0
 652:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1279              		.loc 1 652 0
 1280 00fe 53F82CA0 		ldr	r10, [r3, ip, lsl #2]
 649:../src/drivers/mss_nvm/mss_nvm.c ****         }
 1281              		.loc 1 649 0
 1282 0102 28BF     		it	cs
 1283 0104 A5F58025 		subcs	r5, r5, #262144
 1284              	.LVL162:
 652:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1285              		.loc 1 652 0
 1286 0108 DAF82031 		ldr	r3, [r10, #288]
 658:../src/drivers/mss_nvm/mss_nvm.c **** 
 1287              		.loc 1 658 0
 1288 010c 6246     		mov	r2, ip
 1289              	.LVL163:
 652:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1290              		.loc 1 652 0
 1291 010e 5B03     		lsls	r3, r3, #13
 655:../src/drivers/mss_nvm/mss_nvm.c ****         }
 1292              		.loc 1 655 0
 1293 0110 48BF     		it	mi
 1294 0112 DAF85831 		ldrmi	r3, [r10, #344]
 658:../src/drivers/mss_nvm/mss_nvm.c **** 
 1295              		.loc 1 658 0
 1296 0116 0099     		ldr	r1, [sp]
 655:../src/drivers/mss_nvm/mss_nvm.c ****         }
 1297              		.loc 1 655 0
 1298 0118 44BF     		itt	mi
 1299 011a 43F00203 		orrmi	r3, r3, #2
 1300 011e CAF85831 		strmi	r3, [r10, #344]
 658:../src/drivers/mss_nvm/mss_nvm.c **** 
 1301              		.loc 1 658 0
 1302 0122 019B     		ldr	r3, [sp, #4]
 1303 0124 CDF80CC0 		str	ip, [sp, #12]
 1304 0128 1844     		add	r0, r0, r3
 1305              	.LVL164:
 1306 012a 2B46     		mov	r3, r5
 1307 012c FFF7FEFF 		bl	fill_wd_buffer
 1308              	.LVL165:
 664:../src/drivers/mss_nvm/mss_nvm.c ****         
 1309              		.loc 1 664 0
 1310 0130 25F00063 		bic	r3, r5, #134217728
 667:../src/drivers/mss_nvm/mss_nvm.c **** 
 1311              		.loc 1 667 0
 1312 0134 DDF80CC0 		ldr	ip, [sp, #12]
 664:../src/drivers/mss_nvm/mss_nvm.c ****         
 1313              		.loc 1 664 0
 1314 0138 23F07F03 		bic	r3, r3, #127
 1315 013c 43F00063 		orr	r3, r3, #134217728
 661:../src/drivers/mss_nvm/mss_nvm.c ****         
 1316              		.loc 1 661 0
 1317 0140 CAF84071 		str	r7, [r10, #320]
 667:../src/drivers/mss_nvm/mss_nvm.c **** 
 1318              		.loc 1 667 0
 1319 0144 6046     		mov	r0, ip
 664:../src/drivers/mss_nvm/mss_nvm.c ****         
 1320              		.loc 1 664 0
 1321 0146 CAF84831 		str	r3, [r10, #328]
 667:../src/drivers/mss_nvm/mss_nvm.c **** 
 1322              		.loc 1 667 0
 1323 014a FFF7FEFF 		bl	wait_nvm_ready
 1324              	.LVL166:
 1325 014e 0590     		str	r0, [sp, #20]
 670:../src/drivers/mss_nvm/mss_nvm.c ****         if(errors)
 1326              		.loc 1 670 0
 1327 0150 059A     		ldr	r2, [sp, #20]
 1328              	.LVL167:
 1329 0152 224B     		ldr	r3, .L239+16
 671:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1330              		.loc 1 671 0
 1331 0154 DDF80CC0 		ldr	ip, [sp, #12]
 670:../src/drivers/mss_nvm/mss_nvm.c ****         if(errors)
 1332              		.loc 1 670 0
 1333 0158 1340     		ands	r3, r3, r2
 1334              	.LVL168:
 671:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1335              		.loc 1 671 0
 1336 015a 5BB9     		cbnz	r3, .L235
 678:../src/drivers/mss_nvm/mss_nvm.c ****             /* Wait for NVM to become ready. */
 1337              		.loc 1 678 0
 1338 015c 25F08055 		bic	r5, r5, #268435456
 1339              	.LVL169:
 1340 0160 25F07F05 		bic	r5, r5, #127
 1341 0164 45F08055 		orr	r5, r5, #268435456
 1342 0168 CAF84851 		str	r5, [r10, #328]
 680:../src/drivers/mss_nvm/mss_nvm.c **** 
 1343              		.loc 1 680 0
 1344 016c 6046     		mov	r0, ip
 1345 016e FFF7FEFF 		bl	wait_nvm_ready
 1346              	.LVL170:
 1347 0172 0590     		str	r0, [sp, #20]
 1348              	.L235:
 682:../src/drivers/mss_nvm/mss_nvm.c ****         }
 1349              		.loc 1 682 0
 1350 0174 0598     		ldr	r0, [sp, #20]
 1351              	.LVL171:
 1352              	.LBE74:
 1353              	.LBE71:
 1354              	.LBE70:
 255:../src/drivers/mss_nvm/mss_nvm.c ****                     if(errors_and_warnings)
 1355              		.loc 1 255 0
 1356 0176 1A4B     		ldr	r3, .L239+20
 1357 0178 0340     		ands	r3, r3, r0
 1358              	.LVL172:
 256:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1359              		.loc 1 256 0
 1360 017a 13B1     		cbz	r3, .L206
 264:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 1361              		.loc 1 264 0
 1362 017c FFF7FEFF 		bl	get_error_code
 1363              	.LVL173:
 1364 0180 0446     		mov	r4, r0
 1365              	.LVL174:
 1366              	.L206:
 267:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1367              		.loc 1 267 0
 1368 0182 24B1     		cbz	r4, .L207
 267:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1369              		.loc 1 267 0 is_stmt 0 discriminator 1
 1370 0184 052C     		cmp	r4, #5
 1371 0186 02D0     		beq	.L207
 1372              	.LVL175:
 1373              	.L208:
 1374              	.LBE69:
 286:../src/drivers/mss_nvm/mss_nvm.c ****             }
 1375              		.loc 1 286 0 is_stmt 1
 1376 0188 FFF7FEFF 		bl	release_ctrl_access
 1377              	.LVL176:
 1378 018c 0FE0     		b	.L195
 1379              	.LVL177:
 1380              	.L207:
 1381              	.LBB75:
 269:../src/drivers/mss_nvm/mss_nvm.c ****                         {
 1382              		.loc 1 269 0
 1383 018e 009B     		ldr	r3, [sp]
 1384 0190 9945     		cmp	r9, r3
 1385 0192 F9D9     		bls	.L208
 1386              	.LVL178:
 1387              	.LBE75:
 243:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 1388              		.loc 1 243 0
 1389 0194 B9EB0309 		subs	r9, r9, r3
 1390              	.LVL179:
 1391 0198 95D1     		bne	.L209
 1392 019a F5E7     		b	.L208
 1393              	.LVL180:
 1394              	.L213:
 1395              	.LBE68:
 154:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t nvm_offset;
 1396              		.loc 1 154 0
 1397 019c 019E     		ldr	r6, [sp, #4]
 1398 019e 02E0     		b	.L236
 1399              	.L214:
 1400 01a0 4646     		mov	r6, r8
 1401 01a2 00E0     		b	.L236
 1402              	.L215:
 1403 01a4 2E46     		mov	r6, r5
 1404              	.L236:
 179:../src/drivers/mss_nvm/mss_nvm.c ****     }
 1405              		.loc 1 179 0
 1406 01a6 0724     		movs	r4, #7
 1407 01a8 01E0     		b	.L195
 1408              	.LVL181:
 1409              	.L217:
 1410 01aa 0446     		mov	r4, r0
 1411              	.LVL182:
 154:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t nvm_offset;
 1412              		.loc 1 154 0
 1413 01ac 2E46     		mov	r6, r5
 1414              	.LVL183:
 1415              	.L195:
 291:../src/drivers/mss_nvm/mss_nvm.c **** 
 1416              		.loc 1 291 0
 1417 01ae 0D4B     		ldr	r3, .L239+24
 1418 01b0 0022     		movs	r2, #0
 1419 01b2 1A70     		strb	r2, [r3]
 294:../src/drivers/mss_nvm/mss_nvm.c ****     
 1420              		.loc 1 294 0
 1421 01b4 054B     		ldr	r3, .L239
 1422 01b6 029A     		ldr	r2, [sp, #8]
 1423 01b8 DA60     		str	r2, [r3, #12]
 296:../src/drivers/mss_nvm/mss_nvm.c ****     {
 1424              		.loc 1 296 0
 1425 01ba 14B9     		cbnz	r4, .L210
 1426 01bc 042E     		cmp	r6, #4
 1427 01be 08BF     		it	eq
 1428 01c0 0424     		moveq	r4, #4
 1429              	.LVL184:
 1430              	.L210:
 301:../src/drivers/mss_nvm/mss_nvm.c **** 
 1431              		.loc 1 301 0
 1432 01c2 2046     		mov	r0, r4
 1433 01c4 07B0     		add	sp, sp, #28
 1434              		.cfi_def_cfa_offset 36
 1435              		@ sp needed
 1436 01c6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1437              	.LVL185:
 1438              	.L240:
 1439 01ca 00BF     		.align	2
 1440              	.L239:
 1441 01cc 00800340 		.word	1073971200
 1442 01d0 FEFF0760 		.word	1611137022
 1443 01d4 0000F85F 		.word	1610088448
 1444 01d8 00000000 		.word	.LANCHOR0
 1445 01dc 1E000400 		.word	262174
 1446 01e0 3E000400 		.word	262206
 1447 01e4 00000000 		.word	.LANCHOR3
 1448              		.cfi_endproc
 1449              	.LFE63:
 1451              		.section	.text.NVM_unlock,"ax",%progbits
 1452              		.align	1
 1453              		.global	NVM_unlock
 1454              		.thumb
 1455              		.thumb_func
 1457              	NVM_unlock:
 1458              	.LFB65:
 354:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 1459              		.loc 1 354 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 0
 1462              		@ frame_needed = 0, uses_anonymous_args = 0
 1463              	.LVL186:
 1464 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1465              		.cfi_def_cfa_offset 32
 1466              		.cfi_offset 3, -32
 1467              		.cfi_offset 4, -28
 1468              		.cfi_offset 5, -24
 1469              		.cfi_offset 6, -20
 1470              		.cfi_offset 7, -16
 1471              		.cfi_offset 8, -12
 1472              		.cfi_offset 9, -8
 1473              		.cfi_offset 14, -4
 370:../src/drivers/mss_nvm/mss_nvm.c ****     SYSREG->ENVM_CR = (initial_nvm_config & NVM_FREQRNG_MASK) | NVM_FREQRNG_MAX;
 1474              		.loc 1 370 0
 1475 0004 3C4B     		ldr	r3, .L267
 354:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 1476              		.loc 1 354 0
 1477 0006 8846     		mov	r8, r1
 370:../src/drivers/mss_nvm/mss_nvm.c ****     SYSREG->ENVM_CR = (initial_nvm_config & NVM_FREQRNG_MASK) | NVM_FREQRNG_MAX;
 1478              		.loc 1 370 0
 1479 0008 DE68     		ldr	r6, [r3, #12]
 1480              	.LVL187:
 371:../src/drivers/mss_nvm/mss_nvm.c ****     
 1481              		.loc 1 371 0
 1482 000a 46F4FF52 		orr	r2, r6, #8160
 1483 000e DA60     		str	r2, [r3, #12]
 374:../src/drivers/mss_nvm/mss_nvm.c ****         ((start_addr >= NVM_TOP_OFFSET) &&
 1484              		.loc 1 374 0
 1485 0010 3A4B     		ldr	r3, .L267+4
 1486 0012 9842     		cmp	r0, r3
 1487 0014 69D8     		bhi	.L252
 375:../src/drivers/mss_nvm/mss_nvm.c ****         (start_addr < NVM_BASE_ADDRESS)) ||
 1488              		.loc 1 375 0 discriminator 1
 1489 0016 A0F5FF23 		sub	r3, r0, #522240
 374:../src/drivers/mss_nvm/mss_nvm.c ****         ((start_addr >= NVM_TOP_OFFSET) &&
 1490              		.loc 1 374 0 discriminator 1
 1491 001a 394A     		ldr	r2, .L267+8
 375:../src/drivers/mss_nvm/mss_nvm.c ****         (start_addr < NVM_BASE_ADDRESS)) ||
 1492              		.loc 1 375 0 discriminator 1
 1493 001c A3F2FF73 		subw	r3, r3, #2047
 374:../src/drivers/mss_nvm/mss_nvm.c ****         ((start_addr >= NVM_TOP_OFFSET) &&
 1494              		.loc 1 374 0 discriminator 1
 1495 0020 9342     		cmp	r3, r2
 1496 0022 62D9     		bls	.L252
 376:../src/drivers/mss_nvm/mss_nvm.c ****         (0u == length))
 1497              		.loc 1 376 0
 1498 0024 0029     		cmp	r1, #0
 1499 0026 60D0     		beq	.L252
 384:../src/drivers/mss_nvm/mss_nvm.c ****         
 1500              		.loc 1 384 0
 1501 0028 C0F31205 		ubfx	r5, r0, #0, #19
 1502              	.LVL188:
 387:../src/drivers/mss_nvm/mss_nvm.c **** 
 1503              		.loc 1 387 0
 1504 002c 2846     		mov	r0, r5
 1505              	.LVL189:
 1506 002e FFF7FEFF 		bl	check_protection_reserved_nvm
 1507              	.LVL190:
 389:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1508              		.loc 1 389 0
 1509 0032 0446     		mov	r4, r0
 1510 0034 0028     		cmp	r0, #0
 1511 0036 59D1     		bne	.L242
 1512              	.LVL191:
 395:../src/drivers/mss_nvm/mss_nvm.c **** 
 1513              		.loc 1 395 0
 1514 0038 2846     		mov	r0, r5
 1515              	.LVL192:
 1516 003a 4146     		mov	r1, r8
 1517 003c FFF7FEFF 		bl	get_ctrl_access
 1518              	.LVL193:
 398:../src/drivers/mss_nvm/mss_nvm.c ****             {
 1519              		.loc 1 398 0
 1520 0040 0446     		mov	r4, r0
 1521 0042 0028     		cmp	r0, #0
 1522 0044 52D1     		bne	.L242
 1523 0046 08F1FF38 		add	r8, r8, #-1
 1524              	.LVL194:
 391:../src/drivers/mss_nvm/mss_nvm.c ****             last_page = (nvm_offset + (length - 1u)) / BYTES_PER_PAGE;
 1525              		.loc 1 391 0
 1526 004a EF09     		lsrs	r7, r5, #7
 1527              	.LVL195:
 392:../src/drivers/mss_nvm/mss_nvm.c **** 
 1528              		.loc 1 392 0
 1529 004c 4544     		add	r5, r5, r8
 1530              	.LVL196:
 1531 004e ED09     		lsrs	r5, r5, #7
 1532              	.LVL197:
 1533              	.L243:
 1534              	.LBB76:
 406:../src/drivers/mss_nvm/mss_nvm.c ****                     ((NVM_SUCCESS == status) ||(NVM_WRITE_THRESHOLD_WARNING == status));
 1535              		.loc 1 406 0 discriminator 1
 1536 0050 AF42     		cmp	r7, r5
 1537 0052 02D9     		bls	.L247
 1538              	.L249:
 453:../src/drivers/mss_nvm/mss_nvm.c ****             }
 1539              		.loc 1 453 0
 1540 0054 FFF7FEFF 		bl	release_ctrl_access
 1541              	.LVL198:
 1542 0058 48E0     		b	.L242
 1543              	.L247:
 406:../src/drivers/mss_nvm/mss_nvm.c ****                     ((NVM_SUCCESS == status) ||(NVM_WRITE_THRESHOLD_WARNING == status));
 1544              		.loc 1 406 0 discriminator 2
 1545 005a 002C     		cmp	r4, #0
 1546 005c 42D1     		bne	.L266
 1547              	.L248:
 1548              	.LBB77:
 412:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1549              		.loc 1 412 0
 1550 005e B7F5006F 		cmp	r7, #2048
 421:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1551              		.loc 1 421 0
 1552 0062 284B     		ldr	r3, .L267+12
 412:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1553              		.loc 1 412 0
 1554 0064 34BF     		ite	cc
 1555 0066 0020     		movcc	r0, #0
 1556 0068 0120     		movcs	r0, #1
 1557              	.LVL199:
 421:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1558              		.loc 1 421 0
 1559 006a 53F82020 		ldr	r2, [r3, r0, lsl #2]
 432:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 1560              		.loc 1 432 0
 1561 006e 2649     		ldr	r1, .L267+16
 421:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1562              		.loc 1 421 0
 1563 0070 D2F82031 		ldr	r3, [r2, #288]
 432:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 1564              		.loc 1 432 0
 1565 0074 51F820C0 		ldr	ip, [r1, r0, lsl #2]
 421:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1566              		.loc 1 421 0
 1567 0078 5B03     		lsls	r3, r3, #13
 424:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 1568              		.loc 1 424 0
 1569 007a 48BF     		it	mi
 1570 007c D2F85831 		ldrmi	r3, [r2, #344]
 430:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1571              		.loc 1 430 0
 1572 0080 4FF00001 		mov	r1, #0
 424:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 1573              		.loc 1 424 0
 1574 0084 44BF     		itt	mi
 1575 0086 43F00203 		orrmi	r3, r3, #2
 1576 008a C2F85831 		strmi	r3, [r2, #344]
 427:../src/drivers/mss_nvm/mss_nvm.c ****                     p_nvm32 = (uint32_t *)(NVM_BASE_ADDRESS + current_offset);
 1577              		.loc 1 427 0
 1578 008e FB01     		lsls	r3, r7, #7
 1579              	.LVL200:
 1580 0090 03F1C04E 		add	lr, r3, #1610612736
 1581              	.LVL201:
 1582 0094 AEF1040E 		sub	lr, lr, #4
 1583              	.LVL202:
 1584              	.L245:
 432:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 1585              		.loc 1 432 0 discriminator 3
 1586 0098 01F12008 		add	r8, r1, #32
 1587 009c 5EF8049F 		ldr	r9, [lr, #4]!
 430:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1588              		.loc 1 430 0 discriminator 3
 1589 00a0 0131     		adds	r1, r1, #1
 1590              	.LVL203:
 1591 00a2 2029     		cmp	r1, #32
 432:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 1592              		.loc 1 432 0 discriminator 3
 1593 00a4 4CF82890 		str	r9, [ip, r8, lsl #2]
 430:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1594              		.loc 1 430 0 discriminator 3
 1595 00a8 F6D1     		bne	.L245
 435:../src/drivers/mss_nvm/mss_nvm.c ****                     g_nvm[block]->CMD = USER_UNLOCK | (current_offset & PAGE_ADDR_MASK);
 1596              		.loc 1 435 0
 1597 00aa 0021     		movs	r1, #0
 1598              	.LVL204:
 1599 00ac C2F84011 		str	r1, [r2, #320]
 436:../src/drivers/mss_nvm/mss_nvm.c **** 
 1600              		.loc 1 436 0
 1601 00b0 23F09851 		bic	r1, r3, #318767104
 439:../src/drivers/mss_nvm/mss_nvm.c **** 
 1602              		.loc 1 439 0
 1603 00b4 23F00063 		bic	r3, r3, #134217728
 1604              	.LVL205:
 436:../src/drivers/mss_nvm/mss_nvm.c **** 
 1605              		.loc 1 436 0
 1606 00b8 21F07F01 		bic	r1, r1, #127
 439:../src/drivers/mss_nvm/mss_nvm.c **** 
 1607              		.loc 1 439 0
 1608 00bc 23F07F03 		bic	r3, r3, #127
 1609 00c0 43F00063 		orr	r3, r3, #134217728
 436:../src/drivers/mss_nvm/mss_nvm.c **** 
 1610              		.loc 1 436 0
 1611 00c4 41F09851 		orr	r1, r1, #318767104
 1612 00c8 C2F84811 		str	r1, [r2, #328]
 439:../src/drivers/mss_nvm/mss_nvm.c **** 
 1613              		.loc 1 439 0
 1614 00cc C2F84831 		str	r3, [r2, #328]
 442:../src/drivers/mss_nvm/mss_nvm.c **** 
 1615              		.loc 1 442 0
 1616 00d0 FFF7FEFF 		bl	wait_nvm_ready
 1617              	.LVL206:
 445:../src/drivers/mss_nvm/mss_nvm.c ****                     if(errors_and_warnings)
 1618              		.loc 1 445 0
 1619 00d4 0D4B     		ldr	r3, .L267+20
 1620 00d6 0340     		ands	r3, r3, r0
 1621              	.LVL207:
 446:../src/drivers/mss_nvm/mss_nvm.c ****                     {
 1622              		.loc 1 446 0
 1623 00d8 13B1     		cbz	r3, .L246
 448:../src/drivers/mss_nvm/mss_nvm.c ****                     }
 1624              		.loc 1 448 0
 1625 00da FFF7FEFF 		bl	get_error_code
 1626              	.LVL208:
 1627 00de 0446     		mov	r4, r0
 1628              	.LVL209:
 1629              	.L246:
 1630              	.LBE77:
 408:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 1631              		.loc 1 408 0
 1632 00e0 0137     		adds	r7, r7, #1
 1633              	.LVL210:
 1634 00e2 B5E7     		b	.L243
 1635              	.LVL211:
 1636              	.L266:
 407:../src/drivers/mss_nvm/mss_nvm.c ****                     ++current_page)
 1637              		.loc 1 407 0
 1638 00e4 052C     		cmp	r4, #5
 1639 00e6 BAD0     		beq	.L248
 1640 00e8 B4E7     		b	.L249
 1641              	.LVL212:
 1642              	.L252:
 1643              	.LBE76:
 379:../src/drivers/mss_nvm/mss_nvm.c ****     }
 1644              		.loc 1 379 0
 1645 00ea 0724     		movs	r4, #7
 1646              	.LVL213:
 1647              	.L242:
 458:../src/drivers/mss_nvm/mss_nvm.c ****     
 1648              		.loc 1 458 0
 1649 00ec 024B     		ldr	r3, .L267
 461:../src/drivers/mss_nvm/mss_nvm.c **** 
 1650              		.loc 1 461 0
 1651 00ee 2046     		mov	r0, r4
 458:../src/drivers/mss_nvm/mss_nvm.c ****     
 1652              		.loc 1 458 0
 1653 00f0 DE60     		str	r6, [r3, #12]
 461:../src/drivers/mss_nvm/mss_nvm.c **** 
 1654              		.loc 1 461 0
 1655 00f2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1656              	.LVL214:
 1657              	.L268:
 1658 00f6 00BF     		.align	2
 1659              	.L267:
 1660 00f8 00800340 		.word	1073971200
 1661 00fc FEFF0760 		.word	1611137022
 1662 0100 0000F85F 		.word	1610088448
 1663 0104 00000000 		.word	.LANCHOR0
 1664 0108 00000000 		.word	.LANCHOR2
 1665 010c 3E000400 		.word	262206
 1666              		.cfi_endproc
 1667              	.LFE65:
 1669              		.section	.text.NVM_read_page_write_count,"ax",%progbits
 1670              		.align	1
 1671              		.global	NVM_read_page_write_count
 1672              		.thumb
 1673              		.thumb_func
 1675              	NVM_read_page_write_count:
 1676              	.LFB73:
 785:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t write_count = 0u;
 1677              		.loc 1 785 0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 0
 1680              		@ frame_needed = 0, uses_anonymous_args = 0
 1681              	.LVL215:
 1682 0000 38B5     		push	{r3, r4, r5, lr}
 1683              		.cfi_def_cfa_offset 16
 1684              		.cfi_offset 3, -16
 1685              		.cfi_offset 4, -12
 1686              		.cfi_offset 5, -8
 1687              		.cfi_offset 14, -4
 791:../src/drivers/mss_nvm/mss_nvm.c ****        ((addr >= NVM_TOP_OFFSET) && (addr < NVM_BASE_ADDRESS)))
 1688              		.loc 1 791 0
 1689 0002 204B     		ldr	r3, .L280
 1690 0004 9842     		cmp	r0, r3
 1691 0006 01D9     		bls	.L270
 1692              	.LVL216:
 1693              	.L272:
 794:../src/drivers/mss_nvm/mss_nvm.c ****     }
 1694              		.loc 1 794 0
 1695 0008 0020     		movs	r0, #0
 1696 000a 38BD     		pop	{r3, r4, r5, pc}
 1697              	.LVL217:
 1698              	.L270:
 792:../src/drivers/mss_nvm/mss_nvm.c ****     {
 1699              		.loc 1 792 0 discriminator 1
 1700 000c A0F5FF23 		sub	r3, r0, #522240
 791:../src/drivers/mss_nvm/mss_nvm.c ****        ((addr >= NVM_TOP_OFFSET) && (addr < NVM_BASE_ADDRESS)))
 1701              		.loc 1 791 0 discriminator 1
 1702 0010 1D4A     		ldr	r2, .L280+4
 792:../src/drivers/mss_nvm/mss_nvm.c ****     {
 1703              		.loc 1 792 0 discriminator 1
 1704 0012 A3F2FF73 		subw	r3, r3, #2047
 791:../src/drivers/mss_nvm/mss_nvm.c ****        ((addr >= NVM_TOP_OFFSET) && (addr < NVM_BASE_ADDRESS)))
 1705              		.loc 1 791 0 discriminator 1
 1706 0016 9342     		cmp	r3, r2
 1707 0018 F6D9     		bls	.L272
 799:../src/drivers/mss_nvm/mss_nvm.c ****         
 1708              		.loc 1 799 0
 1709 001a C0F31204 		ubfx	r4, r0, #0, #19
 1710              	.LVL218:
 801:../src/drivers/mss_nvm/mss_nvm.c ****         
 1711              		.loc 1 801 0
 1712 001e 2046     		mov	r0, r4
 1713              	.LVL219:
 1714 0020 0021     		movs	r1, #0
 1715 0022 FFF7FEFF 		bl	check_protection_reserved_nvm
 1716              	.LVL220:
 803:../src/drivers/mss_nvm/mss_nvm.c ****         {  
 1717              		.loc 1 803 0
 1718 0026 0546     		mov	r5, r0
 1719 0028 0028     		cmp	r0, #0
 1720 002a EDD1     		bne	.L272
 806:../src/drivers/mss_nvm/mss_nvm.c ****         
 1721              		.loc 1 806 0
 1722 002c 2046     		mov	r0, r4
 1723              	.LVL221:
 1724 002e 0121     		movs	r1, #1
 1725 0030 FFF7FEFF 		bl	get_ctrl_access
 1726              	.LVL222:
 809:../src/drivers/mss_nvm/mss_nvm.c ****             {
 1727              		.loc 1 809 0
 1728 0034 00BB     		cbnz	r0, .L277
 811:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 1729              		.loc 1 811 0
 1730 0036 B4F5802F 		cmp	r4, #262144
 1731              	.LVL223:
 821:../src/drivers/mss_nvm/mss_nvm.c ****         
 1732              		.loc 1 821 0
 1733 003a 144B     		ldr	r3, .L280+8
 817:../src/drivers/mss_nvm/mss_nvm.c ****                     offset = offset - NVM1_BOTTOM_OFFSET;
 1734              		.loc 1 817 0
 1735 003c 28BF     		it	cs
 1736 003e 0120     		movcs	r0, #1
 1737              	.LVL224:
 821:../src/drivers/mss_nvm/mss_nvm.c ****         
 1738              		.loc 1 821 0
 1739 0040 53F82050 		ldr	r5, [r3, r0, lsl #2]
 818:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 1740              		.loc 1 818 0
 1741 0044 28BF     		it	cs
 1742 0046 A4F58024 		subcs	r4, r4, #262144
 1743              	.LVL225:
 821:../src/drivers/mss_nvm/mss_nvm.c ****         
 1744              		.loc 1 821 0
 1745 004a D5F82831 		ldr	r3, [r5, #296]
 1746 004e 04F1C044 		add	r4, r4, #1610612736
 1747 0052 43F00203 		orr	r3, r3, #2
 1748 0056 C5F82831 		str	r3, [r5, #296]
 823:../src/drivers/mss_nvm/mss_nvm.c ****                 {
 1749              		.loc 1 823 0
 1750 005a 08B1     		cbz	r0, .L279
 1751              	.LVL226:
 829:../src/drivers/mss_nvm/mss_nvm.c ****                 }
 1752              		.loc 1 829 0
 1753 005c 04F58024 		add	r4, r4, #262144
 1754              	.LVL227:
 1755              	.L279:
 1756 0060 24F07F04 		bic	r4, r4, #127
 1757 0064 2468     		ldr	r4, [r4]
 1758              	.LVL228:
 833:../src/drivers/mss_nvm/mss_nvm.c ****                 /* Clear R/W page status select bit */
 1759              		.loc 1 833 0
 1760 0066 FFF7FEFF 		bl	wait_nvm_ready
 1761              	.LVL229:
 835:../src/drivers/mss_nvm/mss_nvm.c ****             }
 1762              		.loc 1 835 0
 1763 006a D5F82831 		ldr	r3, [r5, #296]
 1764 006e 23F00203 		bic	r3, r3, #2
 1765 0072 C5F82831 		str	r3, [r5, #296]
 1766 0076 00E0     		b	.L273
 1767              	.LVL230:
 1768              	.L277:
 798:../src/drivers/mss_nvm/mss_nvm.c ****         offset = addr & NVM_OFFSET_SIGNIFICANT_BITS;
 1769              		.loc 1 798 0
 1770 0078 2C46     		mov	r4, r5
 1771              	.LVL231:
 1772              	.L273:
 839:../src/drivers/mss_nvm/mss_nvm.c ****         
 1773              		.loc 1 839 0
 1774 007a FFF7FEFF 		bl	release_ctrl_access
 1775              	.LVL232:
 842:../src/drivers/mss_nvm/mss_nvm.c ****         }
 1776              		.loc 1 842 0
 1777 007e C4F31310 		ubfx	r0, r4, #4, #20
 1778              	.LVL233:
 847:../src/drivers/mss_nvm/mss_nvm.c **** /**************************************************************************//**
 1779              		.loc 1 847 0
 1780 0082 38BD     		pop	{r3, r4, r5, pc}
 1781              	.L281:
 1782              		.align	2
 1783              	.L280:
 1784 0084 FEFF0760 		.word	1611137022
 1785 0088 0000F85F 		.word	1610088448
 1786 008c 00000000 		.word	.LANCHOR0
 1787              		.cfi_endproc
 1788              	.LFE73:
 1790              		.section	.text.MSS_NVM_read,"ax",%progbits
 1791              		.align	1
 1792              		.global	MSS_NVM_read
 1793              		.thumb
 1794              		.thumb_func
 1796              	MSS_NVM_read:
 1797              	.LFB76:
1374:../src/drivers/mss_nvm/mss_nvm.c ****     {
1375:../src/drivers/mss_nvm/mss_nvm.c ****         protect_flag = PROTECTION_OFF;
1376:../src/drivers/mss_nvm/mss_nvm.c ****     }
1377:../src/drivers/mss_nvm/mss_nvm.c ****     else
1378:../src/drivers/mss_nvm/mss_nvm.c ****     {
1379:../src/drivers/mss_nvm/mss_nvm.c ****         protect_flag = PROTECTION_ON;
1380:../src/drivers/mss_nvm/mss_nvm.c ****     }
1381:../src/drivers/mss_nvm/mss_nvm.c ****     return protect_flag;
1382:../src/drivers/mss_nvm/mss_nvm.c **** }
1383:../src/drivers/mss_nvm/mss_nvm.c **** 
1384:../src/drivers/mss_nvm/mss_nvm.c **** /******************************** Additional API's ******************************/
1385:../src/drivers/mss_nvm/mss_nvm.c **** 
1386:../src/drivers/mss_nvm/mss_nvm.c **** /*********************************Read*****************************************/
1387:../src/drivers/mss_nvm/mss_nvm.c **** nvm_status_t
1388:../src/drivers/mss_nvm/mss_nvm.c **** MSS_NVM_read
1389:../src/drivers/mss_nvm/mss_nvm.c **** (
1390:../src/drivers/mss_nvm/mss_nvm.c ****     uint8_t * addr,
1391:../src/drivers/mss_nvm/mss_nvm.c ****     uint8_t * podata,
1392:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t  len
1393:../src/drivers/mss_nvm/mss_nvm.c **** )
1394:../src/drivers/mss_nvm/mss_nvm.c **** {
 1798              		.loc 1 1394 0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 0
 1801              		@ frame_needed = 0, uses_anonymous_args = 0
 1802              	.LVL234:
 1803 0000 10B5     		push	{r4, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 4, -8
 1806              		.cfi_offset 14, -4
1395:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status = NVM_SUCCESS;
 1807              		.loc 1 1395 0
 1808 0002 0023     		movs	r3, #0
 1809              	.LVL235:
 1810              	.L283:
1396:../src/drivers/mss_nvm/mss_nvm.c ****     uint8_t * nvmaddr = 0u;
1397:../src/drivers/mss_nvm/mss_nvm.c **** 
1398:../src/drivers/mss_nvm/mss_nvm.c **** 
1399:../src/drivers/mss_nvm/mss_nvm.c ****         /* add read offset to read the data */
1400:../src/drivers/mss_nvm/mss_nvm.c ****         nvmaddr = ( (uint8_t *) ( NVM_BASE_ADDRESS  + addr ) );
1401:../src/drivers/mss_nvm/mss_nvm.c ****         while( ( len > 0) && ( NVM_SUCCESS == status ) )
 1811              		.loc 1 1401 0
 1812 0004 7AB1     		cbz	r2, .L290
 1813              		.loc 1 1401 0 is_stmt 0 discriminator 1
 1814 0006 73B9     		cbnz	r3, .L290
1402:../src/drivers/mss_nvm/mss_nvm.c ****         {
1403:../src/drivers/mss_nvm/mss_nvm.c ****             len--;
 1815              		.loc 1 1403 0 is_stmt 1
 1816 0008 541E     		subs	r4, r2, #1
 1817              	.LVL236:
 1818 000a 02F1C042 		add	r2, r2, #1610612736
 1819 000e 013A     		subs	r2, r2, #1
1404:../src/drivers/mss_nvm/mss_nvm.c ****             podata[len] = nvmaddr[len];
 1820              		.loc 1 1404 0
 1821 0010 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 1822 0012 0A55     		strb	r2, [r1, r4]
1405:../src/drivers/mss_nvm/mss_nvm.c ****                 if( (g_nvm[NVM_BLOCK_0]->STATUS & MSS_NVM_ECC2 ) )
 1823              		.loc 1 1405 0
 1824 0014 054A     		ldr	r2, .L291
 1825 0016 D2F82021 		ldr	r2, [r2, #288]
1406:../src/drivers/mss_nvm/mss_nvm.c ****                     status = NVM_INVALID_PARAMETER;
 1826              		.loc 1 1406 0
 1827 001a 12F4807F 		tst	r2, #256
 1828 001e 18BF     		it	ne
 1829 0020 0723     		movne	r3, #7
 1830              	.LVL237:
 1831 0022 2246     		mov	r2, r4
 1832 0024 EEE7     		b	.L283
 1833              	.LVL238:
 1834              	.L290:
1407:../src/drivers/mss_nvm/mss_nvm.c ****         }
1408:../src/drivers/mss_nvm/mss_nvm.c ****     return status;
1409:../src/drivers/mss_nvm/mss_nvm.c **** }
 1835              		.loc 1 1409 0
 1836 0026 1846     		mov	r0, r3
 1837              	.LVL239:
 1838 0028 10BD     		pop	{r4, pc}
 1839              	.L292:
 1840 002a 00BF     		.align	2
 1841              	.L291:
 1842 002c 00000860 		.word	1611137024
 1843              		.cfi_endproc
 1844              	.LFE76:
 1846              		.section	.text.NVM_verify,"ax",%progbits
 1847              		.align	1
 1848              		.global	NVM_verify
 1849              		.thumb
 1850              		.thumb_func
 1852              	NVM_verify:
 1853              	.LFB78:
1410:../src/drivers/mss_nvm/mss_nvm.c **** 
1411:../src/drivers/mss_nvm/mss_nvm.c **** /*********************************Verify*****************************************/
1412:../src/drivers/mss_nvm/mss_nvm.c **** static uint32_t
1413:../src/drivers/mss_nvm/mss_nvm.c **** verify_nvm
1414:../src/drivers/mss_nvm/mss_nvm.c **** (
1415:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t addr,
1416:../src/drivers/mss_nvm/mss_nvm.c ****     const uint8_t * pidata,
1417:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t  length,
1418:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t * p_status
1419:../src/drivers/mss_nvm/mss_nvm.c **** )
1420:../src/drivers/mss_nvm/mss_nvm.c **** {
1421:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t length_verified;
1422:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t offset;
1423:../src/drivers/mss_nvm/mss_nvm.c **** 
1424:../src/drivers/mss_nvm/mss_nvm.c ****     *p_status = 0u;
1425:../src/drivers/mss_nvm/mss_nvm.c **** 
1426:../src/drivers/mss_nvm/mss_nvm.c ****     offset = addr & NVM_OFFSET_SIGNIFICANT_BITS;  /* Ignore remapping. */
1427:../src/drivers/mss_nvm/mss_nvm.c **** 
1428:../src/drivers/mss_nvm/mss_nvm.c ****     ASSERT(offset <= NVM1_TOP_OFFSET);
1429:../src/drivers/mss_nvm/mss_nvm.c **** 
1430:../src/drivers/mss_nvm/mss_nvm.c ****     /* Adjust length to fit within one page. */
1431:../src/drivers/mss_nvm/mss_nvm.c ****     length_verified = get_remaining_page_length(offset, length);
1432:../src/drivers/mss_nvm/mss_nvm.c **** 
1433:../src/drivers/mss_nvm/mss_nvm.c ****     if(offset <= NVM1_TOP_OFFSET)
1434:../src/drivers/mss_nvm/mss_nvm.c ****     {
1435:../src/drivers/mss_nvm/mss_nvm.c ****         uint32_t block;
1436:../src/drivers/mss_nvm/mss_nvm.c ****         volatile uint32_t ctrl_status;
1437:../src/drivers/mss_nvm/mss_nvm.c ****         uint32_t errors;
1438:../src/drivers/mss_nvm/mss_nvm.c **** 
1439:../src/drivers/mss_nvm/mss_nvm.c ****         if(offset < NVM1_BOTTOM_OFFSET)
1440:../src/drivers/mss_nvm/mss_nvm.c ****         {
1441:../src/drivers/mss_nvm/mss_nvm.c ****             block = NVM_BLOCK_0;
1442:../src/drivers/mss_nvm/mss_nvm.c ****         }
1443:../src/drivers/mss_nvm/mss_nvm.c ****         else
1444:../src/drivers/mss_nvm/mss_nvm.c ****         {
1445:../src/drivers/mss_nvm/mss_nvm.c ****             block = NVM_BLOCK_1;
1446:../src/drivers/mss_nvm/mss_nvm.c ****             offset = offset - NVM1_BOTTOM_OFFSET;
1447:../src/drivers/mss_nvm/mss_nvm.c ****         }
1448:../src/drivers/mss_nvm/mss_nvm.c **** 
1449:../src/drivers/mss_nvm/mss_nvm.c ****         fill_wd_buffer(pidata, length_verified, block, offset);
1450:../src/drivers/mss_nvm/mss_nvm.c **** 
1451:../src/drivers/mss_nvm/mss_nvm.c ****         /* Perform a verify. */
1452:../src/drivers/mss_nvm/mss_nvm.c ****         g_nvm[block]->CMD = VERIFY_ADS | (offset & PAGE_ADDR_MASK);
1453:../src/drivers/mss_nvm/mss_nvm.c ****         /* Wait for NVM to become ready. */
1454:../src/drivers/mss_nvm/mss_nvm.c ****         ctrl_status = wait_nvm_ready(block);
1455:../src/drivers/mss_nvm/mss_nvm.c **** 
1456:../src/drivers/mss_nvm/mss_nvm.c ****         /* Check for errors. */
1457:../src/drivers/mss_nvm/mss_nvm.c ****         errors = ctrl_status & WRITE_ERROR_MASK;
1458:../src/drivers/mss_nvm/mss_nvm.c ****         if(errors)
1459:../src/drivers/mss_nvm/mss_nvm.c ****           {
1460:../src/drivers/mss_nvm/mss_nvm.c ****             /* Signal that an error occured by returning 0 a a number of bytes written. */
1461:../src/drivers/mss_nvm/mss_nvm.c ****             length_verified = 0u;
1462:../src/drivers/mss_nvm/mss_nvm.c ****             *p_status = g_nvm[block]->STATUS;
1463:../src/drivers/mss_nvm/mss_nvm.c ****           }
1464:../src/drivers/mss_nvm/mss_nvm.c ****     }
1465:../src/drivers/mss_nvm/mss_nvm.c ****     return length_verified;
1466:../src/drivers/mss_nvm/mss_nvm.c **** }
1467:../src/drivers/mss_nvm/mss_nvm.c **** 
1468:../src/drivers/mss_nvm/mss_nvm.c **** nvm_status_t
1469:../src/drivers/mss_nvm/mss_nvm.c **** NVM_verify
1470:../src/drivers/mss_nvm/mss_nvm.c **** (
1471:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t addr,
1472:../src/drivers/mss_nvm/mss_nvm.c ****     const uint8_t * pidata,
1473:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t  length
1474:../src/drivers/mss_nvm/mss_nvm.c **** )
1475:../src/drivers/mss_nvm/mss_nvm.c **** {
 1854              		.loc 1 1475 0
 1855              		.cfi_startproc
 1856              		@ args = 0, pretend = 0, frame = 16
 1857              		@ frame_needed = 0, uses_anonymous_args = 0
 1858              	.LVL240:
 1859 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1860              		.cfi_def_cfa_offset 36
 1861              		.cfi_offset 4, -36
 1862              		.cfi_offset 5, -32
 1863              		.cfi_offset 6, -28
 1864              		.cfi_offset 7, -24
 1865              		.cfi_offset 8, -20
 1866              		.cfi_offset 9, -16
 1867              		.cfi_offset 10, -12
 1868              		.cfi_offset 11, -8
 1869              		.cfi_offset 14, -4
 1870 0004 8146     		mov	r9, r0
 1871 0006 85B0     		sub	sp, sp, #20
 1872              		.cfi_def_cfa_offset 56
 1873              		.loc 1 1475 0
 1874 0008 8A46     		mov	r10, r1
1476:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
1477:../src/drivers/mss_nvm/mss_nvm.c ****     uint32_t nvm_offset;
1478:../src/drivers/mss_nvm/mss_nvm.c **** 
1479:../src/drivers/mss_nvm/mss_nvm.c ****        /* Ignore upper address bits to ignore remapping setting. */
1480:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_offset = addr & NVM_OFFSET_SIGNIFICANT_BITS;  /* Ignore remapping. */
1481:../src/drivers/mss_nvm/mss_nvm.c **** 
1482:../src/drivers/mss_nvm/mss_nvm.c ****     /* Gain exclusive access to eNVM controller */
1483:../src/drivers/mss_nvm/mss_nvm.c ****     status = get_ctrl_access(nvm_offset, length);
 1875              		.loc 1 1483 0
 1876 000a C0F31200 		ubfx	r0, r0, #0, #19
 1877              	.LVL241:
 1878 000e 1146     		mov	r1, r2
 1879              	.LVL242:
1475:../src/drivers/mss_nvm/mss_nvm.c ****     nvm_status_t status;
 1880              		.loc 1 1475 0
 1881 0010 9046     		mov	r8, r2
 1882              		.loc 1 1483 0
 1883 0012 FFF7FEFF 		bl	get_ctrl_access
 1884              	.LVL243:
1484:../src/drivers/mss_nvm/mss_nvm.c **** 
1485:../src/drivers/mss_nvm/mss_nvm.c ****     /* Verify eNVM one page at a time. */
1486:../src/drivers/mss_nvm/mss_nvm.c ****     if(NVM_SUCCESS == status)
 1885              		.loc 1 1486 0
 1886 0016 0746     		mov	r7, r0
 1887 0018 0028     		cmp	r0, #0
 1888 001a 45D1     		bne	.L306
 1889 001c 4646     		mov	r6, r8
 1890              	.LVL244:
 1891              	.L295:
 1892              	.LBB85:
1487:../src/drivers/mss_nvm/mss_nvm.c ****     {
1488:../src/drivers/mss_nvm/mss_nvm.c ****         uint32_t remaining_length = length;
1489:../src/drivers/mss_nvm/mss_nvm.c **** 
1490:../src/drivers/mss_nvm/mss_nvm.c ****         while((remaining_length > 0u) && (NVM_SUCCESS == status))
 1893              		.loc 1 1490 0
 1894 001e 16B9     		cbnz	r6, .L300
 1895              	.L302:
1491:../src/drivers/mss_nvm/mss_nvm.c ****         {
1492:../src/drivers/mss_nvm/mss_nvm.c ****             uint32_t length_verified;
1493:../src/drivers/mss_nvm/mss_nvm.c ****             uint32_t nvm_hw_status;
1494:../src/drivers/mss_nvm/mss_nvm.c **** 
1495:../src/drivers/mss_nvm/mss_nvm.c ****             length_verified = verify_nvm(addr + (length - remaining_length),
1496:../src/drivers/mss_nvm/mss_nvm.c ****                                        &pidata[length - remaining_length],
1497:../src/drivers/mss_nvm/mss_nvm.c ****                                        remaining_length,
1498:../src/drivers/mss_nvm/mss_nvm.c ****                                        &nvm_hw_status);
1499:../src/drivers/mss_nvm/mss_nvm.c **** 
1500:../src/drivers/mss_nvm/mss_nvm.c ****             if(0u == length_verified)
1501:../src/drivers/mss_nvm/mss_nvm.c ****             {
1502:../src/drivers/mss_nvm/mss_nvm.c ****                 status = get_error_code(nvm_hw_status);
1503:../src/drivers/mss_nvm/mss_nvm.c ****             }
1504:../src/drivers/mss_nvm/mss_nvm.c ****             else if(remaining_length > length_verified)
1505:../src/drivers/mss_nvm/mss_nvm.c ****             {
1506:../src/drivers/mss_nvm/mss_nvm.c ****                 remaining_length -= length_verified;
1507:../src/drivers/mss_nvm/mss_nvm.c ****             }
1508:../src/drivers/mss_nvm/mss_nvm.c ****             else
1509:../src/drivers/mss_nvm/mss_nvm.c ****             {
1510:../src/drivers/mss_nvm/mss_nvm.c ****                 remaining_length = 0u;
1511:../src/drivers/mss_nvm/mss_nvm.c ****             }
1512:../src/drivers/mss_nvm/mss_nvm.c ****         }
1513:../src/drivers/mss_nvm/mss_nvm.c **** 
1514:../src/drivers/mss_nvm/mss_nvm.c ****         /* Release eNVM controllers so that other masters can gain access to it. */
1515:../src/drivers/mss_nvm/mss_nvm.c ****         release_ctrl_access();
 1896              		.loc 1 1515 0
 1897 0020 FFF7FEFF 		bl	release_ctrl_access
 1898              	.LVL245:
 1899 0024 40E0     		b	.L306
 1900              	.L300:
1490:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1901              		.loc 1 1490 0 discriminator 1
 1902 0026 002F     		cmp	r7, #0
 1903 0028 FAD1     		bne	.L302
 1904              	.LBB86:
1495:../src/drivers/mss_nvm/mss_nvm.c ****                                        &pidata[length - remaining_length],
 1905              		.loc 1 1495 0
 1906 002a C6EB0800 		rsb	r0, r6, r8
 1907 002e 00EB0905 		add	r5, r0, r9
 1908              	.LVL246:
 1909              	.LBB87:
 1910              	.LBB88:
1426:../src/drivers/mss_nvm/mss_nvm.c **** 
 1911              		.loc 1 1426 0
 1912 0032 C5F31204 		ubfx	r4, r5, #0, #19
 1913              	.LVL247:
 1914              	.LBB89:
 1915              	.LBB90:
 705:../src/drivers/mss_nvm/mss_nvm.c ****     last_page = (offset + length) / BYTES_PER_PAGE;
 1916              		.loc 1 705 0
 1917 0036 E309     		lsrs	r3, r4, #7
 706:../src/drivers/mss_nvm/mss_nvm.c ****     if(last_page >= start_page_plus_one)
 1918              		.loc 1 706 0
 1919 0038 A219     		adds	r2, r4, r6
 705:../src/drivers/mss_nvm/mss_nvm.c ****     last_page = (offset + length) / BYTES_PER_PAGE;
 1920              		.loc 1 705 0
 1921 003a 0133     		adds	r3, r3, #1
 1922              	.LVL248:
 707:../src/drivers/mss_nvm/mss_nvm.c ****     {
 1923              		.loc 1 707 0
 1924 003c B3EBD21F 		cmp	r3, r2, lsr #7
 1925 0040 8EBF     		itee	hi
 1926 0042 3546     		movhi	r5, r6
 1927              	.LVL249:
 709:../src/drivers/mss_nvm/mss_nvm.c ****     }
 1928              		.loc 1 709 0
 1929 0044 05F07F05 		andls	r5, r5, #127
 1930 0048 C5F18005 		rsbls	r5, r5, #128
 1931              	.LVL250:
 1932              	.LBE90:
 1933              	.LBE89:
 1934              	.LBB91:
1439:../src/drivers/mss_nvm/mss_nvm.c ****         {
 1935              		.loc 1 1439 0
 1936 004c B4F5802F 		cmp	r4, #262144
 1937              	.LVL251:
1445:../src/drivers/mss_nvm/mss_nvm.c ****             offset = offset - NVM1_BOTTOM_OFFSET;
 1938              		.loc 1 1445 0
 1939 0050 2ABF     		itet	cs
 1940 0052 4FF0010B 		movcs	fp, #1
1441:../src/drivers/mss_nvm/mss_nvm.c ****         }
 1941              		.loc 1 1441 0
 1942 0056 4FF0000B 		movcc	fp, #0
1446:../src/drivers/mss_nvm/mss_nvm.c ****         }
 1943              		.loc 1 1446 0
 1944 005a A4F58024 		subcs	r4, r4, #262144
 1945              	.LVL252:
1449:../src/drivers/mss_nvm/mss_nvm.c **** 
 1946              		.loc 1 1449 0
 1947 005e 2946     		mov	r1, r5
 1948 0060 2346     		mov	r3, r4
 1949              	.LVL253:
 1950 0062 5044     		add	r0, r0, r10
 1951              	.LVL254:
 1952 0064 5A46     		mov	r2, fp
 1953 0066 FFF7FEFF 		bl	fill_wd_buffer
 1954              	.LVL255:
1452:../src/drivers/mss_nvm/mss_nvm.c ****         /* Wait for NVM to become ready. */
 1955              		.loc 1 1452 0
 1956 006a 114B     		ldr	r3, .L307
 1957 006c 24F08054 		bic	r4, r4, #268435456
 1958              	.LVL256:
 1959 0070 53F82B20 		ldr	r2, [r3, fp, lsl #2]
 1960 0074 24F07F04 		bic	r4, r4, #127
 1961 0078 44F08054 		orr	r4, r4, #268435456
 1962 007c C2F84841 		str	r4, [r2, #328]
1454:../src/drivers/mss_nvm/mss_nvm.c **** 
 1963              		.loc 1 1454 0
 1964 0080 5846     		mov	r0, fp
1452:../src/drivers/mss_nvm/mss_nvm.c ****         /* Wait for NVM to become ready. */
 1965              		.loc 1 1452 0
 1966 0082 0192     		str	r2, [sp, #4]
1454:../src/drivers/mss_nvm/mss_nvm.c **** 
 1967              		.loc 1 1454 0
 1968 0084 FFF7FEFF 		bl	wait_nvm_ready
 1969              	.LVL257:
 1970 0088 0390     		str	r0, [sp, #12]
1457:../src/drivers/mss_nvm/mss_nvm.c ****         if(errors)
 1971              		.loc 1 1457 0
 1972 008a 0399     		ldr	r1, [sp, #12]
 1973              	.LVL258:
 1974 008c 094B     		ldr	r3, .L307+4
 1975 008e 0B40     		ands	r3, r3, r1
 1976              	.LVL259:
1458:../src/drivers/mss_nvm/mss_nvm.c ****           {
 1977              		.loc 1 1458 0
 1978 0090 33B1     		cbz	r3, .L298
 1979              	.LVL260:
1462:../src/drivers/mss_nvm/mss_nvm.c ****           }
 1980              		.loc 1 1462 0
 1981 0092 019A     		ldr	r2, [sp, #4]
 1982 0094 D2F82001 		ldr	r0, [r2, #288]
 1983              	.LVL261:
 1984              	.LBE91:
 1985              	.LBE88:
 1986              	.LBE87:
1502:../src/drivers/mss_nvm/mss_nvm.c ****             }
 1987              		.loc 1 1502 0
 1988 0098 FFF7FEFF 		bl	get_error_code
 1989              	.LVL262:
 1990 009c 0746     		mov	r7, r0
 1991              	.LVL263:
 1992 009e BEE7     		b	.L295
 1993              	.LVL264:
 1994              	.L298:
1504:../src/drivers/mss_nvm/mss_nvm.c ****             {
 1995              		.loc 1 1504 0
 1996 00a0 AE42     		cmp	r6, r5
 1997 00a2 BDD9     		bls	.L302
1506:../src/drivers/mss_nvm/mss_nvm.c ****             }
 1998              		.loc 1 1506 0
 1999 00a4 761B     		subs	r6, r6, r5
 2000              	.LVL265:
 2001 00a6 BAE7     		b	.L295
 2002              	.LVL266:
 2003              	.L306:
 2004              	.LBE86:
 2005              	.LBE85:
1516:../src/drivers/mss_nvm/mss_nvm.c ****     }
1517:../src/drivers/mss_nvm/mss_nvm.c **** 
1518:../src/drivers/mss_nvm/mss_nvm.c ****     return status;
1519:../src/drivers/mss_nvm/mss_nvm.c **** }
 2006              		.loc 1 1519 0
 2007 00a8 3846     		mov	r0, r7
 2008 00aa 05B0     		add	sp, sp, #20
 2009              		.cfi_def_cfa_offset 36
 2010              		@ sp needed
 2011 00ac BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2012              	.LVL267:
 2013              	.L308:
 2014              		.align	2
 2015              	.L307:
 2016 00b0 00000000 		.word	.LANCHOR0
 2017 00b4 1E000400 		.word	262174
 2018              		.cfi_endproc
 2019              	.LFE78:
 2021              		.section	.bss.g_do_not_lock_page,"aw",%nobits
 2022              		.set	.LANCHOR3,. + 0
 2025              	g_do_not_lock_page:
 2026 0000 00       		.space	1
 2027              		.section	.rodata.g_nvm,"a",%progbits
 2028              		.align	2
 2029              		.set	.LANCHOR0,. + 0
 2032              	g_nvm:
 2033 0000 00000860 		.word	1611137024
 2034 0004 00000C60 		.word	1611399168
 2035              		.section	.rodata.g_nvm32,"a",%progbits
 2036              		.align	2
 2037              		.set	.LANCHOR2,. + 0
 2040              	g_nvm32:
 2041 0000 00000860 		.word	1611137024
 2042 0004 00000C60 		.word	1611399168
 2043              		.section	.bss.g_envm_ctrl_locks,"aw",%nobits
 2044              		.set	.LANCHOR1,. + 0
 2047              	g_envm_ctrl_locks:
 2048 0000 00       		.space	1
 2049              		.text
 2050              	.Letext0:
 2051              		.file 2 "c:\\microsemi\\softconsole_v4.0\\arm-none-eabi-gcc\\arm-none-eabi\\include\\machine\\_def
 2052              		.file 3 "c:\\microsemi\\softconsole_v4.0\\arm-none-eabi-gcc\\arm-none-eabi\\include\\sys\\_stdint.
 2053              		.file 4 "../src/drivers/mss_nvm/../../CMSIS/m2sxxx.h"
 2054              		.file 5 "../src/drivers/mss_nvm/mss_nvm.h"
 2055              		.file 6 "C:\\Microsemi\\SoftConsole_v4.0\\CMSIS\\V4.3\\Include/core_cm3.h"
 2056              		.file 7 "../src/drivers/mss_nvm/../../CMSIS/system_m2sxxx.h"
DEFINED SYMBOLS
                            *ABS*:00000000 mss_nvm.c
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:19     .text.request_nvm_access:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:23     .text.request_nvm_access:00000000 request_nvm_access
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:85     .text.request_nvm_access:00000040 $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:92     .text.release_ctrl_access:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:96     .text.release_ctrl_access:00000000 release_ctrl_access
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:142    .text.release_ctrl_access:00000034 $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:149    .text.wait_nvm_ready:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:153    .text.wait_nvm_ready:00000000 wait_nvm_ready
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:201    .text.wait_nvm_ready:00000028 $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:206    .text.fill_wd_buffer:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:210    .text.fill_wd_buffer:00000000 fill_wd_buffer
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:332    .text.fill_wd_buffer:00000094 $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:338    .text.check_protection_reserved_nvm:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:342    .text.check_protection_reserved_nvm:00000000 check_protection_reserved_nvm
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:887    .text.check_protection_reserved_nvm:0000028c $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:905    .text.get_error_code:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:909    .text.get_error_code:00000000 get_error_code
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:966    .text.get_ctrl_access:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:970    .text.get_ctrl_access:00000000 get_ctrl_access
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1065   .text.get_ctrl_access:00000040 $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1070   .text.NVM_write:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1075   .text.NVM_write:00000000 NVM_write
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1441   .text.NVM_write:000001cc $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1452   .text.NVM_unlock:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1457   .text.NVM_unlock:00000000 NVM_unlock
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1660   .text.NVM_unlock:000000f8 $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1670   .text.NVM_read_page_write_count:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1675   .text.NVM_read_page_write_count:00000000 NVM_read_page_write_count
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1784   .text.NVM_read_page_write_count:00000084 $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1791   .text.MSS_NVM_read:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1796   .text.MSS_NVM_read:00000000 MSS_NVM_read
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1842   .text.MSS_NVM_read:0000002c $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1847   .text.NVM_verify:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:1852   .text.NVM_verify:00000000 NVM_verify
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:2016   .text.NVM_verify:000000b0 $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:2025   .bss.g_do_not_lock_page:00000000 g_do_not_lock_page
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:2026   .bss.g_do_not_lock_page:00000000 $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:2028   .rodata.g_nvm:00000000 $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:2032   .rodata.g_nvm:00000000 g_nvm
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:2036   .rodata.g_nvm32:00000000 $d
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:2040   .rodata.g_nvm32:00000000 g_nvm32
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:2047   .bss.g_envm_ctrl_locks:00000000 g_envm_ctrl_locks
C:\Users\jiryu\AppData\Local\Temp\ccYzeH3g.s:2048   .bss.g_envm_ctrl_locks:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.dc60c94ad21b0a47fa3b55ee8062ac89
                           .group:00000000 wm4.m2sxxx.h.14.987ea2aeaafde240411e8c56d47721f7
                           .group:00000000 wm4.core_cm3.h.43.614605f47657df9251f3b3f57590a49a
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:00000000 wm4._intsup.h.10.b2832a532eae49c14d45880be6d4ca65
                           .group:00000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:00000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:00000000 wm4.core_cmInstr.h.39.addda81f1f3453ba31dd54fc5b6fcee8
                           .group:00000000 wm4.core_cm3.h.160.4f087d7d2b17fc46469486aedc40cf5c
                           .group:00000000 wm4.m2sxxx.h.2709.9eef8620912489dbc5c26e98701cdac3
                           .group:00000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:00000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.mss_nvm.h.54.53fe48cb67630dbcda63b96130444f53

UNDEFINED SYMBOLS
SystemCoreClock
