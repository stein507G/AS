---- CMD_CHK_DIR_STATE_DIR_X Matches (0 in 0 files) ----
---- CMD_CHK_DIR_START_SYR Matches (3 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 425 : 	#define CMD_CHK_DIR_START_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 472 : 	#define CMD_CHK_DIR_START_SYR
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2322 : 		CMD_CHK_DIR_START_SYR;
---- CMD_CHK_DIR_OPTION_DIR_SYR Matches (3 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 428 : 	#define CMD_CHK_DIR_OPTION_DIR_SYR *((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x305 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 475 : 	#define CMD_CHK_DIR_OPTION_DIR_SYR
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3267 : CMD_CHK_DIR_OPTION_DIR_SYR = 0x01; 	// DIR_IN 
---- devSet.baseAddr[MOTOR_X] Matches (8 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 403 : 	#define CMD_CHK_DIR_RESET_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30C << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 404 : 	#define CMD_CHK_DIR_READY_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30D << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_START_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 406 : 	#define CMD_CHK_DIR_ACT_END_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30F << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 408 : 	#define CMD_CHK_DIR_OPTION_DIR_X *((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x305 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 411 : 	#define READ_CHK_DIR_X		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x5 << 2)))		// 상위 [31:16]
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5038 : 	devSet.baseAddr[MOTOR_X] = BASEADDR_MOTOR_X_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5110 : 	devSet.baseAddr[MOTOR_X] = BASEADDR_MOTOR_X;
---- readyChkRetry_X Matches (6 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1074 : int readyChkRetry_X(int encoderCount)
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1195 : int readyChkRetry_X(int encoderCount)
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1264 : 			if(readyChkRetry_X(encoderCount_X)) {
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2013 : 			if(readyChkRetry_X(encoderCount_X)) {
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2123 : 			if(readyChkRetry_X(encoderCount_X)) {
MotorCtrl_task.h (Ch_AS4\inc) line 143 : int readyChkRetry_X(int encoderCount);
---- goX_Encoder Matches (14 in 2 files) ----
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 841 : 			encoderCount = goX_Encoder(&Vial, option);
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 843 : 			encoderCount = goX_Encoder(pos, Tray, option);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1252 : 			encoderCount_X = goX_Encoder(pVial, ACT_XY_POS);			
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1254 : 			encoderCount_X = goX_Encoder(pVial->uPos.x, pVial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1342 : int goX_Encoder(const VIAL_POS_t *pVial, uint32_t option)
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1444 : int goX_Encoder(int32_t pos, uint32_t Tray, uint32_t option)
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1909 : 				encoderCount_X = goX_Encoder(pVial, ACT_XY_POS);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1911 : 				encoderCount_X = goX_Encoder(pVial->uPos.x, pVial->uPos.tray, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1995 : 			encoderCount_X = goX_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1997 : 			encoderCount_X = goX_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2092 : 					encoderCount_X = goX_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2094 : 					encoderCount_X = goX_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 71 : int goX_Encoder(const VIAL_POS_t *pVial, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 79 : int goX_Encoder(int32_t pos, uint32_t Tray, uint32_t option);
---- NEW_BOARD_ENCODER_2020 Matches (22 in 6 files) ----
ComType_AS.h (Ch_AS4\common_inc) line 333 : //#if NEW_BOARD_ENCODER_2020
define_AS.h (Ch_AS4\ryu_inc) line 39 : 	#if NEW_BOARD_ENCODER_2020
Def_stepCon.h (Ch_AS4\common_inc) line 139 : #if NEW_BOARD_ENCODER_2020
Def_stepCon.h (Ch_AS4\common_inc) line 382 : #if NEW_BOARD_ENCODER_2020
initSystemConfig_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5960 : 	#if NEW_BOARD_ENCODER_2020
MotorCtrl_task.c (Ch_AS4\apps_layer) line 989 : #if NEW_BOARD_ENCODER_2020
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1073 : #if NEW_BOARD_ENCODER_2020
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1287 : #if NEW_BOARD_ENCODER_2020
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1355 : #if NEW_BOARD_ENCODER_2020
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1418 : #if NEW_BOARD_ENCODER_2020
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1451 : #if NEW_BOARD_ENCODER_2020
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1501 : #if NEW_BOARD_ENCODER_2020
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1539 : #if NEW_BOARD_ENCODER_2020
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1602 : #if NEW_BOARD_ENCODER_2020
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1657 : #if NEW_BOARD_ENCODER_2020
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1694 : #if NEW_BOARD_ENCODER_2020
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1741 : #if NEW_BOARD_ENCODER_2020
goZ in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1778 : #if NEW_BOARD_ENCODER_2020
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1818 : #if NEW_BOARD_ENCODER_2020
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1851 : #if NEW_BOARD_ENCODER_2020
option_AS.h (Ch_AS4\ryu_inc) line 24 : #define NEW_BOARD_ENCODER_2020			1
option_AS.h (Ch_AS4\ryu_inc) line 25 : #if NEW_BOARD_ENCODER_2020
---- NEW_BOARD_ENCODER_2020 Matches (5 in 4 files) ----
ComType_AS.h (Ch_AS4\common_inc) line 333 : //#if NEW_BOARD_ENCODER_2020
define_AS.h (Ch_AS4\ryu_inc) line 39 : //	#if NEW_BOARD_ENCODER_2020
Def_stepCon.h (Ch_AS4\common_inc) line 139 : //#if NEW_BOARD_ENCODER_2020
option_AS.h (Ch_AS4\ryu_inc) line 24 : #define NEW_BOARD_ENCODER_2020			1
option_AS.h (Ch_AS4\ryu_inc) line 25 : //#if NEW_BOARD_ENCODER_2020
---- FPGA_VERSION_TRIM Matches (33 in 7 files) ----
ComType_AS.h (Ch_AS4\common_inc) line 360 : #if FPGA_VERSION_TRIM	
ComType_AS.h (Ch_AS4\common_inc) line 576 : #if	FPGA_VERSION_TRIM
define_AS.h (Ch_AS4\ryu_inc) line 234 : #if FPGA_VERSION_TRIM
Def_stepCon.h (Ch_AS4\common_inc) line 311 : #if FPGA_VERSION_TRIM
Def_stepCon.h (Ch_AS4\common_inc) line 352 : //#if FPGA_VERSION_TRIM
Def_stepCon.h (Ch_AS4\common_inc) line 406 : #if FPGA_VERSION_TRIM	
Def_stepCon.h (Ch_AS4\common_inc) line 756 : #if FPGA_VERSION_TRIM
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 301 : //#if FPGA_VERSION_TRIM
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 414 : //#if FPGA_VERSION_TRIM
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1577 : #if 0 // FPGA_VERSION_TRIM						
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2251 : #if 0 //FPGA_VERSION_TRIM					
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2347 : #if 0 //FPGA_VERSION_TRIM
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3662 : #if 0 //FPGA_VERSION_TRIM	
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 604 : #if FPGA_VERSION_TRIM
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 735 : #if FPGA_VERSION_TRIM
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2120 : #if FPGA_VERSION_TRIM
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2167 : #if FPGA_VERSION_TRIM
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2205 : #if FPGA_VERSION_TRIM
goVal in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2231 : #if FPGA_VERSION_TRIM
goVal_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2271 : #if FPGA_VERSION_TRIM
goVal_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2295 : #if FPGA_VERSION_TRIM
goInj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2322 : #if FPGA_VERSION_TRIM
goInj_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2361 : #if FPGA_VERSION_TRIM
goInj_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2385 : #if FPGA_VERSION_TRIM
initStepDataRam in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2410 : #if FPGA_VERSION_TRIM
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2441 : #if FPGA_VERSION_TRIM
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2504 : #if FPGA_VERSION_TRIM
initStepCtrlData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2524 : #if FPGA_VERSION_TRIM
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2582 : #if FPGA_VERSION_TRIM
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4921 : #if FPGA_VERSION_TRIM
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5179 : #if FPGA_VERSION_TRIM
MotorCtrl_task.h (Ch_AS4\inc) line 43 : #if FPGA_VERSION_TRIM
option_AS.h (Ch_AS4\ryu_inc) line 26 : 	#define FPGA_VERSION_TRIM			1
---- micro_pick_Injection in LcasAction_task.c (Ch_A... Matches (0 in 0 files) ----
---- FPGA_VERSION_TRIM Matches (21 in 4 files) ----
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3635 : #if 0 //FPGA_VERSION_TRIM	
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 604 : #if FPGA_VERSION_TRIM
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 735 : #if FPGA_VERSION_TRIM
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2120 : #if FPGA_VERSION_TRIM
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2167 : #if FPGA_VERSION_TRIM
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2205 : #if FPGA_VERSION_TRIM
goVal in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2231 : #if FPGA_VERSION_TRIM
goVal_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2271 : #if FPGA_VERSION_TRIM
goVal_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2295 : #if FPGA_VERSION_TRIM
goInj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2322 : #if FPGA_VERSION_TRIM
goInj_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2361 : #if FPGA_VERSION_TRIM
goInj_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2385 : #if FPGA_VERSION_TRIM
initStepDataRam in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2410 : #if FPGA_VERSION_TRIM
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2441 : #if FPGA_VERSION_TRIM
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2504 : #if FPGA_VERSION_TRIM
initStepCtrlData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2524 : #if FPGA_VERSION_TRIM
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2582 : #if FPGA_VERSION_TRIM
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4921 : #if FPGA_VERSION_TRIM
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5179 : #if FPGA_VERSION_TRIM
MotorCtrl_task.h (Ch_AS4\inc) line 43 : #if FPGA_VERSION_TRIM
option_AS.h (Ch_AS4\ryu_inc) line 26 : 	#define FPGA_VERSION_TRIM			1
---- FPGA_VERSION_TRIM Matches (9 in 3 files) ----
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 734 : #if FPGA_VERSION_TRIM
initStepDataRam in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2361 : #if FPGA_VERSION_TRIM
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2438 : #if FPGA_VERSION_TRIM
initStepCtrlData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2458 : #if FPGA_VERSION_TRIM
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2516 : #if FPGA_VERSION_TRIM
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4855 : #if FPGA_VERSION_TRIM
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5113 : #if FPGA_VERSION_TRIM
MotorCtrl_task.h (Ch_AS4\inc) line 43 : #if FPGA_VERSION_TRIM
option_AS.h (Ch_AS4\ryu_inc) line 26 : 	#define FPGA_VERSION_TRIM			1
---- CtrlCmd_SelMotor_X Matches (1 in 1 files) ----
MotorCtrl_task.h (Ch_AS4\inc) line 43 : #define CtrlCmd_SelMotor_X()  *((uint32_t volatile *)(CTRL_PORT_ADDR_MOTOR_X)) = ctrlCmd;
---- FPGA_VERSION_TRIM Matches (3 in 2 files) ----
initStepDataRam in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2358 : #if FPGA_VERSION_TRIM
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2435 : #if FPGA_VERSION_TRIM
option_AS.h (Ch_AS4\ryu_inc) line 26 : 	#define FPGA_VERSION_TRIM			1
---- FPGA_VERSION_TRIM Matches (2 in 2 files) ----
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2434 : #if 1// FPGA_VERSION_TRIM
option_AS.h (Ch_AS4\ryu_inc) line 26 : 	#define FPGA_VERSION_TRIM			1
---- FPGA_VERSION_TRIM Matches (2 in 2 files) ----
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2434 : #if 1// FPGA_VERSION_TRIM
option_AS.h (Ch_AS4\ryu_inc) line 26 : 	#define FPGA_VERSION_TRIM			1
---- NEW_BOARD_ENCODER_2020 Matches (5 in 4 files) ----
ComType_AS.h (Ch_AS4\common_inc) line 333 : //#if NEW_BOARD_ENCODER_2020
define_AS.h (Ch_AS4\ryu_inc) line 39 : //	#if NEW_BOARD_ENCODER_2020
Def_stepCon.h (Ch_AS4\common_inc) line 139 : //#if NEW_BOARD_ENCODER_2020
option_AS.h (Ch_AS4\ryu_inc) line 24 : #define NEW_BOARD_ENCODER_2020			1
option_AS.h (Ch_AS4\ryu_inc) line 25 : //#if NEW_BOARD_ENCODER_2020
---- errorEncoder Matches (11 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 350 : 	#define errorEncoder(WHO)			errorFunction(SELF_ERROR_ENCODER_COUNT + WHO)
Def_stepCon.h (Ch_AS4\common_inc) line 364 : 			if(ENCODER_CHECK_X) {	errorEncoder(MOTOR_X); } \
Def_stepCon.h (Ch_AS4\common_inc) line 372 : 			if(ENCODER_CHECK_Y) {	errorEncoder(MOTOR_Y); } \
Def_stepCon.h (Ch_AS4\common_inc) line 381 : 			if(ENCODER_CHECK_Z) {	errorEncoder(MOTOR_Z); } \
Def_stepCon.h (Ch_AS4\common_inc) line 399 : 			if(ENCODER_CHECK_SYR) {	errorEncoder(MOTOR_SYR); } \
Def_stepCon.h (Ch_AS4\common_inc) line 408 : 			if(readCount < ERR_ENCODER_COUNT_VAL)	{	errorEncoder(MOTOR_VAL);} \
Def_stepCon.h (Ch_AS4\common_inc) line 418 : 			if(readCount < ERR_ENCODER_COUNT_INJ) {	errorEncoder(MOTOR_INJ);} \
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 850 : 						errorEncoder(MOTOR_X);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 910 : 						errorEncoder(MOTOR_Y);
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 965 : 						errorEncoder(MOTOR_Z);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1145 : //							errorEncoder(MOTOR_Z);
---- goPosETC_Z_check Matches (6 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 66 : // goPosETC_Z_check() 수정 - error_16
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1926 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos)
MotorCtrl_task.h (Ch_AS4\inc) line 30 : #define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 31 : #define goPosWastePort()		goPosETC_Z_check(POS_XY_WASTE, POS_Z_WASTE, POS_Z_WASTE_DETECT, POS_Z_WASTE_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 35 : #define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 91 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos);
---- goPosInjection Matches (8 in 2 files) ----
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 240 : 					if(goPosInjection()) {
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1660 : 						if(goPosInjection()) {		
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1978 : 							if(goPosInjection()) {		
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2405 : 						if(goPosInjection()) {		
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2681 : 						if(goPosInjection()) {		
MotorCtrl_task.h (Ch_AS4\inc) line 34 : //#define goPosInjection()		goPosETC_Z_check_inj(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 35 : #define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 37 : #define goPosInjection()		goPosETC_Z_check_inj(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT)
---- GO_POS_ETC_USE Matches (2 in 2 files) ----
MotorCtrl_task.h (Ch_AS4\inc) line 33 : #if GO_POS_ETC_USE
option_AS.h (Ch_AS4\ryu_inc) line 31 : 		#define GO_POS_ETC_USE					1
---- washing Matches (16 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 278 : // washing 할 때 사용
Def_stepCon.h (Ch_AS4\common_inc) line 529 : #define COORD_Y_INJECTOR			148.5				// washing port가 원점
LcasAction_task.c (Ch_AS4\apps_layer) line 164 : // 3.	Valve	washing	port
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 260 : 			// 3.	Valve	washing	port
LcasAction_task.c (Ch_AS4\apps_layer) line 474 : // 3.	Valve	washing	port
LcasAction_task.c (Ch_AS4\apps_layer) line 1355 : // syringe 와	needle tubing에는	washing(혹은 이동상)이 차있는	상태로 가정
LcasAction_task.c (Ch_AS4\apps_layer) line 1358 : // valve - washing port	(POS_VAL_WASHING)
LcasAction_task.c (Ch_AS4\apps_layer) line 1376 : // washing
LcasAction_task.c (Ch_AS4\apps_layer) line 1377 : // valve - washing port
LcasAction_task.c (Ch_AS4\apps_layer) line 2114 : // syringe 와	needle tubing에는	washing(혹은 이동상)이 차있는	상태로 가정
LcasAction_task.c (Ch_AS4\apps_layer) line 2116 : // Valve : washing port
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3586 : 				case 2:	// before washing
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3820 : 				case 12:	// after washing
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3876 : 		case 2:	// before washing
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4099 : 		case 22:	// after washing
testPrgm.c (Ch_AS4\apps_layer) line 1284 : // ccw - washing poirt
---- Washing Matches (28 in 7 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 388 : // Washing 삭제
Def_stepCon.h (Ch_AS4\common_inc) line 500 : // Washing port를 영점으로 함.
LcasAction_task.c (Ch_AS4\apps_layer) line 177 : int	Washing(int	repeat,	int	*curRepeat,	int	port)
LcasAction_task.c (Ch_AS4\apps_layer) line 2161 : 	1. Valve : Washing Port
mix_ProgramNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3465 : // 6.	Washing
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3587 : 					if(Washing(runSetup.washNeedleBeforeInj,	&(devState.curNdlWashBeforeCnt), WASH_NEEDLE_ALL)) {
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3821 : 					if(Washing(runSetup.washNeedleAfterInj, &(devState.curNdlWashAfterCnt), WASH_NEEDLE_ALL)) {
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3877 : 			if(Washing(runSetup.washNeedleBeforeInj,	&(devState.curNdlWashBeforeCnt), WASH_NEEDLE_ALL)) {
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4100 : 			if(Washing(runSetup.washNeedleAfterInj, &(devState.curNdlWashAfterCnt), WASH_NEEDLE_ALL)) {
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4411 : 			if(Washing(WASH_TIMES_DEFAULT_INIT,	&(devState.curNdlWashAfterCnt),	WASH_NEEDLE_INT))	{
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4416 : 			if(Washing(WASH_TIMES_DEFAULT_INIT,	&(devState.curNdlWashAfterCnt),	WASH_NEEDLE_ALL))	{
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4421 : 			if(Washing(WASH_TIMES_DEFAULT_INIT,	&(devState.curNdlWashAfterCnt),	WASH_INJECTOR))	{
LcasAction_task.c (Ch_AS4\apps_layer) line 4588 : 					else if(Washing(runSetup.washNeedleBeforeInj,	&(devState.curNdlWashBeforeCnt), WASH_NEEDLE_ALL)) {
LcasAction_task.c (Ch_AS4\apps_layer) line 4594 : 					else if(Washing(runSetup.washInjportBeforeInj, &(devState.curInjWashBeforeCnt),	WASH_INJECTOR))	{
LcasAction_task.c (Ch_AS4\apps_layer) line 4657 : 						else if(Washing(runSetup.washNeedleAfterInj, &(devState.curNdlWashAfterCnt), WASH_NEEDLE_ALL)) {
LcasAction_task.c (Ch_AS4\apps_layer) line 4666 : 						else if(Washing(runSetup.washInjportAfterInj,	&(devState.curInjWashAfterCnt),	WASH_INJECTOR))	{
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5249 : 					if(Washing(devState.serviceWashCnt,	&(devState.curSvcWashCnt),	WASH_NEEDLE_INT))	{
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5255 : 					if(Washing(devState.serviceWashCnt,	&(devState.curSvcWashCnt),	WASH_NEEDLE_INT))	{
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5261 : 					if(Washing(devState.serviceWashCnt,	&(devState.curSvcWashCnt),	WASH_NEEDLE_ALL))	{
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5266 : 					if(Washing(devState.serviceWashCnt,	&(devState.curSvcWashCnt),	WASH_INJECTOR))	{
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5272 : 					if(Washing(devState.serviceWashCnt,	&(devState.curSvcWashCnt),	WASH_NEEDLE_INT))	{
LcasAction_task.h (Ch_AS4\inc) line 32 : int Washing(int repeat, int *curRepeat, int port);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2492 : // Valve Home : Washing port 와 Syringe 연결 위치
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2498 : // Valve : Washing Port
option_AS.h (Ch_AS4\ryu_inc) line 42 : // Washing 삭제
protocolType_AS.h (Ch_AS4\common_inc) line 535 : #define	STATE_SERVICE_WASH		6			// 사용자가 임의로 Washing 명령을 줄때 - 사용자가 세척 명령을 보냄.
protocolType_AS.h (Ch_AS4\common_inc) line 636 : 	#define ADJUST_WASTE_PORT						6				// : x,y  -- Washing Port와 동일
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1441 : // Washing : CCW
---- motorWakeupCmd Matches (2 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 314 : 	#define motorWakeupCmd(WHO)	 				motorReadyCmd(WHO)
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 196 : 			if(sleepChkVal(MOTOR_VAL)) { motorWakeupCmd(MOTOR_VAL);}
---- readCount Matches (100 in 4 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 339 : //	#define ENCODER_CHECK					(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT)
Def_stepCon.h (Ch_AS4\common_inc) line 341 : 	#define ENCODER_CHECK_Z				(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_Z)
Def_stepCon.h (Ch_AS4\common_inc) line 342 : 	#define ENCODER_CHECK_X				(encoderCountCheck(encoderCount_X,readCount) > ERR_ENCODER_COUNT_X)
Def_stepCon.h (Ch_AS4\common_inc) line 343 : 	#define ENCODER_CHECK_Y				(encoderCountCheck(encoderCount_Y,readCount) > ERR_ENCODER_COUNT_Y)		
Def_stepCon.h (Ch_AS4\common_inc) line 345 : 	#define ENCODER_CHECK_SYR			(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_SYR)
Def_stepCon.h (Ch_AS4\common_inc) line 347 : //		#define ENCODER_CHECK_VAL			(readCount < ERR_ENCODER_COUNT_VAL)	
Def_stepCon.h (Ch_AS4\common_inc) line 348 : //		#define ENCODER_CHECK_INJ			(readCount < ERR_ENCODER_COUNT_INJ)
Def_stepCon.h (Ch_AS4\common_inc) line 360 : 			readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_X_Z)); \
Def_stepCon.h (Ch_AS4\common_inc) line 361 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 362 : dfp("======  X  readCount=[%d] [%d]\n", readCount , encoderCount_X); \
Def_stepCon.h (Ch_AS4\common_inc) line 368 : 			readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_Y_SYR)); \
Def_stepCon.h (Ch_AS4\common_inc) line 369 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 370 : dfp("======  Y  readCount=[%d] [%d]\n", readCount , encoderCount_Y); \
Def_stepCon.h (Ch_AS4\common_inc) line 377 : 			readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_X_Z)); \
Def_stepCon.h (Ch_AS4\common_inc) line 378 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 379 : dfp("======  Z  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 395 : 			readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_Y_SYR)); \
Def_stepCon.h (Ch_AS4\common_inc) line 396 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 397 : dfp("xxxxxxxxxxxxx======  Syringe  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 404 : 			readCount	= *((uint32_t volatile *)(BASEADDR_MOTOR_VAL_INJ)); \
Def_stepCon.h (Ch_AS4\common_inc) line 405 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 406 : dfp("======  Valve  readCount=[%d]\n", readCount ); \
Def_stepCon.h (Ch_AS4\common_inc) line 408 : 			if(readCount < ERR_ENCODER_COUNT_VAL)	{	errorEncoder(MOTOR_VAL);} \
Def_stepCon.h (Ch_AS4\common_inc) line 414 : 			readCount	= *((uint32_t volatile *)(BASEADDR_MOTOR_VAL_INJ)); \
Def_stepCon.h (Ch_AS4\common_inc) line 415 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 416 : dfp("======  Injector  readCount=[%d] \n", readCount ); \
Def_stepCon.h (Ch_AS4\common_inc) line 418 : 			if(readCount < ERR_ENCODER_COUNT_INJ) {	errorEncoder(MOTOR_INJ);} \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 179 : 	int32_t	readCount=0;
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 267 : dp("xxxx   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 270 : readCount	= *((uint32_t volatile *)(BASEADDR_MOTOR_VAL_INJ)); 
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 271 : //readCount = (readCount >> 8) & 0x3ff; 
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 272 : readCount = (readCount >> 8);//  & 0x3ff; 
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 273 : //dfpErr("======  Valve  readCount=[0x%0x]\n", readCount ); 
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 289 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 302 : dp("xxxx-   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 316 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 401 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 414 : dp("xxxx-   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 429 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 490 : 	int32_t	readCount=0;
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1171 : 	int32_t	readCount=0;
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1429 : 	int32_t	readCount=0;
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1783 : 	int32_t	readCount=0;
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2190 : 	int32_t	readCount=0;
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3559 : 	int32_t	readCount=0;
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3846 : 	int32_t	readCount=0;
LcasAction_task.c (Ch_AS4\apps_layer) line 6517 : int encoderCountCheck(int encoderCount, int readCount) 
encoderCountCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6519 : 	if(encoderCount > readCount) {
encoderCountCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6520 : 		return (encoderCount - readCount);
encoderCountCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6523 : 		return (readCount - encoderCount);
LcasAction_task.h (Ch_AS4\inc) line 146 : int encoderCountCheck(int encoderCount, int readCount);
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 810 : 	int32_t	readCount=0;
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 870 : 	int32_t	readCount=0;
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 932 : 	int32_t	readCount=0;
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 988 : 	int32_t	readCount=0;
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 990 : 	readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_X_Z));
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 991 : 	readCount = (readCount >> 8) & 0x3ff;
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 993 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 997 : 	count = encoderCount - readCount;
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1010 : 	int32_t	readCount=0;
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1012 : 	readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_Y_SYR));
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1013 : 	readCount = (readCount >> 8) & 0x3ff;
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1015 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1019 : 	count = encoderCount - readCount;
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1032 : 	int32_t	readCount=0;
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1034 : 	readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_X_Z));
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1035 : 	readCount = (readCount >> 8) & 0x3ff;
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1037 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1041 : 	count = encoderCount - readCount;
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1175 : 	int32_t	readCount=0;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1516 : 	int32_t	readCount=0;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1594 : 	int32_t	readCount=0;
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1747 : 	int32_t	readCount=0;
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1829 : 	int32_t	readCount=0;
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1929 : 	int32_t	readCount=0;
---- Y_ENCODER_CHECK_ERR_MODIFY Matches (2 in 2 files) ----
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1949 : //#if Y_ENCODER_CHECK_ERR_MODIFY
option_AS.h (Ch_AS4\ryu_inc) line 280 : #define Y_ENCODER_CHECK_ERR_MODIFY			1
---- CHECK_POSITION_MODIFY Matches (3 in 2 files) ----
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4964 : #if CHECK_POSITION_MODIFY	
option_AS.h (Ch_AS4\ryu_inc) line 282 : #define CHECK_POSITION_MODIFY			1		// 에러발생시 checkPosition() 재실행
option_AS.h (Ch_AS4\ryu_inc) line 283 : #if CHECK_POSITION_MODIFY
---- ChkEncoder_X Matches (4 in 2 files) ----
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 845 : 				if(ChkEncoder_X(encoderCount)) { // ok
MotorCtrl_task.c (Ch_AS4\apps_layer) line 985 : int ChkEncoder_X(int encoderCount)
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1065 : 				if(ChkEncoder_X(encoderCount)) {
MotorCtrl_task.h (Ch_AS4\inc) line 134 : int ChkEncoder_X(int encoderCount);
---- readyChkRetry_X Matches (5 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1051 : int readyChkRetry_X(int encoderCount)
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1213 : 			if(readyChkRetry_X(encoderCount_X)) {
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1886 : 			if(readyChkRetry_X(encoderCount_X)) {
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1995 : 			if(readyChkRetry_X(encoderCount_X)) {
MotorCtrl_task.h (Ch_AS4\inc) line 138 : int readyChkRetry_X(int encoderCount);
---- goPosETC_Z Matches (14 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 933 : //			if(goPosETC_Z(POS_XY_HOME,POS_Z_TOP))	{	++subMenu_ghcx; }
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1826 : int goPosETC_Z(int32_t xy_pos, int32_t z_pos)//, uint32_t z_option)
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3899 : 					if(goPosETC_Z(POS_XY_INJECTOR, POS_Z_INJECTOR_TOP_ADJUST)) {	// 맨처음 제품					
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3904 : //					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_INJECTOR_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3905 : 					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_NEEDLE_DEPTH_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3910 : 					if(goPosETC_Z(POS_XY_WASTE, POS_Z_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3927 : 					if(goPosETC_Z(POS_XY_WASH, POS_Z_WASH_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3932 : 					if(goPosETC_Z(POS_XY_WASTE, POS_Z_WASH_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3961 : //					if(goPosETC_Z(POS_XY_INJECTOR, POS_Z_VIAL_HEIGHT_ADJUST)) {					
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3962 : 					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_VIAL_HEIGHT_ADJUST)) {					
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4014 : 			if(goPosETC_Z(POS_XY_WASTE, POS_Z_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4031 : 			if(goPosETC_Z(POS_XY_WASTE, POS_Z_TOP)) {
MotorCtrl_task.h (Ch_AS4\inc) line 37 : #define goPosHome()				goPosETC_Z(POS_XY_HOME,POS_Z_TOP)
MotorCtrl_task.h (Ch_AS4\inc) line 87 : int goPosETC_Z(int32_t xy_pos, int32_t z_pos);//, uint32_t z_option)
---- CMD_WAKEUP Matches (3 in 1 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 103 : //#define CMD_WAKEUP			0x40 // 64
Def_stepCon.h (Ch_AS4\common_inc) line 104 : #define CMD_WAKEUP			0x80
Def_stepCon.h (Ch_AS4\common_inc) line 312 : 	#define motorReadyCmd(WHO)	 				{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_WAKEUP); }
---- motorReadyCmd Matches (70 in 5 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 312 : 	#define motorReadyCmd(WHO)	 				{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_WAKEUP); }
Def_stepCon.h (Ch_AS4\common_inc) line 314 : 	#define motorWakeupCmd(WHO)	 				motorReadyCmd(WHO)
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 195 : //			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 197 : 			if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 529 : 			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 672 : 			if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 679 : 			if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 686 : 			if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 693 : 			if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1451 : 						if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1452 : 						if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1805 : 						if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1806 : 						if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2217 : 					if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2218 : 					if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2538 : 						if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2539 : 						if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3592 : 					 if(sleepChkVal(MOTOR_VAL))	{	motorReadyCmd(MOTOR_VAL);}
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3882 : 			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2440 : 	motorReadyCmd(MOTOR_X);
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2441 : 	motorReadyCmd(MOTOR_Y);
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2442 : 	motorReadyCmd(MOTOR_Z);
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2443 : 	motorReadyCmd(MOTOR_SYR);
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2444 : 	motorReadyCmd(MOTOR_VAL);
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2445 : 	motorReadyCmd(MOTOR_INJ);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2528 : 			if(sleepChkVal(MOTOR_VAL)) {motorReadyCmd(MOTOR_VAL);}
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2550 : //				motorReadyCmd(MOTOR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2595 : 				motorReadyCmd(MOTOR_VAL);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2672 : 			if(sleepChkVal(MOTOR_INJ)) {motorReadyCmd(MOTOR_INJ);}
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2736 : 				motorReadyCmd(MOTOR_INJ);		
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2867 : 				motorReadyCmd(MOTOR_SYR);		
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3043 : // 2. 홈위치찾은후 - motorReadyCmd() : Reset
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3046 : // 4. motorReadyCmd() : motor초기화 Reset
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3702 : 				motorReadyCmd(MOTOR_VAL);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3705 : 				motorReadyCmd(MOTOR_INJ);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3728 : 				motorReadyCmd(MOTOR_Z);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3746 : 				motorReadyCmd(MOTOR_X);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3763 : 				motorReadyCmd(MOTOR_Y);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3783 : 				motorReadyCmd(MOTOR_SYR);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3802 : 				motorReadyCmd(MOTOR_SYR);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3916 : 						motorReadyCmd(MOTOR_VAL);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3922 : 						motorReadyCmd(MOTOR_INJ);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4043 : 				motorReadyCmd(MOTOR_VAL);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4050 : 					motorReadyCmd(MOTOR_INJ);
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4165 : 				motorReadyCmd(MOTOR_VAL);
option_AS.h (Ch_AS4\ryu_inc) line 27 : 		#define FPGA_VERSION_TRIM_BREAK			1				// motorResetCmd   or   motorReadyCmd
testPrgm.c (Ch_AS4\apps_layer) line 792 : 						motorReadyCmd(MOTOR_VAL);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1003 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1025 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1047 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1068 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1090 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1111 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1132 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1153 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1175 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1197 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1218 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1239 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1450 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1474 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1497 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1521 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1544 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1565 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1586 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1607 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1741 : 				motorReadyCmd(MOTOR_VAL);		
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1764 : 			if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2096 : 			motorReadyCmd(i);
---- motorResetCmd Matches (31 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 311 : 	#define motorResetCmd(WHO)	 				{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_RESET); }
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2420 : 	motorResetCmd(MOTOR_X);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2421 : 	motorResetCmd(MOTOR_Y);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2422 : 	motorResetCmd(MOTOR_Z);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2423 : 	motorResetCmd(MOTOR_SYR);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2424 : 	motorResetCmd(MOTOR_VAL);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2425 : 	motorResetCmd(MOTOR_INJ);
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2433 : 	motorResetCmd(MOTOR_X);
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2434 : 	motorResetCmd(MOTOR_Y);
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2435 : 	motorResetCmd(MOTOR_Z);
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2436 : 	motorResetCmd(MOTOR_SYR);
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2437 : 	motorResetCmd(MOTOR_VAL);
motorReadyAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2438 : 	motorResetCmd(MOTOR_INJ);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2548 : 				motorResetCmd(MOTOR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2575 : 				motorResetCmd(MOTOR_VAL);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2691 : 				motorResetCmd(MOTOR_INJ);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2716 : 				motorResetCmd(MOTOR_INJ);		
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2850 : 				motorResetCmd(MOTOR_SYR);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2969 : 					motorResetCmd(MOTOR_Z);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2996 : 				motorResetCmd(MOTOR_Z);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3125 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3165 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3263 : 					motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3295 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3394 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3433 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3508 : 					motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3538 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3631 : 					motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3661 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
option_AS.h (Ch_AS4\ryu_inc) line 27 : 		#define FPGA_VERSION_TRIM_BREAK			1				// motorResetCmd   or   motorReadyCmd
---- motorResetAll Matches (6 in 3 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2416 : void motorResetAll()	// 
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4805 : //motorResetAll();
MotorCtrl_task.h (Ch_AS4\inc) line 99 : void motorResetAll();
commandStopFn in net_AS.c (Ch_AS4\apps_layer) line 1585 : 	motorResetAll();
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1782 : 				motorResetAll();
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3512 : 			motorResetAll();
---- motorReadyAll Matches (3 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2428 : void motorReadyAll()	// 
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4804 : //motorReadyAll();
MotorCtrl_task.h (Ch_AS4\inc) line 100 : void motorReadyAll();
---- motorResetCmd Matches (25 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 311 : 	#define motorResetCmd(WHO)	 				{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_RESET); }
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2420 : 	motorResetCmd(MOTOR_X);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2421 : 	motorResetCmd(MOTOR_Y);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2422 : 	motorResetCmd(MOTOR_Z);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2423 : 	motorResetCmd(MOTOR_SYR);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2424 : 	motorResetCmd(MOTOR_VAL);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2425 : 	motorResetCmd(MOTOR_INJ);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2527 : 				motorResetCmd(MOTOR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2554 : 				motorResetCmd(MOTOR_VAL);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2670 : 				motorResetCmd(MOTOR_INJ);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2695 : 				motorResetCmd(MOTOR_INJ);		
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2829 : 				motorResetCmd(MOTOR_SYR);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2948 : 					motorResetCmd(MOTOR_Z);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2975 : 				motorResetCmd(MOTOR_Z);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3104 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3144 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3242 : 					motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3274 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3373 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3412 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3487 : 					motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3517 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3610 : 					motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3640 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
option_AS.h (Ch_AS4\ryu_inc) line 27 : 		#define FPGA_VERSION_TRIM_BREAK			1				// motorResetCmd   or   motorReadyCmd
---- FPGA_VERSION_TRIM_BREAK Matches (2 in 2 files) ----
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2526 : //#if FPGA_VERSION_TRIM_BREAK
option_AS.h (Ch_AS4\ryu_inc) line 27 : 		#define FPGA_VERSION_TRIM_BREAK			1				// motorResetCmd   or   motorReadyCmd
---- FPGA_VERSION_TRIM_BREAK Matches (1 in 1 files) ----
option_AS.h (Ch_AS4\ryu_inc) line 27 : //		#define FPGA_VERSION_TRIM_BREAK			1				// motorResetCmd   or   motorReadyCmd
---- motorResetAll Matches (6 in 3 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2416 : void motorResetAll()	// 
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4779 : //motorResetAll();
MotorCtrl_task.h (Ch_AS4\inc) line 99 : void motorResetAll();
commandStopFn in net_AS.c (Ch_AS4\apps_layer) line 1585 : 	motorResetAll();
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1782 : 				motorResetAll();
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3512 : 			motorResetAll();
---- motorReadyCmd Matches (63 in 5 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 316 : 	#define motorReadyCmd(WHO)	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_WAKEUP); }
Def_stepCon.h (Ch_AS4\common_inc) line 318 : 	#define motorWakeupCmd(WHO)			motorReadyCmd(WHO)
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 195 : //			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 197 : 			if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 529 : 			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 672 : 			if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 679 : 			if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 686 : 			if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 693 : 			if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1451 : 						if(sleepChkVal(MOTOR_VAL)) { motor ReadyCmd(MOTOR_VAL);}
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1452 : 						if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1805 : 						if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1806 : 						if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2217 : 					if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2218 : 					if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2538 : 						if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2539 : 						if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3592 : 					 if(sleepChkVal(MOTOR_VAL))	{	motorReadyCmd(MOTOR_VAL);}
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3882 : 			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2507 : 			if(sleepChkVal(MOTOR_VAL)) {motorReadyCmd(MOTOR_VAL);}
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2570 : 				motorReadyCmd(MOTOR_VAL);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2647 : 			if(sleepChkVal(MOTOR_INJ)) {motorReadyCmd(MOTOR_INJ);}
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2711 : 				motorReadyCmd(MOTOR_INJ);		
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2842 : 				motorReadyCmd(MOTOR_SYR);		
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3018 : // 2. 홈위치찾은후 - motorReadyCmd() : Reset
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3021 : // 4. motorReadyCmd() : motor초기화 Reset
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3677 : 				motorReadyCmd(MOTOR_VAL);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3680 : 				motorReadyCmd(MOTOR_INJ);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3703 : 				motorReadyCmd(MOTOR_Z);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3721 : 				motorReadyCmd(MOTOR_X);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3738 : 				motorReadyCmd(MOTOR_Y);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3758 : 				motorReadyCmd(MOTOR_SYR);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3777 : 				motorReadyCmd(MOTOR_SYR);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3891 : 						motorReadyCmd(MOTOR_VAL);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3897 : 						motorReadyCmd(MOTOR_INJ);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4018 : 				motorReadyCmd(MOTOR_VAL);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4025 : 					motorReadyCmd(MOTOR_INJ);
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4140 : 				motorReadyCmd(MOTOR_VAL);
option_AS.h (Ch_AS4\ryu_inc) line 27 : //		#define FPGA_VERSION_TRIM_BREAK			1				// motorResetCmd   or   motorReadyCmd
testPrgm.c (Ch_AS4\apps_layer) line 792 : 						motorReadyCmd(MOTOR_VAL);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1003 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1025 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1047 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1068 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1090 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1111 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1132 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1153 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1175 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1197 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1218 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1239 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1450 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1474 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1497 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1521 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1544 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1565 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1586 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1607 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1741 : 				motorReadyCmd(MOTOR_VAL);		
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1764 : 			if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2096 : 			motorReadyCmd(i);
---- endSequence Matches (3 in 2 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 488 : int	endSequence()
LcasAction_task.c (Ch_AS4\apps_layer) line 4769 : 					if(endSequence())	{
LcasAction_task.h (Ch_AS4\inc) line 34 : int endSequence();	// 현재실행중인 시퀀스가 끝났다.
---- WASH_BETWEEN_VIALS_BEFORE_FIX Matches (6 in 2 files) ----
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 504 : #if WASH_BETWEEN_VIALS_BEFORE_FIX
LcasAction_task.c (Ch_AS4\apps_layer) line 4573 : #if WASH_BETWEEN_VIALS_BEFORE_FIX					
LcasAction_task.c (Ch_AS4\apps_layer) line 4614 : #if  WASH_BETWEEN_VIALS_BEFORE_FIX				
LcasAction_task.c (Ch_AS4\apps_layer) line 4635 : #if WASH_BETWEEN_VIALS_BEFORE_FIX										
LcasAction_task.c (Ch_AS4\apps_layer) line 4645 : #if WASH_BETWEEN_VIALS_BEFORE_FIX										
option_AS.h (Ch_AS4\ryu_inc) line 54 : #define WASH_BETWEEN_VIALS_BEFORE_FIX				1
---- WASH_BETWEEN_VIALS_BEFORE_FIX Matches (1 in 1 files) ----
option_AS.h (Ch_AS4\ryu_inc) line 54 : #define WASH_BETWEEN_VIALS_BEFORE_FIX				1
---- motorWakeupCmd Matches (2 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 317 : 	#define motorWakeupCmd(WHO)			motorReadyCmd(WHO)
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 196 : //			if(sleepChkVal(MOTOR_VAL)) { motorWakeupCmd(MOTOR_VAL);}
---- breakChk Matches (5 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 320 : 	#define breakChk(A) 		((devState.btMotorState[(A)] & STEP_STATECHK_FLAG) == STEP_STATE5_BREAK)
Def_stepCon.h (Ch_AS4\common_inc) line 325 : 	#define breakChkVal(A) 			breakChk(A)
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2824 : 			if(homeChkEnd(MOTOR_SYR)) { // breakChk(Z)
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2941 : 			if(homeChkEnd(MOTOR_Z)) { // breakChk(Z)
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2970 : 			if(homeChkEnd(MOTOR_Z)) { // breakChk(Z)
---- ENCODER_CHECK_SYR Matches (2 in 1 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 348 : 	#define ENCODER_CHECK_SYR			(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_SYR)
Def_stepCon.h (Ch_AS4\common_inc) line 402 : 			if(ENCODER_CHECK_SYR) {	errorEncoder(MOTOR_SYR); } \
---- motorSleepCmd Matches (35 in 4 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 316 : 	#define motorSleepCmd(WHO , DIR) 	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (DIR | CMD_SLEEP); }
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 368 : 				motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 369 : 				motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 450 : 				motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 451 : 				motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 577 : 			motorSleepCmd(MOTOR_X	,	HOME_DIR_X);			motorSleepCmd(MOTOR_Y	,	HOME_DIR_Y);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 578 : 			motorSleepCmd(MOTOR_Z	,	HOME_DIR_Z);			motorSleepCmd(MOTOR_SYR	,	HOME_DIR_SYR);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 579 : 			motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);			motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 618 : 			motorSleepCmd(MOTOR_X	,	HOME_DIR_X);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 619 : 			motorSleepCmd(MOTOR_Y	,	HOME_DIR_Y);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 620 : 			motorSleepCmd(MOTOR_Z	,	HOME_DIR_Z);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 622 : 			motorSleepCmd(MOTOR_SYR	,	HOME_DIR_SYR);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 624 : 			motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 625 : 			motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
LcasAction_task.c (Ch_AS4\apps_layer) line 4645 : //						motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
LcasAction_task.c (Ch_AS4\apps_layer) line 4646 : //						motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2398 : 	motorSleepCmd(MOTOR_X , 	devState.curDir[MOTOR_X]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2399 : 	motorSleepCmd(MOTOR_Y , 	devState.curDir[MOTOR_Y]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2400 : 	motorSleepCmd(MOTOR_Z , 	devState.curDir[MOTOR_Z]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2401 : 	motorSleepCmd(MOTOR_SYR , 	devState.curDir[MOTOR_SYR]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2402 : 	motorSleepCmd(MOTOR_VAL , 	devState.curDir[MOTOR_VAL]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2403 : 	motorSleepCmd(MOTOR_INJ , 	devState.curDir[MOTOR_INJ]);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2564 : 				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2597 : //				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2599 : 				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2705 : 				motorSleepCmd(MOTOR_INJ , HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2751 : //				motorSleepCmd(MOTOR_INJ , HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2753 : //				motorSleepCmd(MOTOR_INJ , R_HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2755 : 				motorSleepCmd(MOTOR_INJ , R_HOME_DIR_INJ);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2836 : 				motorSleepCmd(MOTOR_SYR , HOME_DIR_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2871 : //					motorSleepCmd(MOTOR_SYR , HOME_DIR_SYR);
motorControlWho in testPrgm.c (Ch_AS4\apps_layer) line 2054 : 				motorSleepCmd(who , MotorCtrlSet.bDir[who]);
---- sleepModeAll Matches (13 in 4 files) ----
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 551 : 			if(sleepModeAll()) {
LcasAction_task.c (Ch_AS4\apps_layer) line 561 : int sleepModeAll()
stateChange in LcasAction_task.c (Ch_AS4\apps_layer) line 893 : 				//sleepModeAll();
mix_waitPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4159 : 			if(sleepModeAll()) subMenu_mwp++;
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4421 : 			if(sleepModeAll()) {
LcasAction_task.c (Ch_AS4\apps_layer) line 4639 : 						if(sleepModeAll()) {
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 5143 : 			if(sleepModeAll()) {
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5241 : 					if(sleepModeAll()) {
LcasAction_task.h (Ch_AS4\inc) line 36 : int	sleepModeAll();
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4807 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1692 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1720 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1750 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
---- FPGA_VERSION_TRIM_ADJUST_SLEEP Matches (2 in 2 files) ----
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 5141 : #if FPGA_VERSION_TRIM_ADJUST_SLEEP
option_AS.h (Ch_AS4\ryu_inc) line 29 : 		#define FPGA_VERSION_TRIM_ADJUST_SLEEP		1			// AS_ADJUST_MODE_SLEEP
---- AS_SERVICE_WASH_WASTE Matches (3 in 2 files) ----
ComType_AS.h (Ch_AS4\common_inc) line 260 : //	#define AS_SERVICE_WASH_WASTE				(6)
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5188 : //								devState.actionSubmenu = AS_SERVICE_WASH_WASTE;
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5216 : 				case AS_SERVICE_WASH_WASTE:
---- AS_SERVICE_WASH_NEEDLE_EXT Matches (3 in 2 files) ----
ComType_AS.h (Ch_AS4\common_inc) line 257 : //	#define AS_SERVICE_WASH_NEEDLE_EXT	(3)
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5179 : //								devState.actionSubmenu = AS_SERVICE_WASH_NEEDLE_EXT;
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5196 : 				case AS_SERVICE_WASH_NEEDLE_EXT:
---- AS_SERVICE_WASH_NEEDLE_EXT Matches (1 in 1 files) ----
ComType_AS.h (Ch_AS4\common_inc) line 257 : //	#define AS_SERVICE_WASH_NEEDLE_EXT	(3)
---- actionStopFunction Matches (3 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 5219 : int actionStopFunction(int value) 
LcasAction_task.h (Ch_AS4\inc) line 104 : int actionStopFunction(int value);
main in main.c (Ch_AS4) line 338 : 	pAction_Fn[AS_ACTION_STOP_FUNCTION] = actionStopFunction;		// AS_ACTION_STOP_FUNCTION
---- CMD_CHK_DIR_RESET_X Matches (5 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 395 : 	#define CMD_CHK_DIR_RESET_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30C << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 443 : 	#define CMD_CHK_DIR_RESET_X
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3078 : CMD_CHK_DIR_RESET_X;
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3219 : CMD_CHK_DIR_RESET_X;
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3347 : CMD_CHK_DIR_RESET_X;
---- CMD_CHK_DIR_READY_X Matches (5 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 396 : 	#define CMD_CHK_DIR_READY_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30D << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 444 : 	#define CMD_CHK_DIR_READY_X
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3183 : 			CMD_CHK_DIR_READY_X;
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3307 : 			CMD_CHK_DIR_READY_X;
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3429 : 			CMD_CHK_DIR_READY_X;
---- CMD_CHK_DIR_START_X Matches (4 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 397 : 	#define CMD_CHK_DIR_START_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 445 : 	#define CMD_CHK_DIR_START_X
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1356 : 	CMD_CHK_DIR_START_X;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1427 : 		CMD_CHK_DIR_START_X;
---- baseAddr Matches (96 in 3 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 569 : 	unsigned int baseAddr[STEP_MOTOR_COUNT];
define_AS.h (Ch_AS4\ryu_inc) line 354 : 	#define CMD_CLR_STEP_COUNT(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x301 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 355 : 	#define CMD_EN_STEP_COUNT(WHO)	*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x302 << 2))) = 0x1
define_AS.h (Ch_AS4\ryu_inc) line 356 : 	#define CMD_DIS_STEP_COUNT(WHO)	*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x302 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 358 : 	#define READ_STEP_COUNT(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x1 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 377 : 	#define CMD_CHK_DIR_BASE(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x308 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 380 : 	#define CMD_CHK_DIR_RESET_Z 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x308 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 381 : 	#define CMD_CHK_DIR_READY_Z 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x309 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 382 : 	#define CMD_CHK_DIR_START_Z 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x30A << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 383 : 	#define CMD_CHK_DIR_ACT_END_Z 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x30B << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 387 : //	#define CMD_CHK_DIR_STATE_DIR_Z *((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x304 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 388 : 	#define CMD_CHK_DIR_OPTION_DIR_Z *((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x304 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 391 : #define READ_CHK_ZX		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x2 << 2)))		// 하위 [15:0]
define_AS.h (Ch_AS4\ryu_inc) line 392 : 	#define READ_CHK_DIR_Z		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x4 << 2))) 	// 하위 [15:0]
define_AS.h (Ch_AS4\ryu_inc) line 395 : 	#define CMD_CHK_DIR_RESET_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30C << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 396 : 	#define CMD_CHK_DIR_READY_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30D << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 397 : 	#define CMD_CHK_DIR_START_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 398 : 	#define CMD_CHK_DIR_ACT_END_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30F << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 400 : 	#define CMD_CHK_DIR_OPTION_DIR_X *((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x305 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 403 : 	#define READ_CHK_DIR_X		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x5 << 2)))		// 상위 [31:16]
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_RESET_Y 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x308 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 406 : 	#define CMD_CHK_DIR_READY_Y 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x309 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 407 : 	#define CMD_CHK_DIR_START_Y 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x30A << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 408 : 	#define CMD_CHK_DIR_ACT_END_Y 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x30B << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 410 : 	#define CMD_CHK_DIR_OPTION_DIR_Y	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x304 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 412 : #define READ_CHK_YS 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x2 << 2))) 	// 하위 [15:0]
define_AS.h (Ch_AS4\ryu_inc) line 413 : 	#define READ_CHK_DIR_Y		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x4 << 2)))		// 하위 [15:0]
define_AS.h (Ch_AS4\ryu_inc) line 415 : 	#define CMD_CHK_DIR_RESET_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30C << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 416 : 	#define CMD_CHK_DIR_READY_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30D << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 417 : 	#define CMD_CHK_DIR_START_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 418 : 	#define CMD_CHK_DIR_ACT_END_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30F << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 420 : 	#define CMD_CHK_DIR_OPTION_DIR_SYR *((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x305 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 422 : 	#define READ_CHK_DIR_SYR		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x5 << 2)))		// 상위 [31:16]
define_AS.h (Ch_AS4\ryu_inc) line 425 : 	#define CMD_CHK_DIR_RESET(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x308 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 427 : 	#define CMD_EN_STEP_COUNT(WHO)	*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x302 << 2))) = 0x1
define_AS.h (Ch_AS4\ryu_inc) line 428 : 	#define CMD_DIS_STEP_COUNT(WHO)	*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x302 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 430 : 	#define READ_STEP_COUNT(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x1 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 476 : //#define READ_CHK_DIR(WHO)		*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x4 << 2) + (((WHO) & 0x1) << 2))		// 상위 [31:16]
define_AS.h (Ch_AS4\ryu_inc) line 478 : //#define READ_CHK_DIR(WHO)		*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x4 + WHO) << 2)			// addr : x(4) , Y(5), z(6), Syr(7)
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 148 : 	uint32_t baseAddr = TWOPORTRAM_BASEADDR_MOTOR_X; // ????
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 151 : 		case MOTOR_X: 				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_X; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 152 : 		case MOTOR_Y:					baseAddr = TWOPORTRAM_BASEADDR_MOTOR_Y; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 153 : 		case MOTOR_Z:					baseAddr = TWOPORTRAM_BASEADDR_MOTOR_Z; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 154 : 		case MOTOR_SYR: 			baseAddr = TWOPORTRAM_BASEADDR_MOTOR_SYR; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 155 : 		case MOTOR_VAL:				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_VAL; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 156 : 		case MOTOR_INJ:				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_INJ; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 159 : //dp( "[%d] [%d] baseAddr = %x data = %d ) \n\r", who, addr, baseAddr,data);	
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 161 : //	*((uint32_t volatile *)(baseAddr + addr*4)) = data;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 162 : 	*((uint32_t volatile *) (baseAddr + (addr << 2))) = data;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 246 : uint32_t baseAddr;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 249 : 		case MOTOR_X: 				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_X; break;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 250 : 		case MOTOR_Y:					baseAddr = TWOPORTRAM_BASEADDR_MOTOR_Y; break;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 251 : 		case MOTOR_Z:					baseAddr = TWOPORTRAM_BASEADDR_MOTOR_Z; break;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 252 : 		case MOTOR_SYR: 			baseAddr = TWOPORTRAM_BASEADDR_MOTOR_SYR; break;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 253 : 		case MOTOR_VAL:				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_VAL; break;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 254 : 		case MOTOR_INJ:				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_INJ; break;
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 414 : 	uint32_t baseAddr;// = BASEADDR_MOTOR_X;
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 447 : 	baseAddr = devSet.baseAddr[who];
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 473 : 		case MOTOR_VAL:	//	baseAddr = BASEADDR_MOTOR_VAL; break;
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 474 : 		case MOTOR_INJ:	//	baseAddr = BASEADDR_MOTOR_INJ; 
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 508 : 			*((uint32_t volatile *)(baseAddr + TOTAL_OFFSET)) = totalStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 509 : 			*((uint32_t volatile *)(baseAddr + START_SPEED)) = MOVE_STEP_SPEED_MIN;		// start_speed : 이값은 배열의 위치이므로 그대로 전송
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 510 : 			*((uint32_t volatile *)(baseAddr + ACCEL_OFFSET)) = AccelStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 511 : 			*((uint32_t volatile *)(baseAddr + DEACC_OFFSET)) = DeaccStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 512 : 			*((uint32_t volatile *)(baseAddr + CTRL_PORT)) = ctrlCmd;
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 542 : 	uint32_t baseAddr;	// = BASEADDR_MOTOR_X; //
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 545 : 	baseAddr = devSet.baseAddr[who];
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 569 : 		case MOTOR_Z:		//	baseAddr = BASEADDR_MOTOR_Z; break;
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 570 : 		case MOTOR_SYR: //	baseAddr = BASEADDR_MOTOR_SYR; break;
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 571 : 		case MOTOR_VAL:	//	baseAddr = BASEADDR_MOTOR_VAL; break;
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 572 : 		case MOTOR_INJ:	//	baseAddr = BASEADDR_MOTOR_INJ; 
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 599 : 			*((uint32_t volatile *)(baseAddr + TOTAL_OFFSET)) = totalStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 600 : 			*((uint32_t volatile *)(baseAddr + START_SPEED)) = minSpeed;		// start_speed : 이값은 배열의 위치이므로 그대로 전송
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 601 : 			*((uint32_t volatile *)(baseAddr + ACCEL_OFFSET)) = AccelStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 602 : 			*((uint32_t volatile *)(baseAddr + DEACC_OFFSET)) = DeaccStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 607 : 			*((uint32_t volatile *)(baseAddr + CTRL_PORT)) = ctrlCmd;
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 635 : 	uint32_t baseAddr;	// = BASEADDR_MOTOR_X; // ????
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 668 : 	baseAddr = devSet.baseAddr[who];
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 697 : 		case MOTOR_VAL:	//	baseAddr = BASEADDR_MOTOR_VAL; break;
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 698 : 		case MOTOR_INJ:	//	baseAddr = BASEADDR_MOTOR_INJ; 
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 727 : 			*((uint32_t volatile *)(baseAddr + TOTAL_OFFSET)) = totalStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 728 : 			*((uint32_t volatile *)(baseAddr + START_SPEED)) = minSpeed;		// start_speed : 이값은 배열의 위치이므로 그대로 전송
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 729 : 			*((uint32_t volatile *)(baseAddr + ACCEL_OFFSET)) = AccelStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 730 : 			*((uint32_t volatile *)(baseAddr + DEACC_OFFSET)) = DeaccStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 738 : 			*((uint32_t volatile *)(baseAddr + CTRL_PORT)) = ctrlCmd;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4575 : 	devSet.baseAddr[MOTOR_X] = BASEADDR_MOTOR_X_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4576 : 	devSet.baseAddr[MOTOR_Y] = BASEADDR_MOTOR_Y_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4577 : 	devSet.baseAddr[MOTOR_Z] = BASEADDR_MOTOR_X_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4578 : 	devSet.baseAddr[MOTOR_SYR] = BASEADDR_MOTOR_Y_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4579 : 	devSet.baseAddr[MOTOR_VAL] = BASEADDR_MOTOR_VAL_INJ;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4580 : 	devSet.baseAddr[MOTOR_INJ] = BASEADDR_MOTOR_VAL_INJ;
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4935 : 	btMotorState = (*((uint32_t volatile *)(devSet.baseAddr[who])) & Z_POS_CHECK_MASK);
---- baseAddr Matches (96 in 3 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 569 : 	unsigned int baseAddr[STEP_MOTOR_COUNT];
define_AS.h (Ch_AS4\ryu_inc) line 354 : 	#define CMD_CLR_STEP_COUNT(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x301 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 355 : 	#define CMD_EN_STEP_COUNT(WHO)	*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x302 << 2))) = 0x1
define_AS.h (Ch_AS4\ryu_inc) line 356 : 	#define CMD_DIS_STEP_COUNT(WHO)	*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x302 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 358 : 	#define READ_STEP_COUNT(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x1 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 377 : 	#define CMD_CHK_DIR_BASE(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x308 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 380 : 	#define CMD_CHK_DIR_RESET_Z 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x308 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 381 : 	#define CMD_CHK_DIR_READY_Z 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x309 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 382 : 	#define CMD_CHK_DIR_START_Z 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x30A << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 383 : 	#define CMD_CHK_DIR_ACT_END_Z 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x30B << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 387 : //	#define CMD_CHK_DIR_STATE_DIR_Z *((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x304 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 388 : 	#define CMD_CHK_DIR_OPTION_DIR_Z *((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x304 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 391 : #define READ_CHK_ZX		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x2 << 2)))		// 하위 [15:0]
define_AS.h (Ch_AS4\ryu_inc) line 392 : 	#define READ_CHK_DIR_Z		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x4 << 2))) 	// 하위 [15:0]
define_AS.h (Ch_AS4\ryu_inc) line 395 : 	#define CMD_CHK_DIR_RESET_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30C << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 396 : 	#define CMD_CHK_DIR_READY_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30D << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 397 : 	#define CMD_CHK_DIR_START_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 398 : 	#define CMD_CHK_DIR_ACT_END_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30F << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 400 : 	#define CMD_CHK_DIR_OPTION_DIR_X *((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x305 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 403 : 	#define READ_CHK_DIR_X		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x5 << 2)))		// 상위 [31:16]
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_RESET_Y 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x308 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 406 : 	#define CMD_CHK_DIR_READY_Y 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x309 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 407 : 	#define CMD_CHK_DIR_START_Y 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x30A << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 408 : 	#define CMD_CHK_DIR_ACT_END_Y 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x30B << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 410 : 	#define CMD_CHK_DIR_OPTION_DIR_Y	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x304 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 412 : #define READ_CHK_YS 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x2 << 2))) 	// 하위 [15:0]
define_AS.h (Ch_AS4\ryu_inc) line 413 : 	#define READ_CHK_DIR_Y		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x4 << 2)))		// 하위 [15:0]
define_AS.h (Ch_AS4\ryu_inc) line 415 : 	#define CMD_CHK_DIR_RESET_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30C << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 416 : 	#define CMD_CHK_DIR_READY_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30D << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 417 : 	#define CMD_CHK_DIR_START_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 418 : 	#define CMD_CHK_DIR_ACT_END_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30F << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 420 : 	#define CMD_CHK_DIR_OPTION_DIR_SYR *((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x305 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 422 : 	#define READ_CHK_DIR_SYR		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x5 << 2)))		// 상위 [31:16]
define_AS.h (Ch_AS4\ryu_inc) line 425 : 	#define CMD_CHK_DIR_RESET(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x308 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 427 : 	#define CMD_EN_STEP_COUNT(WHO)	*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x302 << 2))) = 0x1
define_AS.h (Ch_AS4\ryu_inc) line 428 : 	#define CMD_DIS_STEP_COUNT(WHO)	*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x302 << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 430 : 	#define READ_STEP_COUNT(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x1 << 2)))
define_AS.h (Ch_AS4\ryu_inc) line 476 : //#define READ_CHK_DIR(WHO)		*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x4 << 2) + (((WHO) & 0x1) << 2))		// 상위 [31:16]
define_AS.h (Ch_AS4\ryu_inc) line 478 : //#define READ_CHK_DIR(WHO)		*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x4 + WHO) << 2)			// addr : x(4) , Y(5), z(6), Syr(7)
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 148 : 	uint32_t baseAddr = TWOPORTRAM_BASEADDR_MOTOR_X; // ????
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 151 : 		case MOTOR_X: 				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_X; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 152 : 		case MOTOR_Y:					baseAddr = TWOPORTRAM_BASEADDR_MOTOR_Y; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 153 : 		case MOTOR_Z:					baseAddr = TWOPORTRAM_BASEADDR_MOTOR_Z; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 154 : 		case MOTOR_SYR: 			baseAddr = TWOPORTRAM_BASEADDR_MOTOR_SYR; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 155 : 		case MOTOR_VAL:				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_VAL; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 156 : 		case MOTOR_INJ:				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_INJ; break;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 159 : //dp( "[%d] [%d] baseAddr = %x data = %d ) \n\r", who, addr, baseAddr,data);	
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 161 : //	*((uint32_t volatile *)(baseAddr + addr*4)) = data;
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 162 : 	*((uint32_t volatile *) (baseAddr + (addr << 2))) = data;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 246 : uint32_t baseAddr;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 249 : 		case MOTOR_X: 				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_X; break;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 250 : 		case MOTOR_Y:					baseAddr = TWOPORTRAM_BASEADDR_MOTOR_Y; break;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 251 : 		case MOTOR_Z:					baseAddr = TWOPORTRAM_BASEADDR_MOTOR_Z; break;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 252 : 		case MOTOR_SYR: 			baseAddr = TWOPORTRAM_BASEADDR_MOTOR_SYR; break;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 253 : 		case MOTOR_VAL:				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_VAL; break;
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 254 : 		case MOTOR_INJ:				baseAddr = TWOPORTRAM_BASEADDR_MOTOR_INJ; break;
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 414 : 	uint32_t baseAddr;// = BASEADDR_MOTOR_X;
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 447 : 	baseAddr = devSet.baseAddr[who];
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 473 : 		case MOTOR_VAL:	//	baseAddr = BASEADDR_MOTOR_VAL; break;
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 474 : 		case MOTOR_INJ:	//	baseAddr = BASEADDR_MOTOR_INJ; 
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 508 : 			*((uint32_t volatile *)(baseAddr + TOTAL_OFFSET)) = totalStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 509 : 			*((uint32_t volatile *)(baseAddr + START_SPEED)) = MOVE_STEP_SPEED_MIN;		// start_speed : 이값은 배열의 위치이므로 그대로 전송
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 510 : 			*((uint32_t volatile *)(baseAddr + ACCEL_OFFSET)) = AccelStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 511 : 			*((uint32_t volatile *)(baseAddr + DEACC_OFFSET)) = DeaccStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 512 : 			*((uint32_t volatile *)(baseAddr + CTRL_PORT)) = ctrlCmd;
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 542 : 	uint32_t baseAddr;	// = BASEADDR_MOTOR_X; //
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 545 : 	baseAddr = devSet.baseAddr[who];
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 569 : 		case MOTOR_Z:		//	baseAddr = BASEADDR_MOTOR_Z; break;
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 570 : 		case MOTOR_SYR: //	baseAddr = BASEADDR_MOTOR_SYR; break;
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 571 : 		case MOTOR_VAL:	//	baseAddr = BASEADDR_MOTOR_VAL; break;
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 572 : 		case MOTOR_INJ:	//	baseAddr = BASEADDR_MOTOR_INJ; 
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 599 : 			*((uint32_t volatile *)(baseAddr + TOTAL_OFFSET)) = totalStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 600 : 			*((uint32_t volatile *)(baseAddr + START_SPEED)) = minSpeed;		// start_speed : 이값은 배열의 위치이므로 그대로 전송
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 601 : 			*((uint32_t volatile *)(baseAddr + ACCEL_OFFSET)) = AccelStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 602 : 			*((uint32_t volatile *)(baseAddr + DEACC_OFFSET)) = DeaccStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 607 : 			*((uint32_t volatile *)(baseAddr + CTRL_PORT)) = ctrlCmd;
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 635 : 	uint32_t baseAddr;	// = BASEADDR_MOTOR_X; // ????
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 668 : 	baseAddr = devSet.baseAddr[who];
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 697 : 		case MOTOR_VAL:	//	baseAddr = BASEADDR_MOTOR_VAL; break;
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 698 : 		case MOTOR_INJ:	//	baseAddr = BASEADDR_MOTOR_INJ; 
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 727 : 			*((uint32_t volatile *)(baseAddr + TOTAL_OFFSET)) = totalStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 728 : 			*((uint32_t volatile *)(baseAddr + START_SPEED)) = minSpeed;		// start_speed : 이값은 배열의 위치이므로 그대로 전송
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 729 : 			*((uint32_t volatile *)(baseAddr + ACCEL_OFFSET)) = AccelStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 730 : 			*((uint32_t volatile *)(baseAddr + DEACC_OFFSET)) = DeaccStep - 1;		// 하나 작은 값으로 저장한다(전송). FPGA에서 쉽게 사용하도록
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 738 : 			*((uint32_t volatile *)(baseAddr + CTRL_PORT)) = ctrlCmd;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4575 : 	devSet.baseAddr[MOTOR_X] = BASEADDR_MOTOR_X_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4576 : 	devSet.baseAddr[MOTOR_Y] = BASEADDR_MOTOR_Y_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4577 : 	devSet.baseAddr[MOTOR_Z] = BASEADDR_MOTOR_X_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4578 : 	devSet.baseAddr[MOTOR_SYR] = BASEADDR_MOTOR_Y_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4579 : 	devSet.baseAddr[MOTOR_VAL] = BASEADDR_MOTOR_VAL_INJ;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4580 : 	devSet.baseAddr[MOTOR_INJ] = BASEADDR_MOTOR_VAL_INJ;
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4935 : 	btMotorState = (*((uint32_t volatile *)(devSet.baseAddr[who])) & Z_POS_CHECK_MASK);
---- selStateAddr Matches (11 in 3 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 581 : 	unsigned int selStateAddr[STEP_MOTOR_COUNT];
define_AS.h (Ch_AS4\ryu_inc) line 349 : 	#define CMD_SEL_STATE(WHO)	*((uint32_t volatile *)(devSet.selStateAddr[WHO])) = WHO;
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3030 : devSet.selStateAddr[MOTOR_X] = SEL_STATE_ADDR_MOTOR_X_Z;
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3034 : #define CMD_EN_STEP_COUNT(WHO)	*((uint32_t volatile *)(devSet.selStateAddr[WHO])) = WHO;
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3035 : #define CMD_CLR_STEP_COUNT(WHO)	*((uint32_t volatile *)(devSet.selStateAddr[WHO])) = WHO;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4631 : 	devSet.selStateAddr[MOTOR_X] = SEL_STATE_ADDR_MOTOR_X_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4632 : 	devSet.selStateAddr[MOTOR_Y] = SEL_STATE_ADDR_MOTOR_Y_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4633 : 	devSet.selStateAddr[MOTOR_Z] = SEL_STATE_ADDR_MOTOR_X_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4634 : 	devSet.selStateAddr[MOTOR_SYR] = SEL_STATE_ADDR_MOTOR_Y_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4635 : 	devSet.selStateAddr[MOTOR_VAL] = SEL_STATE_ADDR_MOTOR_VAL_INJ;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4636 : 	devSet.selStateAddr[MOTOR_INJ] = SEL_STATE_ADDR_MOTOR_VAL_INJ;
---- CMD_SEL_STATE Matches (9 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 349 : 	#define CMD_SEL_STATE(WHO)	*((uint32_t volatile *)(devSet.selStateAddr[WHO])) = WHO;
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3028 : CMD_SEL_STATE(MOTOR_X);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4815 : 	CMD_SEL_STATE(MOTOR_X);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4817 : //		CMD_SEL_STATE(MOTOR_Z);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4821 : 	CMD_SEL_STATE(MOTOR_Y); 
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4823 : //		CMD_SEL_STATE(MOTOR_SYR); 
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4827 : 	CMD_SEL_STATE(MOTOR_VAL); 
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4829 : //		CMD_SEL_STATE(MOTOR_INJ); 
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4933 : 	CMD_SEL_STATE(who);
---- encoderCtrlAddr Matches (15 in 3 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 579 : 	unsigned int encoderCtrlAddr[STEP_MOTOR_COUNT];
define_AS.h (Ch_AS4\ryu_inc) line 318 : 	#define CMD_ENCODER_CLR_CNT(WHO)		{	*((uint32_t volatile *)(devSet.encoderCtrlAddr[WHO])) = 0x01; *((uint32_t volatile *)(devSet.encoderCtrlAddr[WHO])) = 0x0;}
define_AS.h (Ch_AS4\ryu_inc) line 326 : 	#define CMD_ENCODER_CLR_CNT_ENABLE(WHO)		{	*((uint32_t volatile *)(devSet.encoderCtrlAddr[WHO])) = 0x01; *((uint32_t volatile *)(devSet.encoderCtrlAddr[WHO])) = 0x4;}
define_AS.h (Ch_AS4\ryu_inc) line 329 : 	#define CMD_ENCODER_DISABLE(WHO)		{	*((uint32_t volatile *)(devSet.encoderCtrlAddr[WHO])) = 0x00;}
define_AS.h (Ch_AS4\ryu_inc) line 330 : 	#define CMD_ENCODER_ENABLE(WHO)		{	*((uint32_t volatile *)(devSet.encoderCtrlAddr[WHO])) = 0x04;}
define_AS.h (Ch_AS4\ryu_inc) line 331 : 	#define CMD_ENCODER_HOLD_CNT(WHO)		{	*((uint32_t volatile *)(devSet.encoderCtrlAddr[WHO])) = 0x06;}
define_AS.h (Ch_AS4\ryu_inc) line 332 : 	#define CMD_ENCODER_ACT_CNT(WHO)		{	*((uint32_t volatile *)(devSet.encoderCtrlAddr[WHO])) = 0x04;}
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4604 : 	devSet.encoderCtrlAddr[MOTOR_X] = ENCODER_CTRL_ADDR_MOTOR_X_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4605 : 	devSet.encoderCtrlAddr[MOTOR_Y] = ENCODER_CTRL_ADDR_MOTOR_Y_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4606 : 	devSet.encoderCtrlAddr[MOTOR_Z] = ENCODER_CTRL_ADDR_MOTOR_X_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4607 : 	devSet.encoderCtrlAddr[MOTOR_SYR] = ENCODER_CTRL_ADDR_MOTOR_Y_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4608 : 	devSet.encoderCtrlAddr[MOTOR_VAL] = ENCODER_CTRL_ADDR_MOTOR_VAL_INJ;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4609 : 	devSet.encoderCtrlAddr[MOTOR_INJ] = ENCODER_CTRL_ADDR_MOTOR_VAL_INJ;
---- READ_CHK_DIR_Z Matches (5 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 378 : // READ_CHK_DIR_Z - bit[1:0]-DIr / bit[5:2]-Pos / bit[7]Break / bit[6] Error
define_AS.h (Ch_AS4\ryu_inc) line 380 : 	#define READ_CHK_DIR_Z		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x4 << 2))) 	// 하위 [15:0]
define_AS.h (Ch_AS4\ryu_inc) line 420 : 	#define READ_CHK_DIR_Z
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4815 : 	devState.chk_Dir[MOTOR_Z] = READ_CHK_DIR_Z;
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4821 : 	devState.chk_Dir[MOTOR_Z] = READ_CHK_DIR_Z;
---- chkHomeStepCnt Matches (18 in 3 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 562 : 	unsigned int chkHomeStepCnt[STEP_MOTOR_COUNT]; //
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2818 : 					goSensorHome(MOTOR_SYR, devSet.chkHomeSpeed[MOTOR_SYR], devSet.chkHomeStepCnt[MOTOR_SYR]);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2928 : 				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], devSet.chkHomeStepCnt[MOTOR_Z]);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2936 : 				goSensorHome(MOTOR_Z, devSet.chkHomeSpeed[MOTOR_Z], devSet.chkHomeStepCnt[MOTOR_Z]);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2963 : 				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], devSet.chkHomeStepCnt[MOTOR_Z]);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3074 : 				goSensorHome(MOTOR_X, devSet.chkHomeSpeed[MOTOR_X], devSet.chkHomeStepCnt[MOTOR_X]);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3212 : 				goSensorHome(MOTOR_X, devSet.chkHomeSpeed[MOTOR_X], devSet.chkHomeStepCnt[MOTOR_X]);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3343 : 				goSensorHome(MOTOR_X, devSet.chkHomeSpeed[MOTOR_X], devSet.chkHomeStepCnt[MOTOR_X]);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3457 : 				goSensorHome(MOTOR_Y, devSet.chkHomeSpeed[MOTOR_Y], devSet.chkHomeStepCnt[MOTOR_Y]);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3580 : 				goSensorHome(MOTOR_Y, devSet.chkHomeSpeed[MOTOR_Y], devSet.chkHomeStepCnt[MOTOR_Y]);
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4670 : 	devSet.chkHomeStepCnt[MOTOR_X] = HOMECHK_CNT_MOTOR_X;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4671 : 	devSet.chkHomeStepCnt[MOTOR_Y] = HOMECHK_CNT_MOTOR_Y;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4672 : 	devSet.chkHomeStepCnt[MOTOR_Z] = HOMECHK_CNT_MOTOR_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4673 : 	devSet.chkHomeStepCnt[MOTOR_SYR] = HOMECHK_CNT_MOTOR_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4674 : 	devSet.chkHomeStepCnt[MOTOR_VAL] = HOMECHK_CNT_MOTOR_VAL;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4675 : 	devSet.chkHomeStepCnt[MOTOR_INJ] = HOMECHK_CNT_MOTOR_INJ;
motorControlWho in testPrgm.c (Ch_AS4\apps_layer) line 2038 : 				goSensorHome(who, devSet.chkHomeSpeed[who], devSet.chkHomeStepCnt[who]);
motorControlWho in testPrgm.c (Ch_AS4\apps_layer) line 2047 : 				goSensorHome(who, devSet.chkHomeSpeed[who], devSet.chkHomeStepCnt[who]);
---- READ_CHK_DIR_Z Matches (5 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 389 : // READ_CHK_DIR_Z - bit[1:0]-DIr / bit[5:2]-Pos / bit[7]Break / bit[6] Error
define_AS.h (Ch_AS4\ryu_inc) line 391 : 	#define READ_CHK_DIR_Z		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x4 << 2))) 	// 하위 [15:0]
define_AS.h (Ch_AS4\ryu_inc) line 433 : 	#define READ_CHK_DIR_Z
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4852 : 	devState.chk_Dir[MOTOR_Z] = READ_CHK_DIR_Z;
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4858 : 	devState.chk_Dir[MOTOR_Z] = READ_CHK_DIR_Z;
---- CHECK_ENCODER_DIRECTION Matches (26 in 4 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 366 : #if CHECK_ENCODER_DIRECTION
main in main.c (Ch_AS4) line 423 : #if CHECK_ENCODER_DIRECTION
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 735 : #if CHECK_ENCODER_DIRECTION
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1355 : #if CHECK_ENCODER_DIRECTION
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1426 : #if CHECK_ENCODER_DIRECTION
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1565 : #if CHECK_ENCODER_DIRECTION
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1635 : #if CHECK_ENCODER_DIRECTION
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1727 : #if CHECK_ENCODER_DIRECTION
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2187 : #if CHECK_ENCODER_DIRECTION
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2797 : #if CHECK_ENCODER_DIRECTION
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2880 : #if CHECK_ENCODER_DIRECTION
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2915 : #if CHECK_ENCODER_DIRECTION
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3006 : #if CHECK_ENCODER_DIRECTION
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3057 : #if CHECK_ENCODER_DIRECTION
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3162 : #if CHECK_ENCODER_DIRECTION
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3198 : #if CHECK_ENCODER_DIRECTION
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3286 : #if CHECK_ENCODER_DIRECTION
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3326 : #if CHECK_ENCODER_DIRECTION
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3408 : #if CHECK_ENCODER_DIRECTION
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3443 : #if CHECK_ENCODER_DIRECTION
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3531 : #if CHECK_ENCODER_DIRECTION
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3566 : #if CHECK_ENCODER_DIRECTION
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3632 : #if CHECK_ENCODER_DIRECTION
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4618 : #if CHECK_ENCODER_DIRECTION
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4850 : #if CHECK_ENCODER_DIRECTION
option_AS.h (Ch_AS4\ryu_inc) line 410 : #define CHECK_ENCODER_DIRECTION		1
---- motorResetCmd Matches (25 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 313 : 	#define motorResetCmd(WHO)	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_RESET); }
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2420 : 	motorResetCmd(MOTOR_X);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2421 : 	motorResetCmd(MOTOR_Y);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2422 : 	motorResetCmd(MOTOR_Z);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2423 : 	motorResetCmd(MOTOR_SYR);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2424 : 	motorResetCmd(MOTOR_VAL);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2425 : 	motorResetCmd(MOTOR_INJ);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2526 : 				motorResetCmd(MOTOR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2550 : 				motorResetCmd(MOTOR_VAL);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2666 : 				motorResetCmd(MOTOR_INJ);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2691 : 				motorResetCmd(MOTOR_INJ);		
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2825 : 				motorResetCmd(MOTOR_SYR);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2944 : 					motorResetCmd(MOTOR_Z);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2971 : 				motorResetCmd(MOTOR_Z);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3080 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3120 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3218 : 					motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3250 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3349 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3388 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3463 : 					motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3493 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3586 : 					motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3616 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
option_AS.h (Ch_AS4\ryu_inc) line 27 : //		#define FPGA_VERSION_TRIM_BREAK			1				// motorResetCmd   or   motorReadyCmd
---- motorReadyCmd Matches (63 in 5 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 315 : 	#define motorReadyCmd(WHO)	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_WAKEUP); }
Def_stepCon.h (Ch_AS4\common_inc) line 317 : //	#define motorWakeupCmd(WHO)			motorReadyCmd(WHO)
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 195 : 			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 197 : 			if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 519 : 			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 661 : 			if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 668 : 			if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 675 : 			if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 682 : 			if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1440 : 						if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1441 : 						if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1794 : 						if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1795 : 						if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2206 : 					if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2207 : 					if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2527 : 						if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2528 : 						if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3581 : 					 if(sleepChkVal(MOTOR_VAL))	{	motorReadyCmd(MOTOR_VAL);}
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3871 : 			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2507 : 			if(sleepChkVal(MOTOR_VAL)) {motorReadyCmd(MOTOR_VAL);}
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2570 : 				motorReadyCmd(MOTOR_VAL);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2647 : 			if(sleepChkVal(MOTOR_INJ)) {motorReadyCmd(MOTOR_INJ);}
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2711 : 				motorReadyCmd(MOTOR_INJ);		
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2842 : 				motorReadyCmd(MOTOR_SYR);		
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3018 : // 2. 홈위치찾은후 - motorReadyCmd() : Reset
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3021 : // 4. motorReadyCmd() : motor초기화 Reset
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3657 : 				motorReadyCmd(MOTOR_VAL);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3660 : 				motorReadyCmd(MOTOR_INJ);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3683 : 				motorReadyCmd(MOTOR_Z);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3701 : 				motorReadyCmd(MOTOR_X);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3718 : 				motorReadyCmd(MOTOR_Y);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3738 : 				motorReadyCmd(MOTOR_SYR);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3757 : 				motorReadyCmd(MOTOR_SYR);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3871 : 						motorReadyCmd(MOTOR_VAL);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3877 : 						motorReadyCmd(MOTOR_INJ);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3998 : 				motorReadyCmd(MOTOR_VAL);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4005 : 					motorReadyCmd(MOTOR_INJ);
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4120 : 				motorReadyCmd(MOTOR_VAL);
option_AS.h (Ch_AS4\ryu_inc) line 27 : //		#define FPGA_VERSION_TRIM_BREAK			1				// motorResetCmd   or   motorReadyCmd
testPrgm.c (Ch_AS4\apps_layer) line 792 : 						motorReadyCmd(MOTOR_VAL);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1003 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1025 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1047 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1068 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1090 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1111 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1132 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1153 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1175 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1197 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1218 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1239 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1450 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1474 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1497 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1521 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1544 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1565 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1586 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1607 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1741 : 				motorReadyCmd(MOTOR_VAL);		
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1764 : 			if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2096 : 			motorReadyCmd(i);
---- motorSleepAll Matches (4 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 6592 : //motorSleepAll();
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2393 : void motorSleepAll()
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4961 : 		motorSleepAll();
MotorCtrl_task.h (Ch_AS4\inc) line 96 : void motorSleepAll();
---- motorBreakAll Matches (5 in 3 files) ----
stateChange in LcasAction_task.c (Ch_AS4\apps_layer) line 890 : 				motorBreakAll();
LcasAction_task.c (Ch_AS4\apps_layer) line 6591 : //motorBreakAll();
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2406 : void motorBreakAll()
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4960 : 		motorBreakAll();
MotorCtrl_task.h (Ch_AS4\inc) line 98 : void motorBreakAll();
---- CMD_SLEEP Matches (5 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 96 : #define CMD_SLEEP					0x08 // 8
Def_stepCon.h (Ch_AS4\common_inc) line 316 : 	#define motorSleepCmd(WHO , DIR) 	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (DIR | CMD_SLEEP); }
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2562 : 				// CMD_SLEEP 하여 모터를 SLEEP상태로 만든다.
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2703 : 				// CMD_SLEEP 하여 모터를 SLEEP상태로 만든다.
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3490 : #define CMD_SLEEP					0x08 // 8
---- motorSleepCmd Matches (35 in 4 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 316 : 	#define motorSleepCmd(WHO , DIR) 	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (DIR | CMD_SLEEP); }
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 368 : 				motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 369 : 				motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 450 : 				motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 451 : 				motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 576 : 			motorSleepCmd(MOTOR_X	,	HOME_DIR_X);			motorSleepCmd(MOTOR_Y	,	HOME_DIR_Y);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 577 : 			motorSleepCmd(MOTOR_Z	,	HOME_DIR_Z);			motorSleepCmd(MOTOR_SYR	,	HOME_DIR_SYR);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 578 : 			motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);			motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 617 : 			motorSleepCmd(MOTOR_X	,	HOME_DIR_X);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 618 : 			motorSleepCmd(MOTOR_Y	,	HOME_DIR_Y);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 619 : 			motorSleepCmd(MOTOR_Z	,	HOME_DIR_Z);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 621 : 			motorSleepCmd(MOTOR_SYR	,	HOME_DIR_SYR);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 623 : 			motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 624 : 			motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
LcasAction_task.c (Ch_AS4\apps_layer) line 4644 : //						motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
LcasAction_task.c (Ch_AS4\apps_layer) line 4645 : //						motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2398 : 	motorSleepCmd(MOTOR_X , 	devState.curDir[MOTOR_X]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2399 : 	motorSleepCmd(MOTOR_Y , 	devState.curDir[MOTOR_Y]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2400 : 	motorSleepCmd(MOTOR_Z , 	devState.curDir[MOTOR_Z]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2401 : 	motorSleepCmd(MOTOR_SYR , 	devState.curDir[MOTOR_SYR]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2402 : 	motorSleepCmd(MOTOR_VAL , 	devState.curDir[MOTOR_VAL]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2403 : 	motorSleepCmd(MOTOR_INJ , 	devState.curDir[MOTOR_INJ]);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2564 : 				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2597 : //				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2599 : 				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2705 : 				motorSleepCmd(MOTOR_INJ , HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2751 : //				motorSleepCmd(MOTOR_INJ , HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2753 : //				motorSleepCmd(MOTOR_INJ , R_HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2755 : 				motorSleepCmd(MOTOR_INJ , R_HOME_DIR_INJ);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2836 : 				motorSleepCmd(MOTOR_SYR , HOME_DIR_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2871 : //					motorSleepCmd(MOTOR_SYR , HOME_DIR_SYR);
motorControlWho in testPrgm.c (Ch_AS4\apps_layer) line 2054 : 				motorSleepCmd(who , MotorCtrlSet.bDir[who]);
---- readyChkEncoder_Z Matches (11 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 379 : 	#define readyChkEncoder_Z()	{ \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 366 : 				//readyChkEncoder_Z();
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 446 : 				//readyChkEncoder_Z();
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1210 : 				readyChkEncoder_Z();		
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1236 : 				readyChkEncoder_Z();		      
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1266 : 				readyChkEncoder_Z();    // WAIT_TIME_VALUE_CASE_STATE  잇으면 다음 case로 이 
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1311 : 				readyChkEncoder_Z();      
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2085 : //readyChkEncoder_Z();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2493 : 						//readyChkEncoder_Z();
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1782 : 				readyChkEncoder_Z();
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1812 : 				readyChkEncoder_Z();			
---- encoderCount Matches (169 in 5 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 342 : //	#define ENCODER_CHECK					(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT)
Def_stepCon.h (Ch_AS4\common_inc) line 344 : 	#define ENCODER_CHECK_Z				(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_Z)
Def_stepCon.h (Ch_AS4\common_inc) line 348 : 	#define ENCODER_CHECK_SYR			(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_SYR)
Def_stepCon.h (Ch_AS4\common_inc) line 382 : dfp("======  Z  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 400 : dfp("xxxxxxxxxxxxx======  Syringe  readCount=[%d] [%d]\n", readCount , encoderCount); \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 180 : 	static int encoderCount;
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 225 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, 	WASH_SPEED_UP_SYR, ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 281 : 			encoderCount = goSyr_Encoder(washVolume,	0, WASH_SPEED_DOWN_SYR, ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 289 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 308 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO , 0, WASH_SPEED_UP_SYR,	ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 316 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 359 : 				encoderCount = goZ_Encoder(POS_Z_TOP,ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 367 : 			if(readyChkRetry_Z(encoderCount)) {
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 387 : 			encoderCount = goSyr_Encoder(washVolume,	0, WASH_SPEED_DOWN_SYR, ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 401 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 420 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO , 0, WASH_SPEED_UP_SYR,	ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 429 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 439 : 				encoderCount = goZ_Encoder(POS_Z_TOP,ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 447 : 			if(readyChkRetry_Z(encoderCount)) {
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 489 : 	static int encoderCount;
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 529 : 				encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, WASH_SPEED_UP_SYR, ACT_XY_POS);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1159 : 	static int encoderCount = 0;
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1183 : 					encoderCount = goZ_Encoder(POS_Z_VIAL_LEFT_UPPER_DETECT, ACT_XY_POS);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1186 : 					encoderCount = goZ_Encoder(POS_Z_VIAL_RIGHT_UPPER_DETECT, ACT_XY_POS);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1197 : 			if(readyChkRetry_Z(encoderCount)) {
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1201 : 					encoderCount = 	goZ_Encoder(POS_Z_VIAL_LEFT_DETECT, ACT_XY_POS);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1204 : 					encoderCount = 	goZ_Encoder(POS_Z_VIAL_RIGHT_DETECT, ACT_XY_POS);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1214 : 				encoderCount = 	goZ_Encoder(POS_Z_VIAL_LEFT_DETECT, ACT_XY_POS);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1217 : 				encoderCount = 	goZ_Encoder(POS_Z_VIAL_RIGHT_DETECT, ACT_XY_POS);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1225 : 			if(readyChkRetry_Z(encoderCount)) {
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1256 :       encoderCount = goZ_Encoder(needleDepthStep, ACT_MOVE_STEP_ABSOLUTE);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1261 : 			if(readyChkRetry_Z(encoderCount)) {
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1275 : 			encoderCount =  goSyr_Encoder(vol, 0, speed, ACT_XY_POS_ADD);	// 현재위치에서 추가로 흡입하거나 배출
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1291 : 	    encoderCount = goZ_Encoder(POS_Z_TOP, ACT_XY_POS);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1296 : 			if(readyChkRetry_Z(encoderCount)) {
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1417 : 	static int encoderCount;
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1460 : 							encoderCount =	goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1564 : 						encoderCount = goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1672 : 		encoderCount = 			goSyr_Encoder(-injectionVolume, 0, syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 배출		
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1720 : 		encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, syringeSpeed, ACT_XY_POS);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1771 : 	static int encoderCount;
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1816 : 						encoderCount =		goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1890 : 						encoderCount = goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1979 : 			encoderCount = goSyr_Encoder(-(PARTIAL_LOOP_EXTRA_SAMPLE_VOL_1ST), 0, syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 배출		
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2013 : 		encoderCount = goSyr_Encoder(-injectionVolume, 0, syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 배출		
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2063 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, syringeSpeed, ACT_XY_POS);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2077 : 					encoderCount = goZ_Encoder(POS_Z_TOP, ACT_XY_POS);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2083 : 					if(readyChkRetry_Z(encoderCount)) {
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2178 : 	static int encoderCount;
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2229 : 				encoderCount = goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2317 : 						encoderCount =				goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2425 : 			encoderCount =		goSyr_Encoder(-injectionVolume,0,	syringeSpeed,	ACT_XY_POS_ADD);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2472 : 				encoderCount =			goSyr_Encoder(POS_SYR_ZERO, 0, syringeSpeed, ACT_XY_POS);						
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2486 : 			encoderCount = goZ_Encoder(POS_Z_TOP, ACT_XY_POS);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2491 : 					if(readyChkRetry_Z(encoderCount)) {
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3547 : 	static int encoderCount;
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3623 : 								encoderCount = goSyr_Encoder(airSegmentVol,	0,devSet.syrSpeedInj[runSetup.syringeDnSpdInj-1], ACT_XY_POS);	// 처음이라	절대위치
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3834 : 	static int encoderCount;
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3892 : 				encoderCount = goSyr_Encoder(airSegmentVol,	0,devSet.syrSpeedInj[runSetup.syringeDnSpdInj-1], ACT_XY_POS);	// 처음이라	절대위치
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3913 : 			encoderCount =				goZ_Encoder(POS_Z_VIAL_LEFT_UPPER_DETECT,	ACT_XY_POS);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3916 : 			encoderCount =				goZ_Encoder(POS_Z_VIAL_RIGHT_UPPER_DETECT, ACT_XY_POS);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3926 : 			if(readyChkRetry_Z(encoderCount)) {
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3930 : 	      	encoderCount =    goZ_Encoder(POS_Z_VIAL_LEFT_DETECT, ACT_XY_POS);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3933 : 					encoderCount =     goZ_Encoder(POS_Z_VIAL_RIGHT_DETECT, ACT_XY_POS);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3939 : 			if(readyChkRetry_Z(encoderCount)) {
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4020 : 		encoderCount =				goZ_Encoder(needleDepthStep, ACT_MOVE_STEP_ABSOLUTE);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4025 : 			if(readyChkRetry_Z(encoderCount)) {
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4041 : 		encoderCount =	goSyr_Encoder(addVolume, 0,syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4057 : 	encoderCount =	goSyr_Encoder(-addVolume,	0,syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4073 : 		encoderCount =		goSyr_Encoder(POS_SYR_ZERO, 0,syringeSpeed, ACT_XY_POS);	// 현재위치에서	추가로 흡입하거나	배출
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4099 : 			encoderCount =	 goZ_Encoder(POS_Z_TOP,	ACT_XY_POS);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4104 : 			if(readyChkRetry_Z(encoderCount)) {
LcasAction_task.c (Ch_AS4\apps_layer) line 6437 : int encoderCountCheck(int encoderCount, int readCount) 
encoderCountCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6439 : 	if(encoderCount > readCount) {
encoderCountCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6440 : 		return (encoderCount - readCount);
encoderCountCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6443 : 		return (readCount - encoderCount);
LcasAction_task.h (Ch_AS4\inc) line 146 : int encoderCountCheck(int encoderCount, int readCount);
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 811 : 	static int encoderCount = 0;
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 837 : 			encoderCount = goX_Encoder(&Vial, option);
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 839 : 			encoderCount = goX_Encoder(pos, Tray, option);
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 845 : 				if(ChkEncoder_X(encoderCount)) { // ok
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 871 : 	static int encoderCount = 0;
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 897 : 			encoderCount = goY_Encoder(&Vial, option);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 899 : 			encoderCount = goY_Encoder(pos, Tray, option);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 905 : 				if(ChkEncoder_Y(encoderCount)) { // ok
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 933 : 	static int encoderCount = 0;
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 955 : 			encoderCount = goZ_Encoder(pos, option);
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 960 : 				if(ChkEncoder_Z(encoderCount)) { // ok
MotorCtrl_task.c (Ch_AS4\apps_layer) line 985 : int ChkEncoder_X(int encoderCount)
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 993 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 997 : 	count = encoderCount - readCount;
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1007 : int ChkEncoder_Y(int encoderCount)
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1015 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1019 : 	count = encoderCount - readCount;
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1029 : int ChkEncoder_Z(int encoderCount)
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1037 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1041 : 	count = encoderCount - readCount;
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1051 : int readyChkRetry_X(int encoderCount)
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1065 : 				if(ChkEncoder_X(encoderCount)) {
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1075 : dfp("encoderCount =%d\n",encoderCount);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1088 : int readyChkRetry_Y(int encoderCount)
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1102 : 				if(ChkEncoder_Y(encoderCount)) {
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1112 : dfp("encoderCount =%d\n",encoderCount);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1125 : int readyChkRetry_Z(int encoderCount)
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1139 : 				if(ChkEncoder_Z(encoderCount)) {
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1154 : dfp("=============================================Count Z=%d\n",encoderCount);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1159 : dfp("encoderCount =%d\n",encoderCount);
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1234 : 	uint32_t encoderCount;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1298 : 	uint32_t encoderCount;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1363 : 		encoderCount = (step * X_ENCODER_COUNTER_FACTOR + 0.5f);//+ 0.5f; 		// 엔코더 카운트 수				
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1367 : 		encoderCount = -(step * X_ENCODER_COUNTER_FACTOR) + 0.5f;		
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1373 : 	return encoderCount;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1382 : 	uint32_t encoderCount;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1434 : //		encoderCount = step * X_ENCODER_COUNTER_FACTOR ;		// 엔코더 카운트 수		
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1435 : 		encoderCount = (step * X_ENCODER_COUNTER_FACTOR + 0.5f);//+ 0.5f; 		// 엔코더 카운트 수				
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1439 : //		encoderCount = -step * X_ENCODER_COUNTER_FACTOR;		
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1440 : 		encoderCount = -(step * X_ENCODER_COUNTER_FACTOR) + 0.5f;		
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1446 : 	return encoderCount;
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1457 : 	uint32_t encoderCount;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1515 : 	uint32_t encoderCount;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1573 : 		encoderCount = (step * Y_ENCODER_COUNTER_FACTOR + 0.5f);		// 엔코더 카운트 수
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1577 : 		encoderCount = -(step * Y_ENCODER_COUNTER_FACTOR) + 0.5f;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1584 : 	return encoderCount;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1593 : 	uint32_t encoderCount;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1643 : 		encoderCount = (step * Y_ENCODER_COUNTER_FACTOR + 0.5f);		// 엔코더 카운트 수
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1647 : 		encoderCount = -(step * Y_ENCODER_COUNTER_FACTOR) + 0.5f;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1654 : 	return encoderCount;
goZ in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1664 : 	uint32_t encoderCount;
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1700 : 	uint32_t encoderCount;
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1735 : 		encoderCount = (step * Z_ENCODER_COUNTER_FACTOR + 0.5f);		// 엔코더 카운트 수
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1739 : 		encoderCount = -(step * Z_ENCODER_COUNTER_FACTOR) + 0.5f;
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1741 : 	return encoderCount;
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1748 : 	static int encoderCount = 0;
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1777 : 			encoderCount = goZ_Encoder(POS_Z_TOP,ACT_Z_POS);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1806 :      			encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1830 : 	static int encoderCount = 0;
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1860 : 			encoderCount = goZ_Encoder(POS_Z_TOP,ACT_Z_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1864 : 			if(readyChkRetry_Z(encoderCount)) {
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1897 : 		  	encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1902 : 			if(readyChkRetry_Z(encoderCount)) {
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1930 : 	static int encoderCount = 0;
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1957 : 				encoderCount = goZ_Encoder(POS_Z_TOP,ACT_Z_POS);	// CMD_CHK_DIR_START_Z
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1962 : 			if(readyChkRetry_Z(encoderCount)) {
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2005 : 			encoderCount = goZ_Encoder(z_chk_upper_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2014 : 			if(readyChkRetry_Z(encoderCount)) {
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2016 : 				encoderCount = goZ_Encoder(z_chk_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2021 : 			if(readyChkRetry_Z(encoderCount)) {
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2023 : 					encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2033 : 						encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2046 : 				encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2063 : 			if(readyChkRetry_Z(encoderCount)) {
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2067 : 					encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2086 : 			if(readyChkRetry_Z(encoderCount)) {
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2093 : 	    encoderCount = goZ_Encoder(POS_Z_TOP, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2097 : 			if(readyChkRetry_Z(encoderCount)) {
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2112 : 	uint32_t encoderCount;
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2155 : 	uint32_t encoderCount;
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2195 : 		encoderCount = (step * SYR_ENCODER_COUNTER_FACTOR + 0.5f);		// 엔코더 카운트 수
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2199 : 		encoderCount = -(step * SYR_ENCODER_COUNTER_FACTOR) + 0.5f;
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2201 : 	return encoderCount;
MotorCtrl_task.h (Ch_AS4\inc) line 134 : int ChkEncoder_X(int encoderCount);
MotorCtrl_task.h (Ch_AS4\inc) line 135 : int ChkEncoder_Y(int encoderCount);
MotorCtrl_task.h (Ch_AS4\inc) line 136 : int ChkEncoder_Z(int encoderCount);
MotorCtrl_task.h (Ch_AS4\inc) line 138 : int readyChkRetry_X(int encoderCount);
MotorCtrl_task.h (Ch_AS4\inc) line 139 : int readyChkRetry_Y(int encoderCount);
MotorCtrl_task.h (Ch_AS4\inc) line 140 : int readyChkRetry_Z(int encoderCount);
---- motorSleepCmd Matches (35 in 4 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 316 : 	#define motorSleepCmd(WHO , DIR) 	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (DIR | CMD_SLEEP); }
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 368 : 				motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 369 : 				motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 448 : 				motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 449 : 				motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 574 : 			motorSleepCmd(MOTOR_X	,	HOME_DIR_X);			motorSleepCmd(MOTOR_Y	,	HOME_DIR_Y);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 575 : 			motorSleepCmd(MOTOR_Z	,	HOME_DIR_Z);			motorSleepCmd(MOTOR_SYR	,	HOME_DIR_SYR);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 576 : 			motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);			motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 615 : 			motorSleepCmd(MOTOR_X	,	HOME_DIR_X);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 616 : 			motorSleepCmd(MOTOR_Y	,	HOME_DIR_Y);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 617 : 			motorSleepCmd(MOTOR_Z	,	HOME_DIR_Z);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 619 : 			motorSleepCmd(MOTOR_SYR	,	HOME_DIR_SYR);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 621 : 			motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 622 : 			motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
LcasAction_task.c (Ch_AS4\apps_layer) line 4642 : //						motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
LcasAction_task.c (Ch_AS4\apps_layer) line 4643 : //						motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2398 : 	motorSleepCmd(MOTOR_X , 	devState.curDir[MOTOR_X]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2399 : 	motorSleepCmd(MOTOR_Y , 	devState.curDir[MOTOR_Y]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2400 : 	motorSleepCmd(MOTOR_Z , 	devState.curDir[MOTOR_Z]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2401 : 	motorSleepCmd(MOTOR_SYR , 	devState.curDir[MOTOR_SYR]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2402 : 	motorSleepCmd(MOTOR_VAL , 	devState.curDir[MOTOR_VAL]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2403 : 	motorSleepCmd(MOTOR_INJ , 	devState.curDir[MOTOR_INJ]);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2564 : 				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2597 : //				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2599 : 				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2705 : 				motorSleepCmd(MOTOR_INJ , HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2751 : //				motorSleepCmd(MOTOR_INJ , HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2753 : //				motorSleepCmd(MOTOR_INJ , R_HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2755 : 				motorSleepCmd(MOTOR_INJ , R_HOME_DIR_INJ);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2836 : 				motorSleepCmd(MOTOR_SYR , HOME_DIR_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2871 : //					motorSleepCmd(MOTOR_SYR , HOME_DIR_SYR);
motorControlWho in testPrgm.c (Ch_AS4\apps_layer) line 2054 : 				motorSleepCmd(who , MotorCtrlSet.bDir[who]);
---- sleepModeAll Matches (13 in 4 files) ----
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 549 : 			if(sleepModeAll()) {
LcasAction_task.c (Ch_AS4\apps_layer) line 559 : int sleepModeAll()
stateChange in LcasAction_task.c (Ch_AS4\apps_layer) line 890 : 				//sleepModeAll();
mix_waitPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4156 : 			if(sleepModeAll()) subMenu_mwp++;
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4418 : 			if(sleepModeAll()) {
LcasAction_task.c (Ch_AS4\apps_layer) line 4636 : 						if(sleepModeAll()) {
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 5139 : 			if(sleepModeAll()) {
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5204 : 			if(sleepModeAll()) {
LcasAction_task.h (Ch_AS4\inc) line 36 : int	sleepModeAll();
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4824 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1692 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1720 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1750 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
---- motorSleepAll Matches (4 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 6590 : //motorSleepAll();
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2393 : void motorSleepAll()
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4954 : 		motorSleepAll();
MotorCtrl_task.h (Ch_AS4\inc) line 96 : void motorSleepAll();
---- endSequence Matches (3 in 2 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 486 : int	endSequence()
LcasAction_task.c (Ch_AS4\apps_layer) line 4724 : 					if(endSequence())	{
LcasAction_task.h (Ch_AS4\inc) line 34 : int endSequence();	// 현재실행중인 시퀀스가 끝났다.
---- AS_ACTION_READY Matches (11 in 5 files) ----
ComType_AS.h (Ch_AS4\common_inc) line 188 : #define AS_ACTION_READY								(2)
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4419 : 				devState.actionMenu	=	AS_ACTION_READY;
LcasAction_task.c (Ch_AS4\apps_layer) line 4725 : 						devState.actionMenu	=	AS_ACTION_READY;
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 5140 : 				devState.actionMenu	=	AS_ACTION_READY;
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5205 : 				devState.actionMenu	=	AS_ACTION_READY;
led_Control in led_task.c (Ch_AS4\apps_layer) line 86 : 		case AS_ACTION_READY:
main in main.c (Ch_AS4) line 330 : 	pAction_Fn[AS_ACTION_READY] = actionReady;				// AS_ACTION_READY
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3322 : //			if(devState.actionMenu == AS_ACTION_READY || devState.actionMenu == AS_ACTION_ADJUST || devState.actionMenu == AS_ACTION_DIAGNOSTICS) {
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3323 : 			if(devState.actionMenu == AS_ACTION_READY || devState.actionMenu == AS_ACTION_ADJUST || devState.actionMenu == AS_ACTION_DIAGNOSTICS || devState.actionMenu == AS_ACTION_FAULT) {
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3619 : 			devState.actionMenu	=	AS_ACTION_READY;
---- AS_ACTION_RUN Matches (13 in 4 files) ----
ComType_AS.h (Ch_AS4\common_inc) line 206 : #define AS_ACTION_RUN									(4)
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 411 : 	VIAL_POS_t sample;			// 분석해야할 sample (devState.actionMenu == AS_ACTION_RUN , 현재 실행중(devState.actionMenu == AS_ACTION_RUN) 
startLoadingCommand in LcasAction_task.c (Ch_AS4\apps_layer) line 839 : //		devState.actionMenu	=	AS_ACTION_RUN;
actionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 4469 : 				devState.actionMenu	=	AS_ACTION_RUN;
actionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 4484 : 					devState.actionMenu	=	AS_ACTION_RUN;
actionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 4489 : //					devState.actionMenu	=	AS_ACTION_RUN;						
actionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 4494 : 					devState.actionMenu	=	AS_ACTION_RUN;						
actionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 4507 : 				devState.actionMenu	=	AS_ACTION_RUN;												
led_Control in led_task.c (Ch_AS4\apps_layer) line 94 : 				if(oldMenu != AS_ACTION_RUN) {
led_Control in led_task.c (Ch_AS4\apps_layer) line 102 : 		case AS_ACTION_RUN:
main in main.c (Ch_AS4) line 332 : 	pAction_Fn[AS_ACTION_RUN] = actionRun;					// AS_ACTION_RUN
---- dfp Matches (353 in 9 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 10 : #define dfp(fmt,args...) iprintf( "DFP [%s %d]-" fmt, __FUNCTION__,__LINE__, ## args ) 
debug_inform.h (Ch_AS4\ryu_inc) line 32 : #define dfp(fmt,args...) 
Def_stepCon.h (Ch_AS4\common_inc) line 365 : dfp("======  X  readCount=[%d] [%d]\n", readCount , encoderCount_X); \
Def_stepCon.h (Ch_AS4\common_inc) line 373 : dfp("======  Y  readCount=[%d] [%d]\n", readCount , encoderCount_Y); \
Def_stepCon.h (Ch_AS4\common_inc) line 382 : dfp("======  Z  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 400 : dfp("xxxxxxxxxxxxx======  Syringe  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 409 : dfp("======  Valve  readCount=[%d]\n", readCount ); \
Def_stepCon.h (Ch_AS4\common_inc) line 419 : dfp("======  Injector  readCount=[%d] \n", readCount ); \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 187 : 		dfp("subMenu_w=%d  stateSYR=%x\n",subMenu_w,devState.btMotorState[MOTOR_SYR]);
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 495 :     dfp("subMenu_es=%d\n",subMenu_es);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 567 : 		dfp("subMenu_sma=%d\n",subMenu_sma);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 608 : 		dfp("subMenu_sma=%d\n",subMenu_sma);
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 652 : 		dfp("subMenu_wxch=%d stateSYR=%x\n",subMenu_wxch,devState.btMotorState[MOTOR_SYR]);		
startInjectionFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 770 : dfp("if(devState.auxTime100msCnt[0] == 0) devState.curAuxEventNo = %d\n\r",devState.curAuxEventNo);
startLoadingCommand in LcasAction_task.c (Ch_AS4\apps_layer) line 835 : 	dfp("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
LcasAction_task.c (Ch_AS4\apps_layer) line 913 :   dfp("subMenu_ghcx=%d\n",subMenu_ghcx);
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 991 : dfp("sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 996 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1001 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1006 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1011 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1016 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1023 : dfp("END sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1067 : dfp("sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1072 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1077 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1082 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1087 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1092 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1099 : dfp("END sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);			
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1168 :     dfp("subMenu_as=%d\n",subMenu_as);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1177 : dfp("tray[%d] pos[%d][%d]\n",pVial->uPos.tray,pVial->uPos.x,pVial->uPos.y);			
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1290 : dfp("<<<aspirateSample --- goZ_Encoder(POS_Z_TOP, ACT_XY_POS)>>>!!\n");															
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1298 : dfp("<<<aspirateSample --- error = %d \n",error);																			
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1313 : dfp("<<<aspirateSample --- error = %d \n",error);																			
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1431 : 		dfp("subMenu_fli=%d  stateSYR=%x\n",subMenu_fli,devState.btMotorState[MOTOR_SYR]);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1552 : dfp("missing %d	\n",devState.missVialResponse);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1563 : dfp("if(runSetup.airSegment ==	YES) %d	\n",devState.missVialResponse);													
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1626 : dfp("missing %d	\n",devState.missVialResponse);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1785 : 		dfp("subMenu_pli=%d\n",subMenu_pli);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1880 : dfp("missing %d	\n",devState.missVialResponse);													
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1947 : dfp("missing %d	\n",devState.missVialResponse);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1968 : dfp(">>>>injectVial=(%d,%d) sample=(%d,%d)\n",LcasState.injectVial.uPos.x,LcasState.injectVial.uPos.y,LcasState.sample.uPos.x,LcasState.sample.uPos.y);													
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2036 : dfp(">>>>>injectVial=(%d,%d) sample=(%d,%d)\n",LcasState.injectVial.uPos.x,LcasState.injectVial.uPos.y,LcasState.sample.uPos.x,LcasState.sample.uPos.y);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2197 : 		dfp("subMenu_mpi=%d\n",subMenu_mpi);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2307 : dfp("missing %d	\n",devState.missVialResponse);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2376 : dfp("missing %d	\n",devState.missVialResponse);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2494 : //dfp("==========sampleVolume=%d  transportVolume=%d injectionVolume=%d\n",sampleVolume,(int)(transportVolume*10),(int)(injectionVolume*10));
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2518 : 		dfp("subMenu_mpi=%d\n",subMenu_mpi);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2650 : dfp("missing %d	\n",devState.missVialResponse);													
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2739 : //dfp("==========sampleVolume=%d  transportVolume=%d injectionVolume=%d\n",sampleVolume,(int)(transportVolume*10),(int)(injectionVolume*10));
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 3141 : dfp("===================sysConfig.trayRight = %d\n",sysConfig.trayRight);
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3314 : dfp("RE_OK============\n");			
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3315 : dfp("pVial->uPos (%d,%d)\n",pVial->uPos.x, pVial->uPos.y);
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3319 : dfp("RE_ERR===========\n");			
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3413 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3418 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3423 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3428 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3433 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
mix_ProgramNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3483 : 					dfp("mixSet.mixTable[%d].action = %d\n",devState.mixTableNo,mixSet.mixTable[devState.mixTableNo].action);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3563 : 		dfp("===================================subMenu_map=%d\n",subMenu_map);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3643 : //dfp("===================================aspirateReturn = %d	\n",aspirateReturn);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3652 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3688 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3689 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3702 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3760 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3784 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3785 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3798 : dfp("MISSING_VIAL_STOP %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3853 : 		dfp("subMenu_mmp=%d\n",subMenu_mmp);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3962 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4002 : dfp("missing %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4081 : dfp("repeat\n");
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 4199 : dfp("AUX_SIG_OUT_CONTACT_CLOSE\n\r");				
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 4203 : dfp("AUX_SIG_OUT_CONTACT_OPEN\n\r");								
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 4215 : dfp("AUX_CONTACT_OPEN devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 4222 : dfp("AUX_CONTACT_CLOSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);					
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 4228 : dfp("AUX_TOGGLE---AUX_CONTACT_OPEN devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);																
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 4233 : dfp("AUX_TOGGLE---AUX_SIG_OUT_CONTACT_CLOSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);																						
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 4240 : dfp("AUX_PULSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 4246 : dfp("devState.curAuxEventNo = %d\n\r",devState.curAuxEventNo);																								
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 4252 : dfp("time_Event end \n\r");
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4372 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4422 : dfp("====== end function : initialize\n");
actionReady in LcasAction_task.c (Ch_AS4\apps_layer) line 4433 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 4458 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 4536 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
LcasAction_task.c (Ch_AS4\apps_layer) line 4662 : dfp("if(devState.doNextSample == YES) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");						
LcasAction_task.c (Ch_AS4\apps_layer) line 4664 : dfp("if(devState.vialExist == NO) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");													
LcasAction_task.c (Ch_AS4\apps_layer) line 4676 : //dfp("<<<analysisTime= %d %d	isNextInjection == YES %d >>>!!\n",devState.analysisTime100msCnt,devState.analysisTime100ms,devState.isNextInjection);
LcasAction_task.c (Ch_AS4\apps_layer) line 4688 : dfp("if(devState.isNextInjection == YES) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");								
LcasAction_task.c (Ch_AS4\apps_layer) line 4702 : dfp("devState.vialExist	=	NO \n");
LcasAction_task.c (Ch_AS4\apps_layer) line 4710 : dfp("if(devState.isNextInjection	== YES)<<<analysisTime= %d %d	isNextInjection == YES %d >>>!!\n",devState.analysisTime100msCnt,devState.analysisTime100ms,devState.isNextInjection);
LcasAction_task.c (Ch_AS4\apps_layer) line 4729 : dfp("<<<SELF_END_SEQUENCE>>>	devState.vialExist = %d\n",devState.vialExist);		
actionFault in LcasAction_task.c (Ch_AS4\apps_layer) line 4743 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionStandby in LcasAction_task.c (Ch_AS4\apps_layer) line 4755 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagnostics in LcasAction_task.c (Ch_AS4\apps_layer) line 4767 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagHeaterCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 4804 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagCoolerCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 4922 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagTempsenCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 5019 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 5104 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5162 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5209 : dfp("<<<AS_SERVICE_WASH_END>>>	\n");
actionStopFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 5221 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
convert_SystemConfig_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5787 : dfp("sysConfig.trayLeft= [%d] sysConfig.trayRight= [%d]\n",sysConfig.trayLeft, sysConfig.trayRight);
convert_SystemConfig_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5788 : //dfp("initSystemConfig sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
initSystemConfig_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5839 : dfp("initSystemConfig ======== not Save Data --- Init=================== %d\n");
usedTimeCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6335 : dfp("\n");				
CheckPowerBtn in LcasAction_task.c (Ch_AS4\apps_layer) line 6533 : //dfp("signalIn = 0x%08x\n",signalIn);
LcasAction_task.c (Ch_AS4\apps_layer) line 6592 : dfp("SELF_ERROR_DOOR_OPEN\n");
LcasAction_task.c (Ch_AS4\apps_layer) line 6619 : dfp("SELF_ERROR_LEAK\n");
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6682 : dfp("SELF_ERROR_DOOR_OPEN\n");
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6707 : dfp("SELF_ERROR_LEAK\n");
main in main.c (Ch_AS4) line 424 : dfp("chk_Dir [Z %08x] [Y %08x] [X %08x] [S %08x] [YS %8x]\n",devState.chk_Dir[MOTOR_Z],devState.chk_Dir[MOTOR_Y],devState.chk_Dir[MOTOR_X],devState.chk_Dir[MOTOR_SYR], devState.chk_Dir[MOTOR_INJ]);
testMain in main.c (Ch_AS4) line 590 : 	//dfp("s1[%08X] s2[%08X] m3[%08X]\n",samState.btMotorState[MOTOR_SAM1], samState.btMotorState[MOTOR_SAM2], samState.btMotorState[MOTOR_M3]);						
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 458 : dfp("Error...... MOVE_ERR_BOTH\n");
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 461 : dfp("Error...... MOVE_ERR_VIALCHK\n");
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 464 : dfp("Error...... MOVE_ERR_NDLCHK\n");							
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 467 : dfp("OK...... MOVE_CMD_OK\n");												
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 555 : dfp("Error...... MOVE_ERR_BOTH %x\n",stateZ);
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 558 : dfp("Error...... MOVE_ERR_VIALCHK %x\n",stateZ);				
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 561 : dfp("Error...... MOVE_ERR_NDLCHK %x\n",stateZ);					
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 588 : 				dfp("AccelStep = %d\n",AccelStep);
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 594 : 				dfp("DeaccStep = %d\n",DeaccStep);				
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 597 : //dfp("[%d] tot=%d Acc=%d deacc=%d min=%d max=%d\n",who,totalStep,AccelStep,DeaccStep, minSpeed, maxSpeed);		
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 613 : //dfp("who[%d] ctrlCmd[0x%x]\n",who,ctrlCmd);				
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 679 : 	dfp("Error...... MOVE_ERR_BOTH\n");
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 683 : 	dfp("Error...... MOVE_ERR_BOTH__VIAL_CHECK\n");								
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 687 : 	dfp("Error...... MOVE_ERR_BOTH__Z_AXIS_CHECK\n");								
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 714 : 				dfp("AccelStep = %d\n",AccelStep);
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 720 : 				dfp("DeaccStep = %d\n",DeaccStep);				
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 726 : dfp("[%d] totalStep=%d  minSpeed=%d AccelStep=%d DeaccStep=%d ctrlCmd=0x%x\n",who,totalStep, minSpeed, AccelStep, DeaccStep, ctrlCmd);
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 744 : //dfp("who[%d] ctrlCmd[0x%x]\n",who,ctrlCmd);				
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 816 :     dfp("subMenu_grpx=%d\n",subMenu_grpx);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 876 :     dfp("subMenu_grpy=%d\n",subMenu_grpy);
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 939 :     dfp("subMenu_grpz=%d\n",subMenu_grpz);
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 993 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1015 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1037 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1057 :     dfp("subMenu_rcrx=%d\n",subMenu_rcrx);
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1075 : dfp("encoderCount =%d\n",encoderCount);
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1094 :     dfp("subMenu_rcry=%d\n",subMenu_rcry);
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1112 : dfp("encoderCount =%d\n",encoderCount);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1131 :     dfp("subMenu_rcrz=%d\n",subMenu_rcrz);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1154 : dfp("=============================================Count Z=%d\n",encoderCount);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1159 : dfp("encoderCount =%d\n",encoderCount);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1182 :     dfp("subMenu_gpv=%d\n",subMenu_gpv);
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1237 : //dfp("curStep=%d\n",(int)devState.curStep[MOTOR_X]);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1306 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_X]);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1390 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_X]);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1460 : //dfp("curStep=%d\n",(int)devState.curStep[MOTOR_Y]);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1524 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_Y]);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1602 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_Y]);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1755 :     dfp("subMenu_gpvz=%d\n",subMenu_gpvz);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1837 : 	    dfp("subMenu_gpez=%d\n",subMenu_gpez);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1937 : 	    dfp("subMenu_gpezc=%d\n",subMenu_gpezc);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2494 : 	    dfp("subMenu_ihpv=%d\n",subMenu_ihpv);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2634 : 	    dfp("subMenu_ihpi=%d\n",subMenu_ihpi);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2778 : 	    dfp("subMenu_ihps=%d\n",subMenu_ihps);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2896 :     dfp("subMenu_ihpz=%d\n",subMenu_ihpz);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3034 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3046 : dfp("stepCount_3=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3085 : dfp("stepCount_3=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3104 : dfp("stepCount_6=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3124 : dfp("stepCount_9=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3152 : dfp("stepCount_12=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3179 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3303 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3315 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3354 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3373 : //dfp("stepCount_6=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3392 : //dfp("stepCount_9=%d\n",stepCount);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3424 :     dfp("subMenu_ihpy=%d\n",subMenu_ihpy);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3547 :     dfp("subMenu_ihpy=%d\n",subMenu_ihpy);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3649 :     dfp("subMenu_ihpa=%d\n",subMenu_ihpa);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3779 : dfp("====== end function! \n");
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3841 :     dfp("subMenu_ami=%d\n",subMenu_ami);
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4038 : 	    dfp("subMenu_ane=%d\n",subMenu_ane);
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4096 :     dfp("subMenu_ase=%d\n",subMenu_ase);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4829 : dfp("devState.command == COMMAND_ABORT\n");
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 170 : dfp("check--ERROR--PACKCODE_LCAS_SYSTEM_INFORM (%s)\n",tmp.cModel);
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 175 : dfp("check--EQUAL--PACKCODE_LCAS_SYSTEM_INFORM (%s)\n",tmp.cModel);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 229 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 230 : dfp("tmp.cSerialNo = %s \n",tmp.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 234 : dfp("sysInform.cInstallDate.year = %d month = %d date = %d\n",sysInform.cInstallDate.year,sysInform.cInstallDate.month,sysInform.cInstallDate.date);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 246 : dfp("as_INFO.cSerialNo = %s \n",as_INFO.cSerialNO);
net_SystemConfig in net_AS.c (Ch_AS4\apps_layer) line 536 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 648 : 	dfp("Cal Temp Load !!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 652 : 	dfp("Cal Temp Load Error!!!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 674 : 	dfp("GfTempConstA = %d GfTempConstB = %d GfTempConstC = %d\n", (int)(GfTempConstA*100), (int)(GfTempConstB*100), (int)(GfTempConstC*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 675 : 	dfp("tempCalData.setTemp1 = %d setTemp2 = %d meaTemp1 = %d meaTemp2 = %d\n", (int)(tempCalData.setTemp1*100), (int)(tempCalData.setTemp2*100), (int)(tempCalData.meaTemp1*100),(int)(tempCalData.meaTemp2*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 763 : dfp("Cal Temp Load !!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 767 : dfp("Cal Temp Load Error!!!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 788 : dfp("GfTempConstA = %d GfTempConstB = %d GfTempConstC = %d\n", (int)(GfTempConstA*100), (int)(GfTempConstB*100), (int)(GfTempConstC*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 789 : dfp("tempCalData.setTemp1 = %d setTemp2 = %d meaTemp1 = %d meaTemp2 = %d\n", (int)(tempCalData.setTemp1*100), (int)(tempCalData.setTemp2*100), (int)(tempCalData.meaTemp1*100),(int)(tempCalData.meaTemp2*100));
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1062 : dfp("tmp.useAuxTimeEvent = %d 	tmp.initAux = %d tmp.auxOutSigTim = %d\n",tmp.useAuxTimeEvent, tmp.initAux,tmp.auxOutSigTime);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1063 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1106 : //dfp("============Time Event :  devState.auxTime100msCnt[%d]=%d\n\r",i,devState.auxTime100msCnt[i]);		
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1108 : dfp("============Time Event :  devState.auxTime100msCnt[%d]=%d\n\r",0,devState.auxTime100msCnt[0]);		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1137 : dfp("ERROR1 : Mix Setup\n");		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1138 : dfp("firstDestPos.uPos rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeDestination,tmp.firstDestPos.uPos.tray,tmp.firstDestPos.uPos.etc, tmp.firstDestPos.uPos.x, tmp.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1139 : dfp("reagentPosA.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentA,tmp.reagentPosA.uPos.tray,tmp.reagentPosA.uPos.etc, tmp.reagentPosA.uPos.x, tmp.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1140 : dfp("reagentPosB.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentB,tmp.reagentPosB.uPos.tray,tmp.reagentPosB.uPos.etc, tmp.reagentPosB.uPos.x, tmp.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1141 : dfp("reagentPosC.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentC,tmp.reagentPosC.uPos.tray,tmp.reagentPosC.uPos.etc, tmp.reagentPosC.uPos.x, tmp.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1142 : dfp("reagentPosD.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentD,tmp.reagentPosD.uPos.tray,tmp.reagentPosD.uPos.etc, tmp.reagentPosD.uPos.x, tmp.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1151 : dfp(" Receive Mix Error \n");		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1160 : dfp(" Receive Mix Error \n");				
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1169 : dfp(" Receive Mix Error \n");				
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1178 : dfp(" Receive Mix Error \n");					
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1190 : 	dfp("ERROR : Mix Setup = %d %d \n",tmp.firstDestPos.uPos.tray,tmp.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1191 : dfp("firstDestPos.uPos rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeDestination,tmp.firstDestPos.uPos.tray,tmp.firstDestPos.uPos.etc, tmp.firstDestPos.uPos.x, tmp.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1192 : dfp("reagentPosA.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentA,tmp.reagentPosA.uPos.tray,tmp.reagentPosA.uPos.etc, tmp.reagentPosA.uPos.x, tmp.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1193 : dfp("reagentPosB.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentB,tmp.reagentPosB.uPos.tray,tmp.reagentPosB.uPos.etc, tmp.reagentPosB.uPos.x, tmp.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1194 : dfp("reagentPosC.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentC,tmp.reagentPosC.uPos.tray,tmp.reagentPosC.uPos.etc, tmp.reagentPosC.uPos.x, tmp.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1195 : dfp("reagentPosD.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentD,tmp.reagentPosD.uPos.tray,tmp.reagentPosD.uPos.etc, tmp.reagentPosD.uPos.x, tmp.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1199 : 	dfp(" Mix Setup = %d %d \n",tmp.firstDestPos.uPos.tray,tmp.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1250 : dfp("firstDestVial.pos (%x)\n",mixSet.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1251 : dfp("reagentVialA.pos (%x)\n",mixSet.reagentPosA.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1252 : dfp("reagentVialB.pos (%x)\n",mixSet.reagentPosB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1253 : dfp("reagentVialC.pos (%x)\n",mixSet.reagentPosC.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1254 : dfp("reagentVialD.pos (%x)\n",mixSet.reagentPosD.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1255 : dfp("firstDestVial.uPos (%d,%d)\n",mixSet.firstDestPos.uPos.x, mixSet.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1256 : dfp("reagentVialA.uPos (%d,%d)\n",mixSet.reagentPosA.uPos.x, mixSet.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1257 : dfp("reagentVialB.uPos (%d,%d)\n",mixSet.reagentPosB.uPos.x, mixSet.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1258 : dfp("reagentVialC.uPos (%d,%d)\n",mixSet.reagentPosC.uPos.x, mixSet.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1259 : dfp("reagentVialD.uPos (%d,%d)\n",mixSet.reagentPosD.uPos.x, mixSet.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1264 : dfp("sequence.firstSamplePos (%d,%d)\n",sequence.firstSamplePos.uPos.x, sequence.firstSamplePos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1265 : dfp("firstSamplePosCnt =%d\n",firstSamplePosCnt);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1323 : dfp("cnt = %d  devState.reagentVialB.pos = %d\n",cnt,devState.reagentVialB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1344 : dfp("==============firstDestVial.pos (%x)\n",devState.firstDestVial.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1345 : dfp("reagentVialA.pos (%x)\n",devState.reagentVialA.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1346 : dfp("reagentVialB.pos (%x)\n",devState.reagentVialB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1347 : dfp("reagentVialC.pos (%x)\n",devState.reagentVialC.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1348 : dfp("reagentVialD.pos (%x)\n",devState.reagentVialD.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1349 : dfp("firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1350 : dfp("reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1351 : dfp("reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1352 : dfp("reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1353 : dfp("reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1445 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1457 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1458 : dfp("tmp.firstSamplePos.pos = %x\n", tmp.firstSamplePos.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1459 : dfp("tmp.lastSamplePos.pos = %x\n", tmp.lastSamplePos.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1461 : dfp("tmp.firstSamplePos.uPos (%d,%d)\n",tmp.firstSamplePos.uPos.x, tmp.firstSamplePos.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1462 : dfp("tmp.lastSamplePos.uPos (%d,%d)\n",tmp.lastSamplePos.uPos.x, tmp.lastSamplePos.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1464 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1471 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1473 : dfp("--PACKCODE_LCAS_SEQUENCE - net_Sequence\n");					
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1540 : dfp("==============firstDestVial.pos (%x)\n",devState.firstDestVial.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1541 : dfp("reagentVialA.pos (%x)\n",devState.reagentVialA.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1542 : dfp("reagentVialB.pos (%x)\n",devState.reagentVialB.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1543 : dfp("reagentVialC.pos (%x)\n",devState.reagentVialC.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1544 : dfp("reagentVialD.pos (%x)\n",devState.reagentVialD.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1545 : dfp("firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1546 : dfp("reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1547 : dfp("reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1548 : dfp("reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1549 : dfp("reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3130 : 				if(IS_REQUEST_PACKET(pData)) {			dfp("XXXXXXXXIS_REQUEST_PACKET--PACKCODE_LCAS_SYSTEM_INFORM\n");				
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3133 : 				else if(IS_ACK_PACKET(pData)){	dfp("ack--PACKCODE_LCAS_SYSTEM_INFORM\n");				}
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3134 : 				else {	dfp("rcv--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3154 : dfp("snd--PACKCODE_LCAS_SYSTEM_INFORM sysInform.cVersion = %s\n",sysInform.cVersion);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3157 : dfp("ack--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3160 : //dfp("rcv--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3172 : dfp("snd--PACKCODE_LCAS_ETHERNET_CONFIG ethernetConfig.cGateway = %s\n",ethernetConfig.cGateway);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3175 : dfp("ack--PACKCODE_LCAS_ETHERNET_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3178 : //dfp("rcv--PACKCODE_LCAS_ETHERNET_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3190 : dfp("snd--PACKCODE_LCAS_SYSTEM_CONFIG sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3193 : dfp("ack--PACKCODE_LCAS_SYSTEM_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3197 : //dfp("rcv--PACKCODE_LCAS_SYSTEM_CONFIG sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3209 : dfp("snd--PACKCODE_LCAS_RUN_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3212 : dfp("ack--PACKCODE_LCAS_RUN_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3219 : dfp("snd--PACKCODE_LCAS_TIME_EVENT\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3222 : dfp("ack--PACKCODE_LCAS_TIME_EVENT\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3229 : dfp("snd--PACKCODE_LCAS_MIX_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3232 : dfp("ack--PACKCODE_LCAS_MIX_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3241 : dfp("snd--PACKCODE_LCAS_SEQUENCE\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3244 : dfp("snd--PACKCODE_LCAS_SEQUENCE\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3288 : dfp("========================missing %d	\n",devState.missVialResponse);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3306 : dfp("========================missing %d	\n",devState.missVialResponse);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3553 : dfp("PACKCODE_LCAS_SETUP request -- \n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3557 : dfp("PACKCODE_LCAS_SETUP  packet \n");
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3593 : dfp("net_ServiceDiagnostics service.subCommand = %d \n",service.subCommand1);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3728 : dfp("Cal Temp - Measure temp 1 Receive!!!\n");
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3744 : dfp("Cal Temp - Measure temp 2 Receive!!!\n");
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3758 : dfp("Cal Temp - TEMP_CAL_SAVE  !!\n");
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3906 : 	dfp("heat=%d %d",usedTime.heatTime,tmp.heatTime);
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3907 : 	dfp("ff=%d %d",ff,tmp.heatTime);
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3908 : 	dfp("iff=0x%x iff=%d %d",iff,tmp.time);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3998 : dfp("led=%d door=%d leak=%d buz=%d = NO\n",special.LED_onoff,special.Door_check,special.Leak_check,special.Buzzer_onoff);
rtcTime_Init in sysconfig.c (Ch_AS4\apps_layer) line 418 : dfp("rtcWrite_time\n");	
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 479 : dfp("rand = %x %x time=%d\n",r[i], my_mac[i], time);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 595 : dfp("rand = %x %x time=%d\n",r[i], my_mac[i], time);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 601 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 648 : dfp("[default MAC] my_mac[0]=[0x%x] [0x%x] [0x%x] [0x%x] [0x%x] [0x%x] \n\r",
loadEthernetConfig in sysconfig.c (Ch_AS4\apps_layer) line 743 : 	dfp("load === my_ip[0]=[0x%x] [0x%x] [0x%x] [0x%x] \n\r",
tcp_server_accept in tcp_server.c (Ch_AS4\apps_layer) line 202 : dfp("Client is connected \r\n");
machineTest_Function_Set in testPrgm.c (Ch_AS4\apps_layer) line 130 : 	dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 275 : 		dfp("Core_gpioInputn = 0x%08x\n",Core_gpioInput);	
testPrgm.c (Ch_AS4\apps_layer) line 290 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 296 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 302 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 308 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 322 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 328 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 334 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 340 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 353 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 359 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 365 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 371 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
machineTest_Mode_X in testPrgm.c (Ch_AS4\apps_layer) line 401 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_X in testPrgm.c (Ch_AS4\apps_layer) line 446 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_Y in testPrgm.c (Ch_AS4\apps_layer) line 461 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_Y in testPrgm.c (Ch_AS4\apps_layer) line 506 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_Z in testPrgm.c (Ch_AS4\apps_layer) line 521 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_Z in testPrgm.c (Ch_AS4\apps_layer) line 566 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_SYR in testPrgm.c (Ch_AS4\apps_layer) line 581 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_SYR in testPrgm.c (Ch_AS4\apps_layer) line 626 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_VAL in testPrgm.c (Ch_AS4\apps_layer) line 641 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_VAL in testPrgm.c (Ch_AS4\apps_layer) line 686 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_INJ in testPrgm.c (Ch_AS4\apps_layer) line 701 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_INJ in testPrgm.c (Ch_AS4\apps_layer) line 746 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 766 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,func);
machineTest_Mode_X_Y_Z in testPrgm.c (Ch_AS4\apps_layer) line 869 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
machineTest_Mode_X_Y_Z in testPrgm.c (Ch_AS4\apps_layer) line 880 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,acting);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1180 :     dfp("M_TEST_XYZ_Z_UP_LONG=%d\n",M_TEST_XYZ_Z_UP_LONG);		      
machineTest_Mode_VAL_SYR in testPrgm.c (Ch_AS4\apps_layer) line 1306 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
machineTest_Mode_VAL_SYR in testPrgm.c (Ch_AS4\apps_layer) line 1317 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,acting);
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1463 : 						dfp("goVal - POS_VAL_NEEDLE %d \n",func);										
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1509 : 		dfp("goVal - POS_VAL_WASHING %d \n",func);						
machineTest_Mode_VAL_Home in testPrgm.c (Ch_AS4\apps_layer) line 1662 :     dfp("subMenu_mtvh=%d\n",subMenu_mtvh);
machineTest_Mode_SYR_Home in testPrgm.c (Ch_AS4\apps_layer) line 1697 :     dfp("subMenu_mtsh=%d\n",subMenu_mtsh);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1732 :     dfp("subMenu_mtvsc=%d\n",subMenu_mtvsc);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1746 : //dfp("<<<aspirateSample --- goPosVial>>>!! == devState.btMotorState[MOTOR_Z]=%x\n",devState.btMotorState[MOTOR_Z]);	
machineTest_Mode_BOARD_ALL in testPrgm.c (Ch_AS4\apps_layer) line 1816 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_BOARD_ALL in testPrgm.c (Ch_AS4\apps_layer) line 1861 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 1883 : 		dfp("Core_gpioInputn = 0x%08x\n",Core_gpioInput);	
testPrgm.c (Ch_AS4\apps_layer) line 1889 : dfp("machineTest_Mode = 0x%08\n",Mode);	
testPrgm.c (Ch_AS4\apps_layer) line 1928 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1934 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1940 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1946 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1960 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1966 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1972 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1978 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1991 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1997 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 2003 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 2009 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
---- ##[ Matches (1 in 1 files) ----
main in main.c (Ch_AS4) line 498 : 	dprintf("##[ ACTION: Menu[%d] Submenu[%d] ]##\n",
---- xxxx Matches (3 in 1 files) ----
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 267 : dp("xxxx   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 302 : dp("xxxx-   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 414 : dp("xxxx-   Valve readCount=[%d]\n", readCount);
---- startInjectionFunction Matches (6 in 2 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 751 : int	startInjectionFunction()	// 인젝션	시작
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1692 : 						startInjectionFunction();
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2034 : 						startInjectionFunction();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2443 : 					startInjectionFunction();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2705 : 								startInjectionFunction();
LcasAction_task.h (Ch_AS4\inc) line 39 : int startInjectionFunction();
---- startLoadingCommand Matches (5 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 833 : int	startLoadingCommand()	// 주입을	위한 준비
remoteControl in LcasAction_task.c (Ch_AS4\apps_layer) line 6469 : 								startLoadingCommand();
remoteControl in LcasAction_task.c (Ch_AS4\apps_layer) line 6471 : 				dp("startLoadingCommand\n\r");
LcasAction_task.h (Ch_AS4\inc) line 41 : int startLoadingCommand();
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1635 : 				startLoadingCommand();
---- sleepModeAll Matches (13 in 4 files) ----
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 549 : 			if(sleepModeAll()) {
LcasAction_task.c (Ch_AS4\apps_layer) line 559 : int sleepModeAll()
stateChange in LcasAction_task.c (Ch_AS4\apps_layer) line 890 : 				//sleepModeAll();
mix_waitPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4156 : 			if(sleepModeAll()) subMenu_mwp++;
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4418 : 			if(sleepModeAll()) {
LcasAction_task.c (Ch_AS4\apps_layer) line 4636 : 						if(sleepModeAll()) {
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 5139 : 			if(sleepModeAll()) {
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5204 : 			if(sleepModeAll()) {
LcasAction_task.h (Ch_AS4\inc) line 36 : int	sleepModeAll();
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4824 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1692 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1720 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1750 : // 초기화를 마친후 sleepModeAll() 에서 devState.initCommand = NO;로 만든다.
---- startInjectionFunction Matches (6 in 2 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 751 : int	startInjectionFunction()	// 인젝션	시작
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1692 : 						startInjectionFunction();
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2034 : 						startInjectionFunction();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2443 : 					startInjectionFunction();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2705 : 								startInjectionFunction();
LcasAction_task.h (Ch_AS4\inc) line 39 : int startInjectionFunction();
---- startInjectionFunction Matches (6 in 2 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 751 : int	startInjectionFunction()	// 인젝션	시작
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1692 : 						startInjectionFunction();
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2034 : 						startInjectionFunction();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2443 : 					startInjectionFunction();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2705 : 								startInjectionFunction();
LcasAction_task.h (Ch_AS4\inc) line 39 : int startInjectionFunction();
---- motorSleepCmd Matches (35 in 4 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 316 : 	#define motorSleepCmd(WHO , DIR) 	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (DIR | CMD_SLEEP); }
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 368 : 				motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 369 : 				motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 448 : 				motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 449 : 				motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 574 : 			motorSleepCmd(MOTOR_X	,	HOME_DIR_X);			motorSleepCmd(MOTOR_Y	,	HOME_DIR_Y);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 575 : 			motorSleepCmd(MOTOR_Z	,	HOME_DIR_Z);			motorSleepCmd(MOTOR_SYR	,	HOME_DIR_SYR);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 576 : 			motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);			motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 615 : 			motorSleepCmd(MOTOR_X	,	HOME_DIR_X);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 616 : 			motorSleepCmd(MOTOR_Y	,	HOME_DIR_Y);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 617 : 			motorSleepCmd(MOTOR_Z	,	HOME_DIR_Z);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 619 : 			motorSleepCmd(MOTOR_SYR	,	HOME_DIR_SYR);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 621 : 			motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 622 : 			motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
LcasAction_task.c (Ch_AS4\apps_layer) line 4642 : //						motorSleepCmd(MOTOR_VAL	,	HOME_DIR_VAL);
LcasAction_task.c (Ch_AS4\apps_layer) line 4643 : //						motorSleepCmd(MOTOR_INJ	,	HOME_DIR_INJ);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2398 : 	motorSleepCmd(MOTOR_X , 	devState.curDir[MOTOR_X]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2399 : 	motorSleepCmd(MOTOR_Y , 	devState.curDir[MOTOR_Y]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2400 : 	motorSleepCmd(MOTOR_Z , 	devState.curDir[MOTOR_Z]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2401 : 	motorSleepCmd(MOTOR_SYR , 	devState.curDir[MOTOR_SYR]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2402 : 	motorSleepCmd(MOTOR_VAL , 	devState.curDir[MOTOR_VAL]);
motorSleepAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2403 : 	motorSleepCmd(MOTOR_INJ , 	devState.curDir[MOTOR_INJ]);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2564 : 				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2597 : //				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2599 : 				motorSleepCmd(MOTOR_VAL , HOME_DIR_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2705 : 				motorSleepCmd(MOTOR_INJ , HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2751 : //				motorSleepCmd(MOTOR_INJ , HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2753 : //				motorSleepCmd(MOTOR_INJ , R_HOME_DIR_INJ);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2755 : 				motorSleepCmd(MOTOR_INJ , R_HOME_DIR_INJ);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2836 : 				motorSleepCmd(MOTOR_SYR , HOME_DIR_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2871 : //					motorSleepCmd(MOTOR_SYR , HOME_DIR_SYR);
motorControlWho in testPrgm.c (Ch_AS4\apps_layer) line 2054 : 				motorSleepCmd(who , MotorCtrlSet.bDir[who]);
---- readyChkEncoder_Z Matches (11 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 379 : 	#define readyChkEncoder_Z()	{ \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 366 : 				//readyChkEncoder_Z();
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 446 : 				//readyChkEncoder_Z();
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1210 : 				readyChkEncoder_Z();		
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1236 : 				readyChkEncoder_Z();		      
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1266 : 				readyChkEncoder_Z();    // WAIT_TIME_VALUE_CASE_STATE  잇으면 다음 case로 이 
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1311 : 				readyChkEncoder_Z();      
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2085 : //readyChkEncoder_Z();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2493 : 						//readyChkEncoder_Z();
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1782 : 				readyChkEncoder_Z();
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1812 : 				readyChkEncoder_Z();			
---- readyChkEncoder_Z Matches (11 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 379 : 	#define readyChkEncoder_Z()	{ \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 366 : 				//readyChkEncoder_Z();
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 446 : 				//readyChkEncoder_Z();
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1210 : 				readyChkEncoder_Z();		
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1236 : 				readyChkEncoder_Z();		      
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1266 : 				readyChkEncoder_Z();    // WAIT_TIME_VALUE_CASE_STATE  잇으면 다음 case로 이 
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1311 : 				readyChkEncoder_Z();      
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2085 : //readyChkEncoder_Z();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2493 : 						//readyChkEncoder_Z();
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1782 : 				readyChkEncoder_Z();
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1812 : 				readyChkEncoder_Z();			
---- goPosVial_Z Matches (7 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1744 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos)//, uint32_t z_option)
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3898 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3899 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3910 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3911 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3943 : 						if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
MotorCtrl_task.h (Ch_AS4\inc) line 86 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos);//, uint32_t z_option)
---- homeFindEnd[MOTOR_Z] Matches (13 in 3 files) ----
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 696 : 			if(devState.homeFindEnd[MOTOR_Z] == NO) {
LcasAction_task.c (Ch_AS4\apps_layer) line 928 : 				devState.homeFindEnd[MOTOR_Z] = NO;
LcasAction_task.c (Ch_AS4\apps_layer) line 933 : 			if(devState.homeFindEnd[MOTOR_Z] == NO) {
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 946 : 			if( devState.homeFindEnd[MOTOR_Z] == NO) {
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 968 : 						devState.homeFindEnd[MOTOR_Z] = NO;
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1152 : 					devState.homeFindEnd[MOTOR_Z] = NO;
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3005 : 			devState.homeFindEnd[MOTOR_Z] = YES;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3694 : 			if(devState.homeFindEnd[MOTOR_Z] == NO) {
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4659 : 	devState.homeFindEnd[MOTOR_Z] = NO;
commandStopFn in net_AS.c (Ch_AS4\apps_layer) line 1579 : 	devState.homeFindEnd[MOTOR_Z] = NO;
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1763 : 				devState.homeFindEnd[MOTOR_Z] = NO;
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 2979 : 		devState.homeFindEnd[MOTOR_Z] = NO;
adjustQuit in net_AS.c (Ch_AS4\apps_layer) line 3070 : 	devState.homeFindEnd[MOTOR_Z] = NO;
---- goPosHome Matches (6 in 3 files) ----
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 546 : 			if(goPosHome())	{	++subMenu_es; }
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4413 : 			if(goPosHome())	{
LcasAction_task.c (Ch_AS4\apps_layer) line 4630 : 					if(goPosHome())	{
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5199 : 			if(goPosHome())	{
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3777 : 			if(goPosHome()) { 
MotorCtrl_task.h (Ch_AS4\inc) line 37 : #define goPosHome()				goPosETC_Z(POS_XY_HOME,POS_Z_TOP)
---- #if 0 Matches (142 in 42 files) ----
adc_if_AS.c (Ch_AS4\apps_layer) line 7 : #if 0
ADC_reading in adc_if_AS.c (Ch_AS4\apps_layer) line 263 : #if 0
adc_process in adc_if_AS.c (Ch_AS4\apps_layer) line 307 : #if 0	
auth.c (Ch_AS4\lwIP\netif\ppp) line 118 : #if 0
auth.c (Ch_AS4\lwIP\netif\ppp) line 127 : #if 0 /* PAP_SUPPORT || CHAP_SUPPORT */
auth.c (Ch_AS4\lwIP\netif\ppp) line 700 : #if 0 /* UNUSED */
auth.c (Ch_AS4\lwIP\netif\ppp) line 828 : #if 0
auth.c (Ch_AS4\lwIP\netif\ppp) line 918 : #if 0 /* PAP_SUPPORT || CHAP_SUPPORT */
auth.c (Ch_AS4\lwIP\netif\ppp) line 930 : #if 0
auth.c (Ch_AS4\lwIP\netif\ppp) line 973 : #if 0 /* PAP_SUPPORT || CHAP_SUPPORT */
chap.c (Ch_AS4\lwIP\netif\ppp) line 108 : #if 0
chap.c (Ch_AS4\lwIP\netif\ppp) line 139 : #if 0
chap.c (Ch_AS4\lwIP\netif\ppp) line 145 : #if 0
chap.c (Ch_AS4\lwIP\netif\ppp) line 837 : #if 0
ChapMS in chpms.c (Ch_AS4\lwIP\netif\ppp) line 152 : #if 0
ChallengeResponse in chpms.c (Ch_AS4\lwIP\netif\ppp) line 187 : #if 0
ChallengeResponse in chpms.c (Ch_AS4\lwIP\netif\ppp) line 195 : #if 0
DesEncrypt in chpms.c (Ch_AS4\lwIP\netif\ppp) line 216 : #if 0
DesEncrypt in chpms.c (Ch_AS4\lwIP\netif\ppp) line 225 : #if 0
DesEncrypt in chpms.c (Ch_AS4\lwIP\netif\ppp) line 245 : #if 0
DesEncrypt in chpms.c (Ch_AS4\lwIP\netif\ppp) line 252 : #if 0
MakeKey in chpms.c (Ch_AS4\lwIP\netif\ppp) line 331 : #if 0
conf_eth.h (Ch_AS4\port_config) line 7 : #if 0		// ryuOven 20210105
define_AS.h (Ch_AS4\ryu_inc) line 367 : #if 0
define_AS.h (Ch_AS4\ryu_inc) line 417 : #if 0	
define_AS.h (Ch_AS4\ryu_inc) line 650 : #if 0
Def_stepCon.h (Ch_AS4\common_inc) line 468 : #if 0
dhcp.c (Ch_AS4\lwIP\core) line 128 : #if 0
dhcp_handle_ack in dhcp.c (Ch_AS4\lwIP\core) line 521 : #if 0
dhcp_renew in dhcp.c (Ch_AS4\lwIP\core) line 1000 : #if 0
dhcp_renew in dhcp.c (Ch_AS4\lwIP\core) line 1005 : #if 0
dhcp_rebind in dhcp.c (Ch_AS4\lwIP\core) line 1066 : #if 0
dhcp.c (Ch_AS4\lwIP\core) line 1683 : #if 0 /* currently unused */
dhcp.h (Ch_AS4\lwIP\include\lwip) line 66 : #if 0
ethernetif.c (Ch_AS4\lwIP\netif) line 48 : #if 0 /* don't build, this is only a skeleton, see previous comment */
fpga_ChAS.h (Ch_AS4\common_inc) line 103 : #if 0
mss_uart1_rx_handler in Interrupt.c (Ch_AS4\apps_layer) line 203 : #if 0
ipcp.c (Ch_AS4\lwIP\netif\ppp) line 97 : #if 0
ipcp.c (Ch_AS4\lwIP\netif\ppp) line 140 : #if 0
ipcp.c (Ch_AS4\lwIP\netif\ppp) line 146 : #if 0
ipcp.c (Ch_AS4\lwIP\netif\ppp) line 1208 : #if 0
ipcp.c (Ch_AS4\lwIP\netif\ppp) line 1364 : #if 0
LcasAction_task.c (Ch_AS4\apps_layer) line 906 : #if 0
LcasAction_task.c (Ch_AS4\apps_layer) line 1332 : #if 0
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3297 : #if 0
nextVial in LcasAction_task.c (Ch_AS4\apps_layer) line 3354 : #if 0				
nextVial in LcasAction_task.c (Ch_AS4\apps_layer) line 3385 : #if 0
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3747 : #if 0						
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3946 : #if 0
mix_waitPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4124 : #if 0
CheckPowerBtn in LcasAction_task.c (Ch_AS4\apps_layer) line 6497 : #if 0
LcasAction_task.c (Ch_AS4\apps_layer) line 6553 : #if 0
LcasAction_task.c (Ch_AS4\apps_layer) line 6563 : #if 0
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6718 : #if 0
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6737 : #if 0
LcasAction_task.h (Ch_AS4\inc) line 26 : #if 0
lcp.c (Ch_AS4\lwIP\netif\ppp) line 185 : #if 0
lcp.c (Ch_AS4\lwIP\netif\ppp) line 191 : #if 0
lcp.c (Ch_AS4\lwIP\netif\ppp) line 1694 : #if 0
led_task.h (Ch_AS4\inc) line 25 : #if 0
led_task.h (Ch_AS4\inc) line 75 : #if 0
led_task.h (Ch_AS4\inc) line 112 : #if 0
led_task.h (Ch_AS4\inc) line 141 : #if 0
led_task.h (Ch_AS4\inc) line 154 : #if 0
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 125 : #if 0
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 152 : #if 0
low_level_output in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 566 : #if 0 //(+)210715 CJKIM, Tx Done 2mS delay , Fot Test
main in main.c (Ch_AS4) line 423 : #if 0// CHECK_ENCODER_DIRECTION
main in main.c (Ch_AS4) line 443 : #if 0					
main in main.c (Ch_AS4) line 514 : #if 0	// 테스트 - 터미널 입력
testMain in main.c (Ch_AS4) line 540 : #if 0
MD5Update in md5.c (Ch_AS4\lwIP\netif\ppp) line 140 : #if 0
MotorCtrl_task.c (Ch_AS4\apps_layer) line 113 : #if 0
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 287 : #if 0
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3735 : #if 0			
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1268 : #if 0
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3198 : #if 0
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3990 : #if 0
net_AS.c (Ch_AS4\apps_layer) line 4019 : #if 0
net_AS.h (Ch_AS4\inc) line 84 : #if 0
pap.c (Ch_AS4\lwIP\netif\ppp) line 99 : #if 0
pap.c (Ch_AS4\lwIP\netif\ppp) line 105 : #if 0
pap.c (Ch_AS4\lwIP\netif\ppp) line 601 : #if 0
pbuf_header in pbuf.c (Ch_AS4\lwIP\core) line 440 : #if 0
PID_Control_AS.c (Ch_AS4\apps_layer) line 188 : #if 0
PID_Control_AS.c (Ch_AS4\apps_layer) line 209 : #if 0
PID_Control_AS.c (Ch_AS4\apps_layer) line 282 : #if 0
PID_Control_AS.c (Ch_AS4\apps_layer) line 516 : #if 0
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 594 : #if 0
PID_Control_AS.c (Ch_AS4\apps_layer) line 731 : #if 0
PID_Control_AS.c (Ch_AS4\apps_layer) line 939 : #if 0
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1056 : #if 0
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1140 : #if 0					
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1156 : #if 0
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1168 : #if 0
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1211 : #if 0
TempControlFunc in PID_Control_AS.c (Ch_AS4\apps_layer) line 1298 : #if 0
PID_Control_AS.c (Ch_AS4\apps_layer) line 1366 : #if 0
PID_Control_AS.c (Ch_AS4\apps_layer) line 1384 : #if 0
PID_Ctrl.h (Ch_AS4\inc) line 18 : #if 0
ppp.c (Ch_AS4\lwIP\netif\ppp) line 1194 : #if 0
pppDrop in ppp.c (Ch_AS4\lwIP\netif\ppp) line 1745 : #if 0
pppInProc in ppp.c (Ch_AS4\lwIP\netif\ppp) line 1880 : #if 0
ppp.h (Ch_AS4\lwIP\netif\ppp) line 279 : #if 0
ppp.h (Ch_AS4\lwIP\netif\ppp) line 289 : #if 0
pppoe_timeout in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 859 : #if 0
ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 1173 : #if 0 /*def PFIL_HOOKS*/
protocolType_AS.h (Ch_AS4\common_inc) line 504 : #if 0
protocolType_AS.h (Ch_AS4\common_inc) line 1053 : #if 0	// 20220720
protocolType_AS.h (Ch_AS4\common_inc) line 1065 : #if 0
Protocol_AS.h (Ch_AS4\common_inc) line 278 : #if 0
Protocol_AS.h (Ch_AS4\common_inc) line 291 : #if 0
avRandomInit in randm.c (Ch_AS4\lwIP\netif\ppp) line 184 : #if 0
rs422_if.c (Ch_AS4\apps_layer) line 127 : #if 0 // RS422_MASTER
rs422_if.c (Ch_AS4\apps_layer) line 600 : #if 0
cpu_init in sysconfig.c (Ch_AS4\apps_layer) line 107 : #if 0
sysconfig.c (Ch_AS4\apps_layer) line 140 : #if 0
InterruptEnable_Main in sysconfig.c (Ch_AS4\apps_layer) line 190 : #if 0
init_Control_port in sysconfig.c (Ch_AS4\apps_layer) line 231 : #if 0		// CoreGpio사용 
init_Control_port in sysconfig.c (Ch_AS4\apps_layer) line 294 : #if 0
init_IpAddr in sysconfig.c (Ch_AS4\apps_layer) line 678 : #if 0
sysconfig.c (Ch_AS4\apps_layer) line 886 : #if 0
sysconfig.h (Ch_AS4\inc) line 150 : #if 0
tcp.h (Ch_AS4\lwIP\include\lwip) line 157 : #if 0 /* see bug #10548 */
tcp.h (Ch_AS4\lwIP\include\lwip) line 641 : #if 0
tcp_receive in tcp_in.c (Ch_AS4\lwIP\core) line 961 : #if 0	// 210625 CJKIM , origin
tcp_out.c (Ch_AS4\lwIP\core) line 172 :  #if 0	// 210618 CJKIM , 원래 소스 ,  snd_queuelen 대신 local 변수 사용 
tcp_server_accept in tcp_server.c (Ch_AS4\apps_layer) line 173 : #if 0 // RYU_TCP     
tcp_server_recv in tcp_server.c (Ch_AS4\apps_layer) line 435 : #if 0
tcp_server.c (Ch_AS4\apps_layer) line 1025 : #if 0 
tcp_server.h (Ch_AS4\inc) line 94 : #if 0
testPrgm.c (Ch_AS4\apps_layer) line 205 : #if 0
testPrgm.c (Ch_AS4\apps_layer) line 228 : #if 0
testPrgm.c (Ch_AS4\apps_layer) line 260 : #if 0
testPrgm.c (Ch_AS4\apps_layer) line 750 : #if 0
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1259 : #if 0			
machineTest_Mode_VAL_SYR in testPrgm.c (Ch_AS4\apps_layer) line 1331 : #if 0		// 센서설치해야함.		
machineTest_Mode_VAL_SYR in testPrgm.c (Ch_AS4\apps_layer) line 1390 : #if 0				// 센서설치해야함.			
testPrgm.c (Ch_AS4\apps_layer) line 1866 : #if 0
testPrgm.c (Ch_AS4\apps_layer) line 2071 : #if 0
testPrgm.c (Ch_AS4\apps_layer) line 2126 : #if 0
testPrgm.c (Ch_AS4\apps_layer) line 2162 : #if 0
---- readyChkEncoder_Z Matches (8 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 379 : 	#define readyChkEncoder_Z()	{ \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 366 : 				//readyChkEncoder_Z();
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 446 : 				//readyChkEncoder_Z();
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1276 : 				readyChkEncoder_Z();      
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2050 : //readyChkEncoder_Z();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2458 : 						//readyChkEncoder_Z();
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1782 : 				readyChkEncoder_Z();
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1812 : 				readyChkEncoder_Z();			
---- goPosHome Matches (6 in 3 files) ----
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 546 : 			if(goPosHome())	{	++subMenu_es; }
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4361 : 			if(goPosHome())	{
LcasAction_task.c (Ch_AS4\apps_layer) line 4578 : 					if(goPosHome())	{
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5147 : 			if(goPosHome())	{
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3759 : 			if(goPosHome()) { 
MotorCtrl_task.h (Ch_AS4\inc) line 37 : #define goPosHome()				goPosETC_Z(POS_XY_HOME,POS_Z_TOP)
---- wakeup_XYZ_checkHome Matches (6 in 2 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 646 : int wakeup_XYZ_checkHome()
mix_waitPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 4114 : 			if(wakeup_XYZ_checkHome()) subMenu_mwp = 6;
actionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 4423 : 			if(wakeup_XYZ_checkHome()) {
LcasAction_task.c (Ch_AS4\apps_layer) line 4497 : 					if(wakeup_XYZ_checkHome()) {
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 5117 : 			if(wakeup_XYZ_checkHome()) {
LcasAction_task.h (Ch_AS4\inc) line 37 : int wakeup_XYZ_checkHome();		// sleep mode에서 깨어나라
---- motorResetCmd Matches (25 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 313 : 	#define motorResetCmd(WHO)	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_RESET); }
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2420 : 	motorResetCmd(MOTOR_X);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2421 : 	motorResetCmd(MOTOR_Y);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2422 : 	motorResetCmd(MOTOR_Z);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2423 : 	motorResetCmd(MOTOR_SYR);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2424 : 	motorResetCmd(MOTOR_VAL);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2425 : 	motorResetCmd(MOTOR_INJ);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2526 : 				motorResetCmd(MOTOR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2550 : 				motorResetCmd(MOTOR_VAL);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2666 : 				motorResetCmd(MOTOR_INJ);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2691 : 				motorResetCmd(MOTOR_INJ);		
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2825 : 				motorResetCmd(MOTOR_SYR);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2944 : 					motorResetCmd(MOTOR_Z);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2971 : 				motorResetCmd(MOTOR_Z);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3080 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3120 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3218 : 					motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3250 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3349 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3388 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3463 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3493 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3586 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3616 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
option_AS.h (Ch_AS4\ryu_inc) line 27 : //		#define FPGA_VERSION_TRIM_BREAK			1				// motorResetCmd   or   motorReadyCmd
---- motorResetCmd Matches (25 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 313 : 	#define motorResetCmd(WHO)	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_RESET); }
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2420 : 	motorResetCmd(MOTOR_X);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2421 : 	motorResetCmd(MOTOR_Y);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2422 : 	motorResetCmd(MOTOR_Z);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2423 : 	motorResetCmd(MOTOR_SYR);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2424 : 	motorResetCmd(MOTOR_VAL);
motorResetAll in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2425 : 	motorResetCmd(MOTOR_INJ);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2526 : 				motorResetCmd(MOTOR_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2550 : 				motorResetCmd(MOTOR_VAL);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2666 : 				motorResetCmd(MOTOR_INJ);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2691 : 				motorResetCmd(MOTOR_INJ);		
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2825 : 				motorResetCmd(MOTOR_SYR);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2944 : 					motorResetCmd(MOTOR_Z);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2971 : 				motorResetCmd(MOTOR_Z);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3080 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3120 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3218 : 					motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3250 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3349 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3388 : 				motorResetCmd(MOTOR_X);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3463 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3493 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3586 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3616 : 				motorResetCmd(MOTOR_Y);	// 이전동작이 break이므로 ready(reset)신호 입력되어야 한다. - reset)신호 입력되면 ready 됨						
option_AS.h (Ch_AS4\ryu_inc) line 27 : //		#define FPGA_VERSION_TRIM_BREAK			1				// motorResetCmd   or   motorReadyCmd
---- motorResetAll Matches (6 in 3 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2416 : void motorResetAll()	// 
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4778 : //motorResetAll();
MotorCtrl_task.h (Ch_AS4\inc) line 99 : void motorResetAll();
commandStopFn in net_AS.c (Ch_AS4\apps_layer) line 1585 : 	motorResetAll();
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1782 : 				motorResetAll();
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3512 : 			motorResetAll();
---- MOVE_CMD_OK Matches (21 in 2 files) ----
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 442 : 		return MOVE_CMD_OK;
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 466 : 					case 0x30:	// ok 	//			dp("OK...... MOVE_CMD_OK\n");								
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 467 : dfp("OK...... MOVE_CMD_OK\n");												
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 521 : 	return MOVE_CMD_OK;
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 564 : dp("OK...... MOVE_CMD_OK %x \n",stateZ);
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 616 : 	return MOVE_CMD_OK;
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 663 : 		return MOVE_CMD_OK;
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 691 : 	//			dp("OK...... MOVE_CMD_OK\n");
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 747 : 	return MOVE_CMD_OK;
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 795 : 	return MOVE_CMD_OK;
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1278 : 	if(ret != MOVE_CMD_OK) {	// Error
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1370 : 	if(ret != MOVE_CMD_OK) {	// Error
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1443 : 	if(ret != MOVE_CMD_OK) {	// Error
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1498 : 	if(ret != MOVE_CMD_OK) {	// Error
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1580 : 	if(ret != MOVE_CMD_OK) {	// Error
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1650 : 	if(ret != MOVE_CMD_OK) {	// Error
goVal in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2236 : 		return MOVE_CMD_OK;
goVal_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2274 : 		return MOVE_CMD_OK;
goInj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2310 : 		return MOVE_CMD_OK;
goInj_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2348 : 		return MOVE_CMD_OK;
MotorCtrl_task.h (Ch_AS4\inc) line 25 : #define MOVE_CMD_OK						0
---- CHECK_ENCODER_DIRECTION Matches (26 in 4 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 366 : #if CHECK_ENCODER_DIRECTION
main in main.c (Ch_AS4) line 423 : #if 0// CHECK_ENCODER_DIRECTION
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 735 : #if CHECK_ENCODER_DIRECTION
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1355 : #if CHECK_ENCODER_DIRECTION
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1426 : #if CHECK_ENCODER_DIRECTION
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1565 : #if CHECK_ENCODER_DIRECTION
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1635 : #if CHECK_ENCODER_DIRECTION
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1727 : #if CHECK_ENCODER_DIRECTION
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2187 : #if CHECK_ENCODER_DIRECTION
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2797 : #if CHECK_ENCODER_DIRECTION
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2880 : #if CHECK_ENCODER_DIRECTION
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2915 : #if CHECK_ENCODER_DIRECTION
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3006 : #if CHECK_ENCODER_DIRECTION
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3057 : #if CHECK_ENCODER_DIRECTION
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3162 : #if CHECK_ENCODER_DIRECTION
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3198 : #if CHECK_ENCODER_DIRECTION
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3286 : #if CHECK_ENCODER_DIRECTION
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3326 : #if CHECK_ENCODER_DIRECTION
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3408 : #if CHECK_ENCODER_DIRECTION
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3443 : #if CHECK_ENCODER_DIRECTION
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3531 : #if CHECK_ENCODER_DIRECTION
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3566 : #if CHECK_ENCODER_DIRECTION
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3632 : #if CHECK_ENCODER_DIRECTION
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4600 : #if CHECK_ENCODER_DIRECTION
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4832 : #if CHECK_ENCODER_DIRECTION
option_AS.h (Ch_AS4\ryu_inc) line 410 : #define CHECK_ENCODER_DIRECTION		1
---- goSyr Matches (19 in 5 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1152 : // goPosVial -> goZ(vial detect) -> goSyr(uL,speed) -> goZ(top)
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1589 : //						goSyr(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1668 : //						goSyr(0, 0, syringeSpeed, ACT_XY_POS);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2492 : 						goSyr((sysConfig.needleTubeVol + TRANSPORT_EXTRA_VOLUME * 2.0f) , 0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입							
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2511 : 						goSyr((-sysConfig.needleTubeVol - TRANSPORT_EXTRA_VOLUME) , 0, syringeSpeed,	ACT_XY_POS_ADD);	
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2532 : 							goSyr(airSegmentVol,	0,syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2542 : 							goSyr(airSegmentVol,	0,syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2639 : 					goSyr(-injectionVolume,0,	syringeSpeed,	ACT_XY_POS_ADD);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2670 : 						goSyr(POS_SYR_ZERO, 0, syringeSpeed, ACT_XY_POS);						
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2107 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2140 : dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2185 : dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4113 : 			goSyr((float)(devSet.syrExchangeHeight), 0, WASH_SPEED_UP_SYR, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 79 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2180 : 					goSyr(-ADJUST_STEP_UNIT_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2229 : 					goSyr((-ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2283 : 					goSyr((ADJUST_STEP_UNIT_SYR), 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2335 : 					goSyr((ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
option_AS.h (Ch_AS4\ryu_inc) line 170 : // Step 계산시 플로팅포인트 계산 에러 (goSyr())
---- goSyr Matches (19 in 5 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1152 : // goPosVial -> goZ(vial detect) -> goSyr(uL,speed) -> goZ(top)
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1589 : //						goSyr(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1668 : //						goSyr(0, 0, syringeSpeed, ACT_XY_POS);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2492 : 						goSyr((sysConfig.needleTubeVol + TRANSPORT_EXTRA_VOLUME * 2.0f) , 0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입							
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2511 : 						goSyr((-sysConfig.needleTubeVol - TRANSPORT_EXTRA_VOLUME) , 0, syringeSpeed,	ACT_XY_POS_ADD);	
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2532 : 							goSyr(airSegmentVol,	0,syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2542 : 							goSyr(airSegmentVol,	0,syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2639 : 					goSyr(-injectionVolume,0,	syringeSpeed,	ACT_XY_POS_ADD);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2670 : 						goSyr(POS_SYR_ZERO, 0, syringeSpeed, ACT_XY_POS);						
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2107 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2140 : dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2185 : dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4113 : 			goSyr((float)(devSet.syrExchangeHeight), 0, WASH_SPEED_UP_SYR, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 79 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2180 : 					goSyr(-ADJUST_STEP_UNIT_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2229 : 					goSyr((-ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2283 : 					goSyr((ADJUST_STEP_UNIT_SYR), 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2335 : 					goSyr((ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
option_AS.h (Ch_AS4\ryu_inc) line 170 : // Step 계산시 플로팅포인트 계산 에러 (goSyr())
---- GO_VIAL_NOT_EXIST_mpi_no Matches (6 in 1 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 2123 : #define GO_VIAL_NOT_EXIST_mpi_no				26 // 22
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2230 : 							subMenu_mpi	=	GO_VIAL_NOT_EXIST_mpi_no;	// 배출후 다음바이알
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2246 : 							subMenu_mpi	=	GO_VIAL_NOT_EXIST_mpi_no;
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2297 : 							subMenu_mpi	=	GO_VIAL_NOT_EXIST_mpi_no;
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2315 : 							subMenu_mpi	=	GO_VIAL_NOT_EXIST_mpi_no;
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2410 : //#define GO_VIAL_NOT_EXIST_mpi_no		22
---- goSyr Matches (13 in 5 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1152 : // goPosVial -> goZ(vial detect) -> goSyr(uL,speed) -> goZ(top)
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1589 : //						goSyr(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1668 : //						goSyr(0, 0, syringeSpeed, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2107 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2140 : dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2185 : dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4113 : 			goSyr((float)(devSet.syrExchangeHeight), 0, WASH_SPEED_UP_SYR, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 79 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2180 : 					goSyr(-ADJUST_STEP_UNIT_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2229 : 					goSyr((-ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2283 : 					goSyr((ADJUST_STEP_UNIT_SYR), 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2335 : 					goSyr((ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
option_AS.h (Ch_AS4\ryu_inc) line 170 : // Step 계산시 플로팅포인트 계산 에러 (goSyr())
---- Valve readCount Matches (3 in 1 files) ----
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 267 : dp("xxxx   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 302 : dp("xxxx-   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 414 : dp("xxxx-   Valve readCount=[%d]\n", readCount);
---- goSyr Matches (12 in 5 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1148 : // goPosVial -> goZ(vial detect) -> goSyr(uL,speed) -> goZ(top)
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1585 : //						goSyr(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2107 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2140 : dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2185 : //dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4113 : 			goSyr((float)(devSet.syrExchangeHeight), 0, WASH_SPEED_UP_SYR, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 79 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2180 : 					goSyr(-ADJUST_STEP_UNIT_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2229 : 					goSyr((-ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2283 : 					goSyr((ADJUST_STEP_UNIT_SYR), 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2335 : 					goSyr((ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
option_AS.h (Ch_AS4\ryu_inc) line 170 : // Step 계산시 플로팅포인트 계산 에러 (goSyr())
---- dfp Matches (350 in 9 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 10 : //#define dfp(fmt,args...) iprintf( "DFP [%s %d]-" fmt, __FUNCTION__,__LINE__, ## args ) 
debug_inform.h (Ch_AS4\ryu_inc) line 11 : #define dfp(fmt,args...) 
debug_inform.h (Ch_AS4\ryu_inc) line 34 : #define dfp(fmt,args...) 
Def_stepCon.h (Ch_AS4\common_inc) line 365 : dfp("======  X  readCount=[%d] [%d]\n", readCount , encoderCount_X); \
Def_stepCon.h (Ch_AS4\common_inc) line 373 : dfp("======  Y  readCount=[%d] [%d]\n", readCount , encoderCount_Y); \
Def_stepCon.h (Ch_AS4\common_inc) line 382 : dfp("======  Z  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 400 : dfp("xxxxxxxxxxxxx======  Syringe  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 409 : dfp("======  Valve  readCount=[%d]\n", readCount ); \
Def_stepCon.h (Ch_AS4\common_inc) line 419 : dfp("======  Injector  readCount=[%d] \n", readCount ); \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 187 : 		dfp("subMenu_w=%d  stateSYR=%x\n",subMenu_w,devState.btMotorState[MOTOR_SYR]);
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 491 :     dfp("subMenu_es=%d\n",subMenu_es);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 563 : 		dfp("subMenu_sma=%d\n",subMenu_sma);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 604 : 		dfp("subMenu_sma=%d\n",subMenu_sma);
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 648 : 		dfp("subMenu_wxch=%d stateSYR=%x\n",subMenu_wxch,devState.btMotorState[MOTOR_SYR]);		
startInjectionFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 767 : dfp("if(devState.auxTime100msCnt[0] == 0) devState.curAuxEventNo = %d\n\r",devState.curAuxEventNo);
startLoadingCommand in LcasAction_task.c (Ch_AS4\apps_layer) line 832 : 	dfp("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
LcasAction_task.c (Ch_AS4\apps_layer) line 910 :   dfp("subMenu_ghcx=%d\n",subMenu_ghcx);
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 988 : dfp("sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 993 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 998 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1003 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1008 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1013 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1020 : dfp("END sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1064 : dfp("sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1069 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1074 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1079 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1084 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1089 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1096 : dfp("END sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);			
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1165 :     dfp("subMenu_as=%d\n",subMenu_as);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1174 : dfp("tray[%d] pos[%d][%d]\n",pVial->uPos.tray,pVial->uPos.x,pVial->uPos.y);			
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1252 : dfp("<<<aspirateSample --- goZ_Encoder(POS_Z_TOP, ACT_XY_POS)>>>!!\n");															
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1259 : 				dfp("<<<aspirateSample --- error = %d \n",error);																			
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1376 : 		dfp("subMenu_fli=%d  stateSYR=%x\n",subMenu_fli,devState.btMotorState[MOTOR_SYR]);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1497 : dfp("missing %d	\n",devState.missVialResponse);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1508 : dfp("if(runSetup.airSegment ==	YES) %d	\n",devState.missVialResponse);													
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1571 : dfp("missing %d	\n",devState.missVialResponse);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1729 : 		dfp("subMenu_pli=%d\n",subMenu_pli);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1824 : dfp("missing %d	\n",devState.missVialResponse);													
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1891 : dfp("missing %d	\n",devState.missVialResponse);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1912 : dfp(">>>>injectVial=(%d,%d) sample=(%d,%d)\n",LcasState.injectVial.uPos.x,LcasState.injectVial.uPos.y,LcasState.sample.uPos.x,LcasState.sample.uPos.y);													
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1980 : dfp(">>>>>injectVial=(%d,%d) sample=(%d,%d)\n",LcasState.injectVial.uPos.x,LcasState.injectVial.uPos.y,LcasState.sample.uPos.x,LcasState.sample.uPos.y);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2140 : 		dfp("subMenu_mpi=%d\n",subMenu_mpi);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2250 : dfp("missing %d	\n",devState.missVialResponse);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2319 : dfp("missing %d	\n",devState.missVialResponse);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2436 : //dfp("==========sampleVolume=%d  transportVolume=%d injectionVolume=%d\n",sampleVolume,(int)(transportVolume*10),(int)(injectionVolume*10));
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2837 : dfp("===================sysConfig.trayRight = %d\n",sysConfig.trayRight);
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3010 : dfp("RE_OK============\n");			
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3011 : dfp("pVial->uPos (%d,%d)\n",pVial->uPos.x, pVial->uPos.y);
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3015 : dfp("RE_ERR===========\n");			
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3109 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3114 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3119 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3124 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3129 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
mix_ProgramNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3179 : 					dfp("mixSet.mixTable[%d].action = %d\n",devState.mixTableNo,mixSet.mixTable[devState.mixTableNo].action);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3259 : 		dfp("===================================subMenu_map=%d\n",subMenu_map);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3339 : //dfp("===================================aspirateReturn = %d	\n",aspirateReturn);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3348 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3384 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3385 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3398 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3456 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3480 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3481 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3494 : dfp("MISSING_VIAL_STOP %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3549 : 		dfp("subMenu_mmp=%d\n",subMenu_mmp);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3658 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3698 : dfp("missing %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3777 : dfp("repeat\n");
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3895 : dfp("AUX_SIG_OUT_CONTACT_CLOSE\n\r");				
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3899 : dfp("AUX_SIG_OUT_CONTACT_OPEN\n\r");								
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3911 : dfp("AUX_CONTACT_OPEN devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3918 : dfp("AUX_CONTACT_CLOSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);					
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3924 : dfp("AUX_TOGGLE---AUX_CONTACT_OPEN devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);																
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3929 : dfp("AUX_TOGGLE---AUX_SIG_OUT_CONTACT_CLOSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);																						
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3936 : dfp("AUX_PULSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3942 : dfp("devState.curAuxEventNo = %d\n\r",devState.curAuxEventNo);																								
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3948 : dfp("time_Event end \n\r");
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4068 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4118 : dfp("====== end function : initialize\n");
actionReady in LcasAction_task.c (Ch_AS4\apps_layer) line 4129 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 4154 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 4232 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
LcasAction_task.c (Ch_AS4\apps_layer) line 4358 : dfp("if(devState.doNextSample == YES) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");						
LcasAction_task.c (Ch_AS4\apps_layer) line 4360 : dfp("if(devState.vialExist == NO) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");													
LcasAction_task.c (Ch_AS4\apps_layer) line 4372 : //dfp("<<<analysisTime= %d %d	isNextInjection == YES %d >>>!!\n",devState.analysisTime100msCnt,devState.analysisTime100ms,devState.isNextInjection);
LcasAction_task.c (Ch_AS4\apps_layer) line 4384 : dfp("if(devState.isNextInjection == YES) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");								
LcasAction_task.c (Ch_AS4\apps_layer) line 4398 : dfp("devState.vialExist	=	NO \n");
LcasAction_task.c (Ch_AS4\apps_layer) line 4406 : dfp("if(devState.isNextInjection	== YES)<<<analysisTime= %d %d	isNextInjection == YES %d >>>!!\n",devState.analysisTime100msCnt,devState.analysisTime100ms,devState.isNextInjection);
LcasAction_task.c (Ch_AS4\apps_layer) line 4425 : dfp("<<<SELF_END_SEQUENCE>>>	devState.vialExist = %d\n",devState.vialExist);		
actionFault in LcasAction_task.c (Ch_AS4\apps_layer) line 4439 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionStandby in LcasAction_task.c (Ch_AS4\apps_layer) line 4451 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagnostics in LcasAction_task.c (Ch_AS4\apps_layer) line 4463 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagHeaterCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 4500 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagCoolerCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 4618 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagTempsenCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 4715 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 4800 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 4858 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 4905 : dfp("<<<AS_SERVICE_WASH_END>>>	\n");
actionStopFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 4917 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
convert_SystemConfig_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5483 : dfp("sysConfig.trayLeft= [%d] sysConfig.trayRight= [%d]\n",sysConfig.trayLeft, sysConfig.trayRight);
convert_SystemConfig_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5484 : //dfp("initSystemConfig sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
initSystemConfig_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5535 : dfp("initSystemConfig ======== not Save Data --- Init=================== %d\n");
usedTimeCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6031 : dfp("\n");				
CheckPowerBtn in LcasAction_task.c (Ch_AS4\apps_layer) line 6229 : //dfp("signalIn = 0x%08x\n",signalIn);
LcasAction_task.c (Ch_AS4\apps_layer) line 6288 : dfp("SELF_ERROR_DOOR_OPEN\n");
LcasAction_task.c (Ch_AS4\apps_layer) line 6315 : dfp("SELF_ERROR_LEAK\n");
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6378 : dfp("SELF_ERROR_DOOR_OPEN\n");
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6403 : dfp("SELF_ERROR_LEAK\n");
main in main.c (Ch_AS4) line 424 : dfp("chk_Dir [Z %08x] [Y %08x] [X %08x] [S %08x] [YS %8x]\n",devState.chk_Dir[MOTOR_Z],devState.chk_Dir[MOTOR_Y],devState.chk_Dir[MOTOR_X],devState.chk_Dir[MOTOR_SYR], devState.chk_Dir[MOTOR_INJ]);
testMain in main.c (Ch_AS4) line 590 : 	//dfp("s1[%08X] s2[%08X] m3[%08X]\n",samState.btMotorState[MOTOR_SAM1], samState.btMotorState[MOTOR_SAM2], samState.btMotorState[MOTOR_M3]);						
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 458 : dfp("Error...... MOVE_ERR_BOTH\n");
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 461 : dfp("Error...... MOVE_ERR_VIALCHK\n");
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 464 : dfp("Error...... MOVE_ERR_NDLCHK\n");							
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 467 : dfp("OK...... MOVE_CMD_OK\n");												
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 555 : dfp("Error...... MOVE_ERR_BOTH %x\n",stateZ);
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 558 : dfp("Error...... MOVE_ERR_VIALCHK %x\n",stateZ);				
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 561 : dfp("Error...... MOVE_ERR_NDLCHK %x\n",stateZ);					
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 588 : 				dfp("AccelStep = %d\n",AccelStep);
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 594 : 				dfp("DeaccStep = %d\n",DeaccStep);				
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 597 : //dfp("[%d] tot=%d Acc=%d deacc=%d min=%d max=%d\n",who,totalStep,AccelStep,DeaccStep, minSpeed, maxSpeed);		
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 613 : //dfp("who[%d] ctrlCmd[0x%x]\n",who,ctrlCmd);				
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 679 : 	dfp("Error...... MOVE_ERR_BOTH\n");
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 683 : 	dfp("Error...... MOVE_ERR_BOTH__VIAL_CHECK\n");								
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 687 : 	dfp("Error...... MOVE_ERR_BOTH__Z_AXIS_CHECK\n");								
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 714 : 				dfp("AccelStep = %d\n",AccelStep);
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 720 : 				dfp("DeaccStep = %d\n",DeaccStep);				
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 726 : dfp("[%d] totalStep=%d  minSpeed=%d AccelStep=%d DeaccStep=%d ctrlCmd=0x%x\n",who,totalStep, minSpeed, AccelStep, DeaccStep, ctrlCmd);
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 744 : //dfp("who[%d] ctrlCmd[0x%x]\n",who,ctrlCmd);				
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 816 :     dfp("subMenu_grpx=%d\n",subMenu_grpx);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 876 :     dfp("subMenu_grpy=%d\n",subMenu_grpy);
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 939 :     dfp("subMenu_grpz=%d\n",subMenu_grpz);
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 993 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1015 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1037 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1057 :     dfp("subMenu_rcrx=%d\n",subMenu_rcrx);
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1075 : dfp("encoderCount =%d\n",encoderCount);
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1094 :     dfp("subMenu_rcry=%d\n",subMenu_rcry);
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1112 : dfp("encoderCount =%d\n",encoderCount);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1131 :     dfp("subMenu_rcrz=%d\n",subMenu_rcrz);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1154 : dfp("=============================================Count Z=%d\n",encoderCount);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1159 : dfp("encoderCount =%d\n",encoderCount);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1182 :     dfp("subMenu_gpv=%d\n",subMenu_gpv);
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1237 : //dfp("curStep=%d\n",(int)devState.curStep[MOTOR_X]);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1306 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_X]);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1390 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_X]);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1460 : //dfp("curStep=%d\n",(int)devState.curStep[MOTOR_Y]);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1524 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_Y]);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1602 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_Y]);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1755 :     dfp("subMenu_gpvz=%d\n",subMenu_gpvz);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1837 : 	    dfp("subMenu_gpez=%d\n",subMenu_gpez);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1937 : 	    dfp("subMenu_gpezc=%d\n",subMenu_gpezc);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2494 : 	    dfp("subMenu_ihpv=%d\n",subMenu_ihpv);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2634 : 	    dfp("subMenu_ihpi=%d\n",subMenu_ihpi);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2778 : 	    dfp("subMenu_ihps=%d\n",subMenu_ihps);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2896 :     dfp("subMenu_ihpz=%d\n",subMenu_ihpz);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3034 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3046 : dfp("stepCount_3=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3085 : dfp("stepCount_3=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3104 : dfp("stepCount_6=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3124 : dfp("stepCount_9=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3152 : dfp("stepCount_12=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3179 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3303 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3315 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3354 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3373 : //dfp("stepCount_6=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3392 : //dfp("stepCount_9=%d\n",stepCount);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3424 :     dfp("subMenu_ihpy=%d\n",subMenu_ihpy);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3547 :     dfp("subMenu_ihpy=%d\n",subMenu_ihpy);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3649 :     dfp("subMenu_ihpa=%d\n",subMenu_ihpa);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3761 : dfp("====== end function! \n");
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3823 :     dfp("subMenu_ami=%d\n",subMenu_ami);
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4020 : 	    dfp("subMenu_ane=%d\n",subMenu_ane);
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4078 :     dfp("subMenu_ase=%d\n",subMenu_ase);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4811 : dfp("devState.command == COMMAND_ABORT\n");
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 170 : dfp("check--ERROR--PACKCODE_LCAS_SYSTEM_INFORM (%s)\n",tmp.cModel);
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 175 : dfp("check--EQUAL--PACKCODE_LCAS_SYSTEM_INFORM (%s)\n",tmp.cModel);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 229 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 230 : dfp("tmp.cSerialNo = %s \n",tmp.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 234 : dfp("sysInform.cInstallDate.year = %d month = %d date = %d\n",sysInform.cInstallDate.year,sysInform.cInstallDate.month,sysInform.cInstallDate.date);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 246 : dfp("as_INFO.cSerialNo = %s \n",as_INFO.cSerialNO);
net_SystemConfig in net_AS.c (Ch_AS4\apps_layer) line 536 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 648 : 	dfp("Cal Temp Load !!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 652 : 	dfp("Cal Temp Load Error!!!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 674 : 	dfp("GfTempConstA = %d GfTempConstB = %d GfTempConstC = %d\n", (int)(GfTempConstA*100), (int)(GfTempConstB*100), (int)(GfTempConstC*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 675 : 	dfp("tempCalData.setTemp1 = %d setTemp2 = %d meaTemp1 = %d meaTemp2 = %d\n", (int)(tempCalData.setTemp1*100), (int)(tempCalData.setTemp2*100), (int)(tempCalData.meaTemp1*100),(int)(tempCalData.meaTemp2*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 763 : dfp("Cal Temp Load !!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 767 : dfp("Cal Temp Load Error!!!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 788 : dfp("GfTempConstA = %d GfTempConstB = %d GfTempConstC = %d\n", (int)(GfTempConstA*100), (int)(GfTempConstB*100), (int)(GfTempConstC*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 789 : dfp("tempCalData.setTemp1 = %d setTemp2 = %d meaTemp1 = %d meaTemp2 = %d\n", (int)(tempCalData.setTemp1*100), (int)(tempCalData.setTemp2*100), (int)(tempCalData.meaTemp1*100),(int)(tempCalData.meaTemp2*100));
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1062 : dfp("tmp.useAuxTimeEvent = %d 	tmp.initAux = %d tmp.auxOutSigTim = %d\n",tmp.useAuxTimeEvent, tmp.initAux,tmp.auxOutSigTime);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1063 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1106 : //dfp("============Time Event :  devState.auxTime100msCnt[%d]=%d\n\r",i,devState.auxTime100msCnt[i]);		
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1108 : dfp("============Time Event :  devState.auxTime100msCnt[%d]=%d\n\r",0,devState.auxTime100msCnt[0]);		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1137 : dfp("ERROR1 : Mix Setup\n");		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1138 : dfp("firstDestPos.uPos rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeDestination,tmp.firstDestPos.uPos.tray,tmp.firstDestPos.uPos.etc, tmp.firstDestPos.uPos.x, tmp.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1139 : dfp("reagentPosA.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentA,tmp.reagentPosA.uPos.tray,tmp.reagentPosA.uPos.etc, tmp.reagentPosA.uPos.x, tmp.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1140 : dfp("reagentPosB.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentB,tmp.reagentPosB.uPos.tray,tmp.reagentPosB.uPos.etc, tmp.reagentPosB.uPos.x, tmp.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1141 : dfp("reagentPosC.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentC,tmp.reagentPosC.uPos.tray,tmp.reagentPosC.uPos.etc, tmp.reagentPosC.uPos.x, tmp.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1142 : dfp("reagentPosD.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentD,tmp.reagentPosD.uPos.tray,tmp.reagentPosD.uPos.etc, tmp.reagentPosD.uPos.x, tmp.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1151 : dfp(" Receive Mix Error \n");		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1160 : dfp(" Receive Mix Error \n");				
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1169 : dfp(" Receive Mix Error \n");				
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1178 : dfp(" Receive Mix Error \n");					
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1190 : 	dfp("ERROR : Mix Setup = %d %d \n",tmp.firstDestPos.uPos.tray,tmp.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1191 : dfp("firstDestPos.uPos rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeDestination,tmp.firstDestPos.uPos.tray,tmp.firstDestPos.uPos.etc, tmp.firstDestPos.uPos.x, tmp.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1192 : dfp("reagentPosA.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentA,tmp.reagentPosA.uPos.tray,tmp.reagentPosA.uPos.etc, tmp.reagentPosA.uPos.x, tmp.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1193 : dfp("reagentPosB.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentB,tmp.reagentPosB.uPos.tray,tmp.reagentPosB.uPos.etc, tmp.reagentPosB.uPos.x, tmp.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1194 : dfp("reagentPosC.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentC,tmp.reagentPosC.uPos.tray,tmp.reagentPosC.uPos.etc, tmp.reagentPosC.uPos.x, tmp.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1195 : dfp("reagentPosD.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentD,tmp.reagentPosD.uPos.tray,tmp.reagentPosD.uPos.etc, tmp.reagentPosD.uPos.x, tmp.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1199 : 	dfp(" Mix Setup = %d %d \n",tmp.firstDestPos.uPos.tray,tmp.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1250 : dfp("firstDestVial.pos (%x)\n",mixSet.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1251 : dfp("reagentVialA.pos (%x)\n",mixSet.reagentPosA.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1252 : dfp("reagentVialB.pos (%x)\n",mixSet.reagentPosB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1253 : dfp("reagentVialC.pos (%x)\n",mixSet.reagentPosC.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1254 : dfp("reagentVialD.pos (%x)\n",mixSet.reagentPosD.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1255 : dfp("firstDestVial.uPos (%d,%d)\n",mixSet.firstDestPos.uPos.x, mixSet.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1256 : dfp("reagentVialA.uPos (%d,%d)\n",mixSet.reagentPosA.uPos.x, mixSet.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1257 : dfp("reagentVialB.uPos (%d,%d)\n",mixSet.reagentPosB.uPos.x, mixSet.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1258 : dfp("reagentVialC.uPos (%d,%d)\n",mixSet.reagentPosC.uPos.x, mixSet.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1259 : dfp("reagentVialD.uPos (%d,%d)\n",mixSet.reagentPosD.uPos.x, mixSet.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1264 : dfp("sequence.firstSamplePos (%d,%d)\n",sequence.firstSamplePos.uPos.x, sequence.firstSamplePos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1265 : dfp("firstSamplePosCnt =%d\n",firstSamplePosCnt);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1323 : dfp("cnt = %d  devState.reagentVialB.pos = %d\n",cnt,devState.reagentVialB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1344 : dfp("==============firstDestVial.pos (%x)\n",devState.firstDestVial.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1345 : dfp("reagentVialA.pos (%x)\n",devState.reagentVialA.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1346 : dfp("reagentVialB.pos (%x)\n",devState.reagentVialB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1347 : dfp("reagentVialC.pos (%x)\n",devState.reagentVialC.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1348 : dfp("reagentVialD.pos (%x)\n",devState.reagentVialD.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1349 : dfp("firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1350 : dfp("reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1351 : dfp("reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1352 : dfp("reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1353 : dfp("reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1445 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1457 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1458 : dfp("tmp.firstSamplePos.pos = %x\n", tmp.firstSamplePos.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1459 : dfp("tmp.lastSamplePos.pos = %x\n", tmp.lastSamplePos.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1461 : dfp("tmp.firstSamplePos.uPos (%d,%d)\n",tmp.firstSamplePos.uPos.x, tmp.firstSamplePos.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1462 : dfp("tmp.lastSamplePos.uPos (%d,%d)\n",tmp.lastSamplePos.uPos.x, tmp.lastSamplePos.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1464 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1471 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1473 : dfp("--PACKCODE_LCAS_SEQUENCE - net_Sequence\n");					
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1540 : dfp("==============firstDestVial.pos (%x)\n",devState.firstDestVial.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1541 : dfp("reagentVialA.pos (%x)\n",devState.reagentVialA.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1542 : dfp("reagentVialB.pos (%x)\n",devState.reagentVialB.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1543 : dfp("reagentVialC.pos (%x)\n",devState.reagentVialC.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1544 : dfp("reagentVialD.pos (%x)\n",devState.reagentVialD.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1545 : dfp("firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1546 : dfp("reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1547 : dfp("reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1548 : dfp("reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1549 : dfp("reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3130 : 				if(IS_REQUEST_PACKET(pData)) {			dfp("XXXXXXXXIS_REQUEST_PACKET--PACKCODE_LCAS_SYSTEM_INFORM\n");				
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3133 : 				else if(IS_ACK_PACKET(pData)){	dfp("ack--PACKCODE_LCAS_SYSTEM_INFORM\n");				}
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3134 : 				else {	dfp("rcv--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3154 : dfp("snd--PACKCODE_LCAS_SYSTEM_INFORM sysInform.cVersion = %s\n",sysInform.cVersion);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3157 : dfp("ack--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3160 : //dfp("rcv--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3172 : dfp("snd--PACKCODE_LCAS_ETHERNET_CONFIG ethernetConfig.cGateway = %s\n",ethernetConfig.cGateway);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3175 : dfp("ack--PACKCODE_LCAS_ETHERNET_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3178 : //dfp("rcv--PACKCODE_LCAS_ETHERNET_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3190 : dfp("snd--PACKCODE_LCAS_SYSTEM_CONFIG sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3193 : dfp("ack--PACKCODE_LCAS_SYSTEM_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3197 : //dfp("rcv--PACKCODE_LCAS_SYSTEM_CONFIG sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3209 : dfp("snd--PACKCODE_LCAS_RUN_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3212 : dfp("ack--PACKCODE_LCAS_RUN_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3219 : dfp("snd--PACKCODE_LCAS_TIME_EVENT\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3222 : dfp("ack--PACKCODE_LCAS_TIME_EVENT\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3229 : dfp("snd--PACKCODE_LCAS_MIX_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3232 : dfp("ack--PACKCODE_LCAS_MIX_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3241 : dfp("snd--PACKCODE_LCAS_SEQUENCE\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3244 : dfp("snd--PACKCODE_LCAS_SEQUENCE\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3288 : dfp("========================missing %d	\n",devState.missVialResponse);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3306 : dfp("========================missing %d	\n",devState.missVialResponse);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3553 : dfp("PACKCODE_LCAS_SETUP request -- \n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3557 : dfp("PACKCODE_LCAS_SETUP  packet \n");
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3593 : dfp("net_ServiceDiagnostics service.subCommand = %d \n",service.subCommand1);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3728 : dfp("Cal Temp - Measure temp 1 Receive!!!\n");
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3744 : dfp("Cal Temp - Measure temp 2 Receive!!!\n");
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3758 : dfp("Cal Temp - TEMP_CAL_SAVE  !!\n");
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3906 : 	dfp("heat=%d %d",usedTime.heatTime,tmp.heatTime);
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3907 : 	dfp("ff=%d %d",ff,tmp.heatTime);
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3908 : 	dfp("iff=0x%x iff=%d %d",iff,tmp.time);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3998 : dfp("led=%d door=%d leak=%d buz=%d = NO\n",special.LED_onoff,special.Door_check,special.Leak_check,special.Buzzer_onoff);
rtcTime_Init in sysconfig.c (Ch_AS4\apps_layer) line 418 : dfp("rtcWrite_time\n");	
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 479 : dfp("rand = %x %x time=%d\n",r[i], my_mac[i], time);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 595 : dfp("rand = %x %x time=%d\n",r[i], my_mac[i], time);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 601 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 648 : dfp("[default MAC] my_mac[0]=[0x%x] [0x%x] [0x%x] [0x%x] [0x%x] [0x%x] \n\r",
loadEthernetConfig in sysconfig.c (Ch_AS4\apps_layer) line 743 : 	dfp("load === my_ip[0]=[0x%x] [0x%x] [0x%x] [0x%x] \n\r",
tcp_server_accept in tcp_server.c (Ch_AS4\apps_layer) line 202 : dfp("Client is connected \r\n");
machineTest_Function_Set in testPrgm.c (Ch_AS4\apps_layer) line 130 : 	dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 275 : 		dfp("Core_gpioInputn = 0x%08x\n",Core_gpioInput);	
testPrgm.c (Ch_AS4\apps_layer) line 290 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 296 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 302 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 308 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 322 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 328 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 334 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 340 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 353 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 359 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 365 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 371 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
machineTest_Mode_X in testPrgm.c (Ch_AS4\apps_layer) line 401 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_X in testPrgm.c (Ch_AS4\apps_layer) line 446 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_Y in testPrgm.c (Ch_AS4\apps_layer) line 461 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_Y in testPrgm.c (Ch_AS4\apps_layer) line 506 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_Z in testPrgm.c (Ch_AS4\apps_layer) line 521 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_Z in testPrgm.c (Ch_AS4\apps_layer) line 566 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_SYR in testPrgm.c (Ch_AS4\apps_layer) line 581 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_SYR in testPrgm.c (Ch_AS4\apps_layer) line 626 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_VAL in testPrgm.c (Ch_AS4\apps_layer) line 641 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_VAL in testPrgm.c (Ch_AS4\apps_layer) line 686 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_INJ in testPrgm.c (Ch_AS4\apps_layer) line 701 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_INJ in testPrgm.c (Ch_AS4\apps_layer) line 746 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 766 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,func);
machineTest_Mode_X_Y_Z in testPrgm.c (Ch_AS4\apps_layer) line 869 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
machineTest_Mode_X_Y_Z in testPrgm.c (Ch_AS4\apps_layer) line 880 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,acting);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1180 :     dfp("M_TEST_XYZ_Z_UP_LONG=%d\n",M_TEST_XYZ_Z_UP_LONG);		      
machineTest_Mode_VAL_SYR in testPrgm.c (Ch_AS4\apps_layer) line 1306 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
machineTest_Mode_VAL_SYR in testPrgm.c (Ch_AS4\apps_layer) line 1317 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,acting);
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1463 : 						dfp("goVal - POS_VAL_NEEDLE %d \n",func);										
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1509 : 		dfp("goVal - POS_VAL_WASHING %d \n",func);						
machineTest_Mode_VAL_Home in testPrgm.c (Ch_AS4\apps_layer) line 1662 :     dfp("subMenu_mtvh=%d\n",subMenu_mtvh);
machineTest_Mode_SYR_Home in testPrgm.c (Ch_AS4\apps_layer) line 1697 :     dfp("subMenu_mtsh=%d\n",subMenu_mtsh);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1732 :     dfp("subMenu_mtvsc=%d\n",subMenu_mtvsc);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1746 : //dfp("<<<aspirateSample --- goPosVial>>>!! == devState.btMotorState[MOTOR_Z]=%x\n",devState.btMotorState[MOTOR_Z]);	
machineTest_Mode_BOARD_ALL in testPrgm.c (Ch_AS4\apps_layer) line 1816 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_BOARD_ALL in testPrgm.c (Ch_AS4\apps_layer) line 1861 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 1883 : 		dfp("Core_gpioInputn = 0x%08x\n",Core_gpioInput);	
testPrgm.c (Ch_AS4\apps_layer) line 1889 : dfp("machineTest_Mode = 0x%08\n",Mode);	
testPrgm.c (Ch_AS4\apps_layer) line 1928 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1934 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1940 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1946 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1960 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1966 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1972 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1978 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1991 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1997 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 2003 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 2009 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
---- dp Matches (198 in 13 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 8 : #define dp(fmt,args...) iprintf( fmt, ## args )
debug_inform.h (Ch_AS4\ryu_inc) line 32 : #define dp(fmt,args...)
eepromWrite_Data in EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 374 : //dp("write_buffer_local[0]=0x%02x %02x\n",write_buffer_local[0],write_buffer_local[1]);        		
eepromWrite_Data in EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 399 : dp("EEPROM_WRITE_SUCCESS = %d\n",size_in_bytes);		
eepromWrite_Data in EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 407 : dp("EEPROM_WRITE_UNSUCCESS = %d\n",size_in_bytes);				
EEPROM_write in EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 561 : //  	dp("size_in_bytes2 = %d\n",size_in_bytes);
eepromRead_Data in EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 651 : dp("EEPROM_READ_SUCCESS -I2C_STATUS\n");        
eepromRead_Data in EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 655 : dp("EEPROM_READ_UNSUCCESS -I2C_STATUS\n");                
eepromRead_Data in EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 674 : dp("EEPROM_READ_SUCCESS \n");
eepromRead_Data in EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 678 : dp("EEPROM_READ_UNSUCCESS \n");
EEPROM_read in EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 721 : // 	dp("EEPROM_READ_SUCCESS \n");
EEPROM_read in EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 726 : // 	dp("EEPROM_READ_UNSUCCESS \n");
EEPROM_read in EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 734 : // 	dp("EEPROM_ADDRESS_FAULT \n");
mss_uart1_rx_handler in Interrupt.c (Ch_AS4\apps_layer) line 198 : //dp("mss_uart1_rx_handler = %d\n",rx_size);
init_analysisTimetick in LcasAction_task.c (Ch_AS4\apps_layer) line 153 : dp("analysisTimeCount=0000000000000000000000\n");
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 267 : //dp("xxxx   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 289 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 302 : //dp("xxxx-   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 316 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 399 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 412 : //dp("xxxx-   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 427 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 976 : 		dp("<<<+++++++++++++++Stop	Injection!!!!\n");
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 987 : dp("excute!!\n");
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1039 : 		dp("<<<+++++++++++++++Stop	Injection!!!!\n");
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1058 : dp(">>>>>>>==================chkNextInjection!!\n");
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1063 : dp("excute!!\n");
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2525 : dp("adjust.value not Saved [%d]=%d\n",i,devSet.adjust.saveFlag[i]);							
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2839 : dp("devSet.adjust.rightVial_x[sysConfig.trayRight] = %d\n",devSet.adjust.rightVial_x[sysConfig.trayRight]);
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2840 : dp("devSet.adjust.rightVial_y[sysConfig.trayRight] = %d\n",devSet.adjust.rightVial_y[sysConfig.trayRight]);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3310 : dp("mix_addPrgm!!\n");
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5010 : 					dp("####### read Serial No : [%s] [%c]\n", &data[0], data[0]);
initRunSetup in LcasAction_task.c (Ch_AS4\apps_layer) line 5620 : dp("syringeVol=%d washVolume = %d washVolumeMax = %d\n",sysConfig.syringeVol,runSetup.washVolume,devSet.washVolumeMax);
convert_Specia_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5943 : 		dp("convert_Specia_eeprom2envm() \n");
remoteControl in LcasAction_task.c (Ch_AS4\apps_layer) line 6167 : 				dp("startLoadingCommand\n\r");
CheckPowerBtn in LcasAction_task.c (Ch_AS4\apps_layer) line 6237 : 		dp("button signalIn = %x\n",signalIn);
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6428 : 			dp("Temp Error\n");
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6449 : 			dp("thError1\n");
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6469 : 			dp("thError2\n");
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6483 : dp("===heaterOnOff(OFF)\n");
main in main.c (Ch_AS4) line 289 : //dp("-----s1[%08X] s2[%08X] m3[%08X]\n", samState.btMotorState[MOTOR_SAM1], samState.btMotorState[MOTOR_SAM2], samState.btMotorState[MOTOR_M3]);
load_StepDataAddr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 159 : //dp( "[%d] [%d] baseAddr = %x data = %d ) \n\r", who, addr, baseAddr,data);	
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 192 : dp( "[%d] FREQ = %dHz intervalConst=%d.%d microStep=1/%d\n\r maxRPM=%5d ", who, Freq, (int)interval, (int)( interval*10 - (int)interval*10 ), microStep,rpm);
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 222 : //    dp( "[%3d] ar1=%3d interval=%5d pps=%4d rpm=%4d\n\r", i, (int)sAccel[i].ar1, sAccel[i].s_interval,(int)pps , rpm);
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 225 : dp( "minRPM=%4d interval(start=%5d end=%4d) \n\r", rpm, sAccel[0].s_interval, sAccel[149].s_interval);
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 243 : //dp( "[%3d] ar1=%3d interval=%5d repeat=%4d accumul=%4d\n\r", 0, (int)sAccel[who][0].ar1, sAccel[who][0].s_interval,
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 278 : //    dp( "[%3d] ar1=%3d interval=%5d repeat=%4d accumul=%4d\n\r", i, (int)sAccel[who][i].ar1, sAccel[who][i].s_interval,
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 299 : 	dp( " end : Step Data load!! \n\r" );
make_StepData_ISO in MotorCtrl_task.c (Ch_AS4\apps_layer) line 330 : dp( "[%d] FREQ = %dHz StartRPM=%d.%d microStep=1/%d\n\r maxRPM=%5d ", who, Freq, (int)s_rpm, (int)( s_rpm*10 - (int)s_rpm*10 ), microStep,rpm);
make_StepData_ISO in MotorCtrl_task.c (Ch_AS4\apps_layer) line 345 : //dp( "[%d] interval = %d pps = %d ) \n\r", i, sAccel[i].s_interval, pps);
make_StepData_ISO in MotorCtrl_task.c (Ch_AS4\apps_layer) line 348 : dp( "minRPM=%4d Pulse(start=%5d end=%4d) \n\r", (int)s_rpm, sAccel[0].s_interval, sAccel[149].s_interval);
make_StepData_ISO in MotorCtrl_task.c (Ch_AS4\apps_layer) line 391 : 	dp( " end : Step Data load!! \n\r" );
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 466 : 					case 0x30:	// ok 	//			dp("OK...... MOVE_CMD_OK\n");								
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 479 : 		//dp("[%3d] s_pulse_repeat=%3d  Acc=%d deacc=%d\n",i, sAccel[who][i].s_pulse_repeat, AccelStep, DeaccStep);
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 485 : 		//dp("[%3d] s_pulse_repeat=%3d  Acc=%d deacc=%d\n",i, sAccel[who][i].s_pulse_repeat, AccelStep, DeaccStep);
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 498 : 				dp("AccelStep = %d\n",AccelStep);
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 504 : 				dp("DeaccStep = %d\n",DeaccStep);				
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 564 : dp("OK...... MOVE_CMD_OK %x \n",stateZ);
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 576 : //dp("[%3d] s_pulse_repeat=%3d  Acc=%d deacc=%d\n",i, s_pulse_repeat[who][i], AccelStep, DeaccStep);
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 691 : 	//			dp("OK...... MOVE_CMD_OK\n");
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 702 : 	//dp("[%3d] s_pulse_repeat=%3d  Acc=%d deacc=%d\n",i, sAccel[who][i].s_pulse_repeat, AccelStep, DeaccStep);
convert_TempCal_eeprom2envm in net_AS.c (Ch_AS4\apps_layer) line 601 : 		dp("convert_TempCal_eeprom2envm() \n");
tempSetup in net_AS.c (Ch_AS4\apps_layer) line 895 : dp("tempSetup ===%d  %d  ========",runSetup.tempOnoff,devState.oldTempOnoff);					
tempSetup in net_AS.c (Ch_AS4\apps_layer) line 900 : dp("diff\n");			
tempSetup in net_AS.c (Ch_AS4\apps_layer) line 906 : dp("diff onoff\n");							
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 953 : dp("Temp %d %d\n",tmp.tempOnoff,(int)(tmp.temp*100));
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 954 : dp("injectionStart %d \n",tmp.injectionStart);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 955 : dp("injectionMode %d \n",tmp.injectionMode);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 956 : dp("analysisTime %d \n",(int)(tmp.analysisTime*100));
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 957 : dp("injectionVolume %d \n",tmp.injectionVolume);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 958 : dp("washBetween %d \n",tmp.washBetween);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 959 : dp("washVolume %d \n",tmp.washVolume);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 960 : dp("syringeVol %d \n",sysConfig.syringeVol);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 962 : dp("syringeUpSpdInj %d \n",tmp.syringeUpSpdInj);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 963 : dp("syringeDnSpdInj %d \n",tmp.syringeDnSpdInj);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 964 : dp("needleHeight %d \n",(int)(tmp.needleHeight*100));
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 965 : dp("skipMissingSample %d \n",tmp.skipMissingSample);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 966 : dp("airSegment %d \n",tmp.airSegment);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 967 : dp("airSegmentVol %d \n",tmp.airSegmentVol);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1434 : dp("system is running.... PACKCODE_LCAS_SEQUENCE cmd=%d sub1=%d sub2=%d\n",service.command, service.subCommand1, service.subCommand2);					
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1856 : dp("net_ServiceAdjust cmd=%d sub1=%d sub2=%d\n",service.command, service.subCommand1, service.subCommand2);				
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2636 : dp("=============\n devSet.adjust.saveFlag = %d devSet.adjust.value = %d\n",devSet.adjust.saveFlag[i],devSet.adjust.value[i]);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2637 : dp("===========================\n devSet.adjust_2nd.saveFlag = %d devSet.adjust_2nd.value = %d\n",devSet.adjust_2nd.saveFlag[i],devSet.adjust_2nd.value[i]);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2655 : dp("===========================\n devSet.adjust.saveFlag = %d devSet.adjust.value = %d\n",devSet.adjust.saveFlag[i],devSet.adjust.value[i]);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2656 : dp("===========================\n devSet.adjust_2nd.saveFlag = %d devSet.adjust_2nd.value = %d\n",devSet.adjust_2nd.saveFlag[i],devSet.adjust_2nd.value[i]);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2667 : dp("===========================\n devSet.adjust.saveFlag = %d devSet.adjust.value = %d\n",devSet.adjust.saveFlag[i],devSet.adjust.value[i]);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2699 : dp("===========================\n devSet.adjust.saveFlag = %d devSet.adjust.value = %d\n",devSet.adjust.saveFlag[i],devSet.adjust.value[i]);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2868 : dp("ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss-save\n");
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2930 : dp("=====ADJUST_INIT_POS \n");	    
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2931 : dp("LcasState.state = %d devSet.adjust.act=%d %d %d \n",LcasState.state,devSet.adjustAct,devSet.adjustCurMotor,devSet.adjustOldMotor);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2952 : dp("devSet.adjustTmp.value[0]=%d\n",devSet.adjustTmp.value[0]);
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 2976 : dp("======================================================================adjustInitPosition  == ADJUST_ACT_NOT_READ\n");
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 3012 : dp("devSet.adjustAct = %d send_SelfMessage(SELF_COMMAND_REJECT,0)\n",devSet.adjustAct);
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 3028 : dp("======devSet.adjustCurMotor = %d ======================ADJUST_ACT_READY========Y\n",devSet.adjustCurMotor);
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 3032 : dp("devSet.adjustAct = %d send_SelfMessage(SELF_COMMAND_REJECT,0)\n",devSet.adjustAct);
adjustQuit in net_AS.c (Ch_AS4\apps_layer) line 3044 : dp("devSet.adjust.save[%d]=0x%x\n",i,devSet.adjust.saveFlag[i]);
adjustQuit in net_AS.c (Ch_AS4\apps_layer) line 3045 : dp("xxdevSet.adjust.value[%d]=%d [old] %d\n",i,devSet.adjust.value[i],devSet.adjustOld.value[i]);
adjustDataSaveEeprom_2nd in net_AS.c (Ch_AS4\apps_layer) line 3103 : 	dp("&devSet.adjust=0x%x ,&devSet.adjust.saveFlag=0x%x, &devSet.adjust.value=0x%x, &devSet.adjust.value[0]=0x%x\n",&devSet.adjust ,&devSet.adjust.saveFlag, &devSet.adjust.value, &devSet.adjust.value[0]);
adjustDataSaveEeprom_2nd in net_AS.c (Ch_AS4\apps_layer) line 3105 : 	dp("&devSet.adjust.value[0]	- &devSet.adjust = 0x%x\n",a);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3321 : 	dp("devState.actionMenu=%d\n",devState.actionMenu);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3325 : 	dp("PACKCODE_LCAS_SERVICE cmd=%d sub1=%d sub2=%d\n",service.command, service.subCommand1, service.subCommand2);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3437 : dp("PACKCODE_LCAS_MOTOR_RUN MotorCtrlSet=%d\n",MotorCtrlSet.bRun);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3439 : //	dp("[%3d] = 0x%02x \n",i,pData[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3452 : dp("PACKCODE_LCAS_MOTOR_SET\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3454 : //	dp("[%3d] = 0x%02x \n",i,pData[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3459 : dp("[]================================[%d]\n",i);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3460 : 	dp("bCtrlEnable[%d]  = 0x%02x \n",i,MotorCtrlSet.bCtrlEnable[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3462 : 	dp("controlCmd[%d] = 0x%02x \n",i,MotorCtrlSet.bDir[i] | MotorCtrlSet.bInfinite[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3464 : 	dp("bDir[%d]         = 0x%02x \n",i,MotorCtrlSet.bDir[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3465 : 	dp("bInfinite[%d]    = 0x%02x \n",i,MotorCtrlSet.bInfinite[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3466 : 	dp("nStep[%d]        = %d \n",i,MotorCtrlSet.nStep[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3467 : 	dp("nSpeedMin[%d]    = %d \n",i,MotorCtrlSet.nSpeedMin[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3468 : 	dp("nSpeedMax[%d]    = %d \n",i,MotorCtrlSet.nSpeedMax[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3469 : 	dp("bUnit[%d]        = 0x%02x \n",i,MotorCtrlSet.bUnit[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3470 : 	dp("bSensorCheck[%d] = 0x%02x \n",i,MotorCtrlSet.bSensorCheck[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3471 : 	dp("nStopBreak[%d]   = 0x%02x \n",i,MotorCtrlSet.nStopBreak[i]);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3473 : dp("[]================================[%d]\n",i);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3474 : 	dp("bReset = 0x%02x \n",MotorCtrlSet.bReset);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3475 : 	dp("bStop  = 0x%02x \n",MotorCtrlSet.bStop);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3476 : 	dp("bBreak = 0x%02x \n",MotorCtrlSet.bBreak);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3477 : 	dp("bRun   = 0x%02x \n",MotorCtrlSet.bRun);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3478 : dp("[]================================[%d]\n",i);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3513 : 	dp("PACKCODE_LCAS_MOTOR_RESET\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3516 : 			dp("PACKCODE_LCAS_MOTOR_STOP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3527 : 			dp("PACKCODE_LCAS_MOTOR_BREAK\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3546 : 			dp("PACKCODE_LCAS_MOTOR_SLEEP == %d\n",gpio_in);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3566 : //dp("PACKCODE_LCAS_CON\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3570 : 			dp("PACKCODE_LCAS_INJ_START\n");
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3944 : dp("net_Special111-- \n");
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3958 : dp("net_Special-- \n");
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 316 : 	dp("========================================\n") ;
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 324 : 	dp("[%d] pid=[%4d] act=[%8d] set = [%8d] free=[%8d] max=[%8d] \n", ctrl,(int)pidValue,(int)(actValue*100),(int)(setValue*100),(int)(freeSettemp*100),(int)(tempDiffRatioMax*100));
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 338 : dp("actValue = [%8d] freeSettemp = [%8d] tempRatioMax = [%8d] \n",(int)(actValue*100),(int)(freeSettemp*100),(int)(tempDiffRatioMax*100));
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 346 : 	dp("========================================\n[%1d] act = [%8d] timeL0 = [%8d]\n",ctrl,(int)(actValue*100),(int)(timeL0*100)) ;
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 372 : 				dp("[%d] actValue = [%8d] freeSettemp = [%8d] tempRatioMax = [%8d]  timeLS = [%4d] \n",ctrl,(int)(actValue*100),(int)(freeSettemp*100),(int)(tempDiffRatioMax*100),(int)(timeLS*100));
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 373 : 				dp("pid1.KP = [%8d]  pid1.Ti = [%8d] pid1.Td = [%8d]\n",(int)(pid1.Kp*100),(int)(pid1.Ti*100),(int)(pid1.Td*100)) ;
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 387 : 	dp("========================================\n[%1d] act = [%8d] timeL0 = [%8d]\n",ctrl,(int)(actValue*100),(int)(timeL0*100)) ;				
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 412 : 				dp("[%d] actValue = [%8d] freeSettemp = [%8d] tempRatioMax = [%8d]  timeLF = [%4d] \n",ctrl,(int)(actValue*100),(int)(freeSettemp*100),(int)(tempDiffRatioMax*100),(int)(timeLF*100));
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 413 : 				dp("pid.KP = [%8d]  pid.Ti = [%8d] pid.Td = [%8d]\n",(int)(pid.Kp*100),(int)(pid.Ti*100),(int)(pid.Td*100)) ;
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 422 : 			dp("[%d] E0=[%8d] E1=[%8d] Esum=[%8d]",ctrl,(int)(Error0*100),(int)(Error1*100),(int)(ErrorSum*100));
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 506 : //dp("================ctrl =[%d]\n",ctrl);
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 562 : 	dp("========================================\n") ;
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 569 : 	dp(" pid=[%4d] act=[%8d] set = [%8d] free=[%8d] max=[%8d] \n", (int)pidValue,(int)(actValue*100),(int)(setValue*100),(int)(freeSettemp*100),(int)(tempDiffRatioMax*100));
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 583 : dp("actValue = [%8d] freeSettemp = [%8d] tempRatioMax = [%8d] \n",(int)(actValue*100),(int)(freeSettemp*100),(int)(tempDiffRatioMax*100));
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 591 : 	dp("========================================\n[%1d] act = [%8d] timeL0 = [%8d]\n",ctrl,(int)(actValue*100),(int)(timeL0*100)) ;
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 627 : 				dp("[%d] actValue = [%8d] freeSettemp = [%8d] tempRatioMax = [%8d]  timeLS = [%4d] \n",ctrl,(int)(actValue*100),(int)(freeSettemp*100),(int)(tempDiffRatioMax*100),(int)(timeLS*100));
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 628 : 				dp("pid1.KP = [%8d]  pid1.Ti = [%8d] pid1.Td = [%8d]\n",(int)(pid1.Kp*100),(int)(pid1.Ti*100),(int)(pid1.Td*100)) ;
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 641 : 	dp("========================================\n[%1d] act = [%8d] timeL0 = [%8d]\n",ctrl,(int)(actValue*100),(int)(timeL0*100)) ;				
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 664 : 				dp("[%d] actValue = [%8d] freeSettemp = [%8d] tempRatioMax = [%8d]  timeLF = [%4d] \n",ctrl,(int)(actValue*100),(int)(freeSettemp*100),(int)(tempDiffRatioMax*100),(int)(timeLF*100));
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 665 : 				dp("pid.KP = [%8d]  pid.Ti = [%8d] pid.Td = [%8d]\n",(int)(pid.Kp*100),(int)(pid.Ti*100),(int)(pid.Td*100)) ;
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 674 : 			dp("[%d] E0=[%8d] E1=[%8d] Esum=[%8d]",ctrl,(int)(Error0*100),(int)(Error1*100),(int)(ErrorSum*100));
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 721 : //dp("================ctrl =[%d]\n",ctrl);
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 986 : 		dp("setTempReset ========================================") ;		
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 990 : dp("bErrSumReset ===%d  %d  ========",runSetup.tempOnoff,devState.oldTempOnoff);					
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1015 : dp("bErrSumReset = YES ========================================") ;					
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1124 : dp("ct= %4d S-[%1d] act= %5d set= %5d freeSettemp= %5d pid= %6d ErrSum= %6d\n"
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1128 : //	dp("S[%1d] kp = [%8d] Ti = [%6d] Td = [%6d] Ts = [%d]\n",ctrl,(int)(pid.Kp),(int)(pid.Ti),(int)(pid.Td),(int)(pid.Ts*100)) ;
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1129 : //	dp("S[%1d] E0 = [%8d] E1 = [%6d] ES = [%d]\n",ctrl,(int)(Error0*100),(int)(Error1*100),(int)(ErrorSum*100)) ;
PID_Control_AS.c (Ch_AS4\apps_layer) line 1388 : 	dp("aa=%d\n",aa);
PID_Control_AS.c (Ch_AS4\apps_layer) line 1394 : 	dp("bb=%d\n",bb);	
PID_Control_AS.c (Ch_AS4\apps_layer) line 1400 : 	dp("cc=%d\n",cc);	
rs422_if.c (Ch_AS4\apps_layer) line 162 : 				dp("return  AUTO_MODE_CMD\n");
init_system in sysconfig.c (Ch_AS4\apps_layer) line 317 : 	dp("devSet.IP_switch = %x\n\r",devSet.IP_switch);
init_system in sysconfig.c (Ch_AS4\apps_layer) line 324 : 	dp("devSet.msen_switch = %x\n\r",devSet.msen_switch);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 473 : dp("time=%d\n",time);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 542 : dp("[ENVM : default MAC] = [%02x:%02x:%02x:%02x:%02x:%02x]\n\r",
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 566 : dp("[ENVM : default MAC] = [%02x:%02x:%02x:%02x:%02x:%02x]\n\r",
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 589 : dp("time=%d\n",time);
isEnvmDataAvailable in sysconfig.c (Ch_AS4\apps_layer) line 814 : dp("==Envm_Data available!!!\n");
isFirmwareUpdate in sysconfig.c (Ch_AS4\apps_layer) line 838 : dp("App_Ver Modified!!!\n");
save_Storage_INFO_Ver_Envm in sysconfig.c (Ch_AS4\apps_layer) line 956 : 	dp("#save_Storage_INFO_Envm =================================\n");
tcp_server_recv in tcp_server.c (Ch_AS4\apps_layer) line 583 : dp("iSaveDatainPos=%d len=%d\n",iSaveDatainPos,p->len);
tcp_server_recv in tcp_server.c (Ch_AS4\apps_layer) line 598 : dp("test tcp_close\n");
tcp_server_recv in tcp_server.c (Ch_AS4\apps_layer) line 603 : //dp("--iSaveDatainPos=%d\n",iSaveDatainPos);
tcp_server_recv in tcp_server.c (Ch_AS4\apps_layer) line 611 : dp("First data received\r\n");
tcp_server_recv in tcp_server.c (Ch_AS4\apps_layer) line 654 : //	tcp_close(tpcb);		// dp("test tcp_close\n");
tcp_server_recv in tcp_server.c (Ch_AS4\apps_layer) line 668 : dp("iSaveDatainPos=%d len=%d\n",iSaveDatainPos,len);
tcp_server_recv in tcp_server.c (Ch_AS4\apps_layer) line 684 : dp("test tcp_close\n");
tcp_server_recv in tcp_server.c (Ch_AS4\apps_layer) line 712 : dp("test tcp_recved =%d \n",p->tot_len);
motorControlWho in testPrgm.c (Ch_AS4\apps_layer) line 2033 : dp("motorControlWho nStopBreak[%d] = [%d]\n",who,MotorCtrlSet.nStopBreak[who]);
testPrgm.c (Ch_AS4\apps_layer) line 2142 : dp("pattern_a\n");      
testPrgm.c (Ch_AS4\apps_layer) line 2152 : dp("pattern_b\n");            
testPrgm.c (Ch_AS4\apps_layer) line 2211 : dp("status = %d \n",status);
testPrgm.c (Ch_AS4\apps_layer) line 2242 :   	dp("%d\n",read_data[i]);
testPrgm.c (Ch_AS4\apps_layer) line 2244 :  	dp("read end \n");
testPrgm.c (Ch_AS4\apps_layer) line 2257 :   	dp("%d\n",read_data[i]);
testPrgm.c (Ch_AS4\apps_layer) line 2262 :   	dp("%d\n",g_master_rx_buf[i]);
ShowMemoryWord in util.c (Ch_AS4\apps_layer) line 134 : //	dp("Memory contents ....\r\n");
ShowMemoryWord in util.c (Ch_AS4\apps_layer) line 138 : 		if((i&0x3)==0) dp("%03X : ",(i>>2));
ShowMemoryWord in util.c (Ch_AS4\apps_layer) line 139 : 		dp("%08lX,",data[i]);
ShowMemoryWord in util.c (Ch_AS4\apps_layer) line 142 : 		if((i&0x3)==3) dp("\r\n");
ShowMemoryWord in util.c (Ch_AS4\apps_layer) line 144 : 	dp("\r\n");
init_RTC in util.c (Ch_AS4\apps_layer) line 245 : dp("y=%d M=%d D=%d H=%d M=%d S=%d \n",sysInform.cSysDate.year,sysInform.cSysDate.month,sysInform.cSysDate.date,sysInform.cSysTime.hour,sysInform.cSysTime.minute,sysInform.cSysTime.second);
init_RTC in util.c (Ch_AS4\apps_layer) line 246 : //dp("tmr=%d %x\n",tmr,tmr);
set_RtcTime in util.c (Ch_AS4\apps_layer) line 287 : dp("time_in_sec -- RTC Secs Set %d %d %d %d %d %d %d\n", tm_day,year,month,hour,min,sec,time_in_sec);
get_RtcTime in util.c (Ch_AS4\apps_layer) line 305 : //dp("tmr=%d %x\n",tmr,tmr);
get_RtcTime in util.c (Ch_AS4\apps_layer) line 355 : //dp("y=%d M=%d D=%d H=%d M=%d S=%d \n",noOfYears,noOfMonths,noOfDays,noOfHours,noOfMins,noOfSecs);
get_RtcTime in util.c (Ch_AS4\apps_layer) line 356 : //dp("tmr=%d %x\n",tmr,tmr);
---- wakeup_XYZ_checkHome Matches (6 in 2 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 642 : int wakeup_XYZ_checkHome()
mix_waitPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3862 : 			if(wakeup_XYZ_checkHome()) subMenu_mwp = 6;
actionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 4171 : 			if(wakeup_XYZ_checkHome()) {
LcasAction_task.c (Ch_AS4\apps_layer) line 4245 : 					if(wakeup_XYZ_checkHome()) {
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 4865 : 			if(wakeup_XYZ_checkHome()) {
LcasAction_task.h (Ch_AS4\inc) line 37 : int wakeup_XYZ_checkHome();		// sleep mode에서 깨어나라
---- motorControlFn Matches (4 in 3 files) ----
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3523 : motorControlFn();
testPrgm.c (Ch_AS4\apps_layer) line 2072 : void motorControlFn()
testPrgm.c (Ch_AS4\apps_layer) line 2089 : void motorControlFn()
testPrgm.h (Ch_AS4\inc) line 85 : void motorControlFn();
---- CMD_CHK_DIR_START Matches (12 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 406 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1361 : 	CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1364 : dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1437 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1576 : 	CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1579 : 	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1648 : 		CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1740 : 	CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1743 : 	dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2203 : 	CMD_CHK_DIR_START(MOTOR_SYR);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2105 : CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2108 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
---- moveStepSpeed Matches (32 in 4 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 374 : // moveStepSpeed 명령에서 입력된 것이 적용된다. -- 아래 CMD_CHK_DIR_STATE_DIR_Z은 사용하지 않음.
define_AS.h (Ch_AS4\ryu_inc) line 408 : // moveStepSpeed 명령에서 입력된 것이 적용된다. -- 아래 CMD_CHK_DIR_STATE_DIR_Z은 사용하지 않음.
MotorCtrl_task.c (Ch_AS4\apps_layer) line 621 : int moveStepSpeed(uint32_t who, uint32_t minSpeed, uint32_t maxSpeed, int32_t tStep)
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1273 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1366 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1440 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1503 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1581 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1651 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goZ in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1699 : 	ret = moveStepSpeed(MOTOR_Z, devSet.minSpeed[MOTOR_Z], devSet.maxSpeed[MOTOR_Z], step);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1746 : 	ret = moveStepSpeed(MOTOR_Z, devSet.minSpeed[MOTOR_Z], devSet.maxSpeed[MOTOR_Z], step);
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2157 : 	ret = moveStepSpeed(MOTOR_SYR, minSpeed, maxSpeed, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2206 : 	ret = moveStepSpeed(MOTOR_SYR, minSpeed, maxSpeed, step);
goVal in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2248 : 		return moveStepSpeed(MOTOR_VAL, minSpeed, maxSpeed, step);
goVal_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2285 : 		moveStepSpeed(MOTOR_VAL, minSpeed, maxSpeed, step);
goInj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2322 : 		return moveStepSpeed(MOTOR_INJ, minSpeed, maxSpeed, step);
goInj_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2359 : 		moveStepSpeed(MOTOR_INJ, minSpeed, maxSpeed, step);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2599 : 					moveStepSpeed(MOTOR_VAL, devSet.chkHomeSpeedMin[MOTOR_VAL], devSet.chkHomeSpeed[MOTOR_VAL], devSet.adjust.value[MOTOR_VAL] * ADJUST_STEP_UNIT_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2740 : 					moveStepSpeed(MOTOR_INJ, devSet.chkHomeSpeedMin[MOTOR_INJ], devSet.chkHomeSpeed[MOTOR_INJ], devSet.adjust.value[MOTOR_INJ] * ADJUST_STEP_UNIT_INJ);		
MotorCtrl_task.h (Ch_AS4\inc) line 53 : int moveStepSpeed(uint32_t who, uint32_t minSpeed, uint32_t maxSpeed, int32_t tStep);
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1456 : 						moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, -(UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1480 : 						moveStepSpeed(MOTOR_VAL, 0, ADJUST_SPEED_VAL, -ADJUST_STEP_UNIT_VAL);			
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1503 : 						moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, (UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));				
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1527 : 						moveStepSpeed(MOTOR_VAL, 0, ADJUST_SPEED_VAL, ADJUST_STEP_UNIT_VAL);						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1549 : 						moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_UP_SPEED, -(SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1570 : 						moveStepSpeed(MOTOR_SYR, 0, ADJUST_SPEED_SYL, -M_TEST_SYRINGE_STEP_VALUE);						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1591 : 						moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_DOWN_SPEED, (SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1612 : 						moveStepSpeed(MOTOR_SYR, 0, ADJUST_SPEED_SYL, M_TEST_SYRINGE_STEP_VALUE);						
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1748 : 				moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, (UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));		//	wash port ccw
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1759 : 				moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_DOWN_SPEED, (SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1776 : 				moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, -(UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));		//	inj port	cw		
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1786 : 				moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_UP_SPEED, -(SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
---- CMD_CHK_DIR_START Matches (12 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1361 : 	CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1364 : dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1437 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1576 : 	CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1579 : 	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1648 : 		CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1740 : 	CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1743 : 	dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2203 : 	CMD_CHK_DIR_START(MOTOR_SYR);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2105 : CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2108 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
---- motorControlFn Matches (4 in 3 files) ----
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3523 : motorControlFn();
testPrgm.c (Ch_AS4\apps_layer) line 2072 : void motorControlFn()
testPrgm.c (Ch_AS4\apps_layer) line 2089 : void motorControlFn()
testPrgm.h (Ch_AS4\inc) line 85 : void motorControlFn();
---- goSyr Matches (12 in 5 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1149 : // goPosVial -> goZ(vial detect) -> goSyr(uL,speed) -> goZ(top)
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1586 : //						goSyr(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2122 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2155 : dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2200 : //dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4132 : 			goSyr((float)(devSet.syrExchangeHeight), 0, WASH_SPEED_UP_SYR, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 79 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2180 : 					goSyr(-ADJUST_STEP_UNIT_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2229 : 					goSyr((-ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2283 : 					goSyr((ADJUST_STEP_UNIT_SYR), 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2335 : 					goSyr((ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
option_AS.h (Ch_AS4\ryu_inc) line 170 : // Step 계산시 플로팅포인트 계산 에러 (goSyr())
---- 301 Matches (1 in 1 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 197 : 72	301.3	0.1227264
---- READ_CHK_ZX Matches (3 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 426 : 	#define READ_CHK_ZX		*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x2 << 2)))		// 하위 [15:0]
define_AS.h (Ch_AS4\ryu_inc) line 437 : #define READ_CHK_ZX
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4856 : 	devState.chk_Dir[MOTOR_VAL] = READ_CHK_ZX;
---- 302 Matches (0 in 0 files) ----
---- READ_STEP_COUNT Matches (10 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 358 : 	#define READ_STEP_COUNT(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x1 << 2)))
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3062 : stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3101 : stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3120 : stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3140 : stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3168 : stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3331 : //stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3371 : //stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3390 : //stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3409 : //stepCount = READ_STEP_COUNT(MOTOR_X);
---- RD_CHK_DIR_COUNT Matches (0 in 0 files) ----
---- READ_STEP_COUNT Matches (10 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 358 : 	#define READ_STEP_COUNT(WHO) *((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x1 << 2)))
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3062 : stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3101 : stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3120 : stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3140 : stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3168 : stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3331 : //stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3371 : //stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3390 : //stepCount = READ_STEP_COUNT(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3409 : //stepCount = READ_STEP_COUNT(MOTOR_X);
---- CMD_CHK_DIR_START Matches (13 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1361 : 	CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1364 : dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1437 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1576 : 	CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1579 : 	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1648 : 		CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1740 : 	CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1743 : 	dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2203 : 	CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2206 : 	dprintf("## CMD_CHK_DIR_START chk_DirS=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2105 : CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2108 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
---- ctrlPortAddr Matches (13 in 4 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 576 : 	unsigned int ctrlPortAddr[STEP_MOTOR_COUNT];
define_AS.h (Ch_AS4\ryu_inc) line 310 : //	#define CMD_CTRL_PORT(WHO, CMD)	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (CMD);
Def_stepCon.h (Ch_AS4\common_inc) line 313 : 	#define motorResetCmd(WHO)	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_RESET); }
Def_stepCon.h (Ch_AS4\common_inc) line 315 : 	#define motorReadyCmd(WHO)	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_WAKEUP); }
Def_stepCon.h (Ch_AS4\common_inc) line 316 : 	#define motorSleepCmd(WHO , DIR) 	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (DIR | CMD_SLEEP); }
stepCtrlCmd in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2405 : 	*((uint32_t volatile *)(devSet.ctrlPortAddr[who])) = ctrlCmd;
initStepCtrlData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2453 : 		*((uint32_t volatile *)(devSet.ctrlPortAddr[i])) 		= CMD_RESET;	// ready 상태로 만든다.
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4591 : 	devSet.ctrlPortAddr[MOTOR_X] = CTRL_PORT_ADDR_MOTOR_X_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4592 : 	devSet.ctrlPortAddr[MOTOR_Y] = CTRL_PORT_ADDR_MOTOR_Y_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4593 : 	devSet.ctrlPortAddr[MOTOR_Z] = CTRL_PORT_ADDR_MOTOR_X_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4594 : 	devSet.ctrlPortAddr[MOTOR_SYR] = CTRL_PORT_ADDR_MOTOR_Y_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4595 : 	devSet.ctrlPortAddr[MOTOR_VAL] = CTRL_PORT_ADDR_MOTOR_VAL_INJ;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4596 : 	devSet.ctrlPortAddr[MOTOR_INJ] = CTRL_PORT_ADDR_MOTOR_VAL_INJ;
---- stepControl Matches (95 in 3 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 530 : int stepControl(uint32_t who, uint32_t ctrlCmd, uint32_t Speed, uint32_t totalStep)
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 757 : 			moveErr = stepControl(who, HOME_DIR_X | CMD_START, speed, totalStep);
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 764 : 			moveErr = stepControl(who, HOME_DIR_Y | CMD_START, speed, totalStep);
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 771 : 			stepControl(who, HOME_DIR_Z | CMD_START, speed, totalStep);
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 775 : 			stepControl(who, HOME_DIR_SYR | CMD_START, speed, totalStep);
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 780 : 			stepControl(who, HOME_DIR_VAL | CMD_START, rpm, totalStep);
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 791 : 			stepControl(who, HOME_DIR_INJ | CMD_START, rpm, totalStep);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2531 : 				stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], HOME_CHECK_INIT_STEP_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2549 : 				stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], STEP_VAL_DEGREE_18);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2555 : 				stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], HOME_CHECK_INIT_STEP_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2573 : 				stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], STEP_VAL_DEGREE_18);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2598 : 					if(devSet.adjust.value[MOTOR_VAL] > 0) stepControl(MOTOR_VAL, R_HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], devSet.adjust.value[MOTOR_VAL] * ADJUST_STEP_UNIT_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2599 : 					else if(devSet.adjust.value[MOTOR_VAL] < 0) stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], -devSet.adjust.value[MOTOR_VAL] * ADJUST_STEP_UNIT_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2606 : 					stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], FIND_HOME_UNIT_STEP_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2671 : 				stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], HOME_CHECK_INIT_STEP_INJ);				
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2689 : 				stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], STEP_INJ_DEGREE_18);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2696 : 				stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], HOME_CHECK_INIT_STEP_INJ);				
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2714 : 				stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], STEP_INJ_DEGREE_18);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2739 : 					if(devSet.adjust.value[MOTOR_INJ] > 0) stepControl(MOTOR_INJ, R_HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], devSet.adjust.value[MOTOR_INJ] * ADJUST_STEP_UNIT_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2740 : 					else if(devSet.adjust.value[MOTOR_INJ] < 0) stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], -devSet.adjust.value[MOTOR_INJ] * ADJUST_STEP_UNIT_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2747 : 					stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], FIND_HOME_UNIT_STEP_INJ);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2823 : 				stepControl(MOTOR_SYR, R_HOME_DIR_SYR| CMD_START, devSet.chkHomeSpeed[MOTOR_SYR], HOME_CHECK_INIT_STEP_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2847 : 			stepControl(MOTOR_SYR, R_HOME_DIR_SYR| CMD_START, devSet.chkHomeSpeed[MOTOR_SYR], HOME_CHECK_STEP_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2873 : 						stepControl(MOTOR_SYR, R_HOME_DIR_SYR | CMD_START, devSet.chkHomeSpeed[MOTOR_SYR], homeStep);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2876 : 						stepControl(MOTOR_SYR, HOME_DIR_SYR | CMD_START, devSet.chkHomeSpeed[MOTOR_SYR], -homeStep);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2881 : 					stepControl(MOTOR_SYR, HOME_DIR_SYR | CMD_START, devSet.chkHomeSpeed[MOTOR_SYR], FIND_HOME_UNIT_STEP_SYR);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2940 : //				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], HOME_CHECK_INIT_STEP_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2943 : 				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], 3200);	// 4.88mm
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2945 : 				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], devSet.chkHomeStepCnt[MOTOR_Z]);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2972 : 			stepControl(MOTOR_Z, HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], STEP_MORE_HOME_Z);			
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2978 : 				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], 3200); // 4.88mm
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2980 : 				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], devSet.chkHomeStepCnt[MOTOR_Z]);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3000 : 			stepControl(MOTOR_Z, HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], STEP_MORE_HOME_Z);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3085 : 				stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600); 
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3113 : 			stepControl(MOTOR_X, HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], STEP_MORE_HOME_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3130 : 			stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600); 
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3131 : //			stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 32); 			
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3152 : 			stepControl(MOTOR_X, HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], STEP_MORE_HOME_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3223 : 				stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600); 
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3246 : 			stepControl(MOTOR_X, HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], STEP_MORE_HOME_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3260 : 			stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600); 
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3278 : 			stepControl(MOTOR_X, HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], STEP_MORE_HOME_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3355 : 				stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3383 : 			stepControl(MOTOR_X, HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], STEP_MORE_HOME_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3400 : 			stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600); 
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3469 : 				stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], 1600);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3492 : 			stepControl(MOTOR_Y, HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], STEP_MORE_HOME_Y);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3505 : 			stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], 1600);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3523 : 			stepControl(MOTOR_Y, HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], STEP_MORE_HOME_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3593 : 				stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], 1600);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3616 : 			stepControl(MOTOR_Y, HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], STEP_MORE_HOME_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3629 : 			stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], 1600);
MotorCtrl_task.h (Ch_AS4\inc) line 51 : int stepControl(uint32_t who, uint32_t ctrlCmd, uint32_t Speed, uint32_t totalStep);
testPrgm.c (Ch_AS4\apps_layer) line 289 : 					stepControl(who , HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);		
testPrgm.c (Ch_AS4\apps_layer) line 295 : 					stepControl(who, R_HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);
testPrgm.c (Ch_AS4\apps_layer) line 301 : 					stepControl(who , HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 307 : 					stepControl(who, R_HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 321 : 					stepControl(who , HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);		
testPrgm.c (Ch_AS4\apps_layer) line 327 : 					stepControl(who, R_HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);
testPrgm.c (Ch_AS4\apps_layer) line 333 : 					stepControl(who , HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 339 : 					stepControl(who, R_HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 352 : 					stepControl(who , HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 50);		
testPrgm.c (Ch_AS4\apps_layer) line 358 : 					stepControl(who, R_HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 50);
testPrgm.c (Ch_AS4\apps_layer) line 364 : 					stepControl(who , HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 2400);		
testPrgm.c (Ch_AS4\apps_layer) line 370 : 					stepControl(who, R_HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 2400);		
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1008 : //						stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_X * 1600	);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1009 : 						stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, M_TEST_XYZ_SPEED_X, M_TEST_XYZ_LONG_STEP_X);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1030 : //						stepControl(MOTOR_X, HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_X * 1600);					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1031 : 						stepControl(MOTOR_X, HOME_DIR_X | CMD_START, M_TEST_XYZ_SPEED_X, M_TEST_XYZ_LONG_STEP_X);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1052 : 						stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, M_TEST_XYZ_SPEED_X, M_TEST_XYZ_SHORT_STEP_X);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1073 : 						stepControl(MOTOR_X, HOME_DIR_X | CMD_START, M_TEST_XYZ_SPEED_X, M_TEST_XYZ_SHORT_STEP_X);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1095 : 						stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, M_TEST_XYZ_SPEED_Y, M_TEST_XYZ_LONG_STEP_Y);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1116 : 						stepControl(MOTOR_Y, HOME_DIR_Y | CMD_START, M_TEST_XYZ_SPEED_Y, M_TEST_XYZ_LONG_STEP_Y);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1137 : 						stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, M_TEST_XYZ_SPEED_Y, M_TEST_XYZ_SHORT_STEP_Y);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1158 : 						stepControl(MOTOR_Y, HOME_DIR_Y | CMD_START, M_TEST_XYZ_SPEED_Y, M_TEST_XYZ_SHORT_STEP_Y);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1181 : 						stepControl(MOTOR_Z, HOME_DIR_Z | CMD_START, M_TEST_XYZ_SPEED_Z, M_TEST_XYZ_LONG_STEP_Z);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1202 : 						stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, M_TEST_XYZ_SPEED_Z, M_TEST_XYZ_LONG_STEP_Z);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1223 : 						stepControl(MOTOR_Z, HOME_DIR_Z | CMD_START, M_TEST_XYZ_SPEED_Z, M_TEST_XYZ_SHORT_STEP_Z);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1244 : 						stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, M_TEST_XYZ_SPEED_Z, M_TEST_XYZ_SHORT_STEP_Z);
testPrgm.c (Ch_AS4\apps_layer) line 1927 : 					stepControl(who , HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);		
testPrgm.c (Ch_AS4\apps_layer) line 1933 : 					stepControl(who, R_HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);
testPrgm.c (Ch_AS4\apps_layer) line 1939 : 					stepControl(who , HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 1945 : 					stepControl(who, R_HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 1959 : 					stepControl(who , HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);		
testPrgm.c (Ch_AS4\apps_layer) line 1965 : 					stepControl(who, R_HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);
testPrgm.c (Ch_AS4\apps_layer) line 1971 : 					stepControl(who , HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 1977 : 					stepControl(who, R_HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 1990 : 					stepControl(who , HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 50);		
testPrgm.c (Ch_AS4\apps_layer) line 1996 : 					stepControl(who, R_HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 50);
testPrgm.c (Ch_AS4\apps_layer) line 2002 : 					stepControl(who , HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 2400);		
testPrgm.c (Ch_AS4\apps_layer) line 2008 : 					stepControl(who, R_HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 2400);		
testPrgm.c (Ch_AS4\apps_layer) line 2079 : 				stepControl(i, MotorCtrlSet.bDir[i] | CMD_START | MotorCtrlSet.bInfinite[i], MotorCtrlSet.nSpeedMax[i] | MotorCtrlSet.nSpeedMin[i] << 8, MotorCtrlSet.nStep[i]);
testPrgm.c (Ch_AS4\apps_layer) line 2080 : //				stepControl(i, MotorCtrlSet.bDir[i] | CMD_START | MotorCtrlSet.bInfinite[i], MotorCtrlSet.nSpeedMax[i] | MotorCtrlSet.nSpeedMin[i], MotorCtrlSet.nStep[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2109 : 				stepControl(i, MotorCtrlSet.bDir[i] | CMD_START | MotorCtrlSet.bInfinite[i], MotorCtrlSet.nSpeedMax[i] | MotorCtrlSet.nSpeedMin[i] << 8, MotorCtrlSet.nStep[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2111 : dprintf("## stepControl       chk_Dir=%08x\n",devState.chk_Dir[i]);
---- goSensorHome Matches (11 in 3 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 750 : int goSensorHome(uint32_t who, uint32_t speed, uint32_t totalStep)
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2835 : 					goSensorHome(MOTOR_SYR, devSet.chkHomeSpeed[MOTOR_SYR], devSet.chkHomeStepCnt[MOTOR_SYR]);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2953 : 				goSensorHome(MOTOR_Z, devSet.chkHomeSpeed[MOTOR_Z], devSet.chkHomeStepCnt[MOTOR_Z]);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3091 : 				goSensorHome(MOTOR_X, devSet.chkHomeSpeed[MOTOR_X], devSet.chkHomeStepCnt[MOTOR_X]);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3229 : 				goSensorHome(MOTOR_X, devSet.chkHomeSpeed[MOTOR_X], devSet.chkHomeStepCnt[MOTOR_X]);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3361 : 				goSensorHome(MOTOR_X, devSet.chkHomeSpeed[MOTOR_X], devSet.chkHomeStepCnt[MOTOR_X]);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3475 : 				goSensorHome(MOTOR_Y, devSet.chkHomeSpeed[MOTOR_Y], devSet.chkHomeStepCnt[MOTOR_Y]);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3599 : 				goSensorHome(MOTOR_Y, devSet.chkHomeSpeed[MOTOR_Y], devSet.chkHomeStepCnt[MOTOR_Y]);
MotorCtrl_task.h (Ch_AS4\inc) line 56 : int goSensorHome(uint32_t who, uint32_t speed, uint32_t totalStep);
motorControlWho in testPrgm.c (Ch_AS4\apps_layer) line 2038 : 				goSensorHome(who, devSet.chkHomeSpeed[who], devSet.chkHomeStepCnt[who]);
motorControlWho in testPrgm.c (Ch_AS4\apps_layer) line 2047 : 				goSensorHome(who, devSet.chkHomeSpeed[who], devSet.chkHomeStepCnt[who]);
---- CMD_CHK_DIR_START Matches (14 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1361 : 	CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1364 : dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1437 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1576 : 	CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1579 : 	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1648 : 		CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1740 : 	CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1743 : 	dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2203 : 	CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2206 : 	dprintf("## CMD_CHK_DIR_START chk_DirS=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2107 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2112 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2116 : CMD_CHK_DIR_START(i);
---- moveStepSpeed Matches (33 in 4 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 374 : // moveStepSpeed 명령에서 입력된 것이 적용된다. -- 아래 CMD_CHK_DIR_STATE_DIR_Z은 사용하지 않음.
define_AS.h (Ch_AS4\ryu_inc) line 408 : // moveStepSpeed 명령에서 입력된 것이 적용된다. -- 아래 CMD_CHK_DIR_STATE_DIR_Z은 사용하지 않음.
MotorCtrl_task.c (Ch_AS4\apps_layer) line 621 : int moveStepSpeed(uint32_t who, uint32_t minSpeed, uint32_t maxSpeed, int32_t tStep)
MotorCtrl_task.c (Ch_AS4\apps_layer) line 751 : int moveStepSpeed(uint32_t who, uint32_t minSpeed, uint32_t maxSpeed, int32_t tStep)
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1397 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1490 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1564 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1627 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1705 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1775 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goZ in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1823 : 	ret = moveStepSpeed(MOTOR_Z, devSet.minSpeed[MOTOR_Z], devSet.maxSpeed[MOTOR_Z], step);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1870 : 	ret = moveStepSpeed(MOTOR_Z, devSet.minSpeed[MOTOR_Z], devSet.maxSpeed[MOTOR_Z], step);
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2281 : 	ret = moveStepSpeed(MOTOR_SYR, minSpeed, maxSpeed, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2332 : 	ret = moveStepSpeed(MOTOR_SYR, minSpeed, maxSpeed, step);
goVal in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2374 : 		return moveStepSpeed(MOTOR_VAL, minSpeed, maxSpeed, step);
goVal_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2411 : 		moveStepSpeed(MOTOR_VAL, minSpeed, maxSpeed, step);
goInj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2448 : 		return moveStepSpeed(MOTOR_INJ, minSpeed, maxSpeed, step);
goInj_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2485 : 		moveStepSpeed(MOTOR_INJ, minSpeed, maxSpeed, step);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2725 : 					moveStepSpeed(MOTOR_VAL, devSet.chkHomeSpeedMin[MOTOR_VAL], devSet.chkHomeSpeed[MOTOR_VAL], devSet.adjust.value[MOTOR_VAL] * ADJUST_STEP_UNIT_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2866 : 					moveStepSpeed(MOTOR_INJ, devSet.chkHomeSpeedMin[MOTOR_INJ], devSet.chkHomeSpeed[MOTOR_INJ], devSet.adjust.value[MOTOR_INJ] * ADJUST_STEP_UNIT_INJ);		
MotorCtrl_task.h (Ch_AS4\inc) line 53 : int moveStepSpeed(uint32_t who, uint32_t minSpeed, uint32_t maxSpeed, int32_t tStep);
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1456 : 						moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, -(UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1480 : 						moveStepSpeed(MOTOR_VAL, 0, ADJUST_SPEED_VAL, -ADJUST_STEP_UNIT_VAL);			
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1503 : 						moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, (UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));				
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1527 : 						moveStepSpeed(MOTOR_VAL, 0, ADJUST_SPEED_VAL, ADJUST_STEP_UNIT_VAL);						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1549 : 						moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_UP_SPEED, -(SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1570 : 						moveStepSpeed(MOTOR_SYR, 0, ADJUST_SPEED_SYL, -M_TEST_SYRINGE_STEP_VALUE);						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1591 : 						moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_DOWN_SPEED, (SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1612 : 						moveStepSpeed(MOTOR_SYR, 0, ADJUST_SPEED_SYL, M_TEST_SYRINGE_STEP_VALUE);						
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1748 : 				moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, (UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));		//	wash port ccw
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1759 : 				moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_DOWN_SPEED, (SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1776 : 				moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, -(UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));		//	inj port	cw		
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1786 : 				moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_UP_SPEED, -(SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
---- CMD_CHK_DIR_START Matches (14 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1488 : 		CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1491 : 	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1563 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1702 : 	CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1705 : 	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1774 : 		CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1866 : 	CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1869 : 	dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2329 : 	CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2332 : 	dprintf("## CMD_CHK_DIR_START chk_DirS=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2107 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2112 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2116 : CMD_CHK_DIR_START(i);
---- CMD_CHK_DIR_START Matches (14 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1488 : 		CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1490 : 	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1566 : 				CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1707 : 		CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1709 : 	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1781 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1875 : 		CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1877 : 	dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2338 : 		CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2340 : 	dprintf("## CMD_CHK_DIR_START chk_DirS=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2107 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2112 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2116 : CMD_CHK_DIR_START(i);
---- CMD_CHK_DIR_START Matches (14 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1364 : 		CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1366 : 	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1442 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1583 : 		CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1585 : 	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1657 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1751 : 		CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1753 : 	dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2214 : 		CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2216 : 	dprintf("## CMD_CHK_DIR_START chk_DirS=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2106 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2110 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2114 : CMD_CHK_DIR_START(i);
---- READ_CHK_DIR Matches (13 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 424 : 	#define READ_CHK_DIR(WHO)	*((uint32_t volatile *)(devSet.read_ChkDir_Addr[WHO]))
define_AS.h (Ch_AS4\ryu_inc) line 473 : //#define READ_CHK_DIR(WHO)		*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x4 << 2) + (((WHO) & 0x1) << 2))		// 상위 [31:16]
define_AS.h (Ch_AS4\ryu_inc) line 475 : //#define READ_CHK_DIR(WHO)		*((uint32_t volatile *)(devSet.baseAddr[WHO] + (0x4 + WHO) << 2)			// addr : x(4) , Y(5), z(6), Syr(7)
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1365 : 	devState.chk_Dir[MOTOR_X] = READ_CHK_DIR(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1584 : 	devState.chk_Dir[MOTOR_Y] = READ_CHK_DIR(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1752 : 	devState.chk_Dir[MOTOR_Z] = READ_CHK_DIR(MOTOR_Z);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2215 : 	devState.chk_Dir[MOTOR_SYR] = READ_CHK_DIR(MOTOR_SYR);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4862 : 	devState.chk_Dir[MOTOR_Z] = READ_CHK_DIR(MOTOR_Z);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4863 : 	devState.chk_Dir[MOTOR_X] = READ_CHK_DIR(MOTOR_X);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4865 : 	devState.chk_Dir[MOTOR_Y] = READ_CHK_DIR(MOTOR_Y);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4866 : 	devState.chk_Dir[MOTOR_SYR] = READ_CHK_DIR(MOTOR_SYR);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2109 : devState.chk_Dir[i] = READ_CHK_DIR(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2117 : devState.chk_Dir[i] = READ_CHK_DIR(i);
---- checkPosition Matches (4 in 4 files) ----
main in main.c (Ch_AS4) line 557 : 		if(devSet.posCheckEnable == YES) checkPosition();
MotorCtrl_task.c (Ch_AS4\apps_layer) line 4958 : void checkPosition()
MotorCtrl_task.h (Ch_AS4\inc) line 132 : void checkPosition();
option_AS.h (Ch_AS4\ryu_inc) line 281 : #define CHECK_POSITION_MODIFY			1		// 에러발생시 checkPosition() 재실행
---- XXX9999 Matches (3 in 1 files) ----
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2086 : 	dfpErr("===XXX9999 devState.btMotorState[MOTOR_Z] = [%x] [%x]\n",devState.btMotorState[MOTOR_Z],devState.btMotorState[MOTOR_X]);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2088 : 	dfpErr("===XXX9999------\n");
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2090 : 	dfpErr("===XXX9999----------- OK\n");
---- VIAL_XY_CALIBRATION_FIX Matches (13 in 4 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 117 : //	#define VIAL_XY_CALIBRATION_FIX				1
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 832 : #if VIAL_XY_CALIBRATION_FIX
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1200 : #if VIAL_XY_CALIBRATION_FIX			
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1285 : #if VIAL_XY_CALIBRATION_FIX
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1807 : #if VIAL_XY_CALIBRATION_FIX				
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1866 : #if VIAL_XY_CALIBRATION_FIX
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1893 : #if VIAL_XY_CALIBRATION_FIX
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1966 : #if VIAL_XY_CALIBRATION_FIX
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1989 : #if VIAL_XY_CALIBRATION_FIX
initVialCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4424 : #if VIAL_XY_CALIBRATION_FIX
initVialCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4545 : #if VIAL_XY_CALIBRATION_FIX
MotorCtrl_task.h (Ch_AS4\inc) line 61 : #if VIAL_XY_CALIBRATION_FIX
option_AS.h (Ch_AS4\ryu_inc) line 403 : #define VIAL_XY_CALIBRATION_FIX				1
---- VIAL_XY_CALIBRATION_FIX_Y Matches (9 in 2 files) ----
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 892 : #if VIAL_XY_CALIBRATION_FIX_Y
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1189 : #if VIAL_XY_CALIBRATION_FIX_Y
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1520 :  #if VIAL_XY_CALIBRATION_FIX_Y
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1812 : #if VIAL_XY_CALIBRATION_FIX_Y
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1902 : #if VIAL_XY_CALIBRATION_FIX_Y			
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1994 : #if VIAL_XY_CALIBRATION_FIX_Y
initVialCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4400 : #if VIAL_XY_CALIBRATION_FIX_Y
initVialCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4524 : #if VIAL_XY_CALIBRATION_FIX_Y
option_AS.h (Ch_AS4\ryu_inc) line 404 : //#define VIAL_XY_CALIBRATION_FIX_Y			1
---- VIAL_XY_CALIBRATION_FIX_Y Matches (10 in 3 files) ----
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 892 : #if VIAL_XY_CALIBRATION_FIX_Y
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1189 : #if VIAL_XY_CALIBRATION_FIX_Y
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1520 :  #if VIAL_XY_CALIBRATION_FIX_Y
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1812 : #if VIAL_XY_CALIBRATION_FIX_Y
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1902 : #if VIAL_XY_CALIBRATION_FIX_Y			
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1994 : #if VIAL_XY_CALIBRATION_FIX_Y
initVialCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4400 : #if VIAL_XY_CALIBRATION_FIX_Y
initVialCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4524 : #if VIAL_XY_CALIBRATION_FIX_Y
MotorCtrl_task.h (Ch_AS4\inc) line 69 : #if VIAL_XY_CALIBRATION_FIX_Y
option_AS.h (Ch_AS4\ryu_inc) line 404 : //#define VIAL_XY_CALIBRATION_FIX_Y			1
---- goRetryPos_Y Matches (3 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 868 : int goRetryPos_Y(int32_t pos, uint32_t Tray, uint32_t option)
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1113 : 			if(goRetryPos_Y(devState.mActSet[MOTOR_Y].pos, devState.mActSet[MOTOR_Y].Tray, devState.mActSet[MOTOR_Y].option)) {
MotorCtrl_task.h (Ch_AS4\inc) line 146 : int goRetryPos_Y(int32_t pos, uint32_t Tray, uint32_t option);
---- readyChkRetry_Y Matches (5 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1088 : int readyChkRetry_Y(int encoderCount)
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1208 : 			if(readyChkRetry_Y(encoderCount_Y)) {
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1915 : 			if(readyChkRetry_Y(encoderCount_Y)) {
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2024 : 			if(readyChkRetry_Y(encoderCount_Y)) {
MotorCtrl_task.h (Ch_AS4\inc) line 141 : int readyChkRetry_Y(int encoderCount);
---- goPosVial Matches (6 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1149 : // goPosVial -> goZ(vial detect) -> goSyr(uL,speed) -> goZ(top)
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1173 : 			if(goPosVial(pVial)) {
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3603 : 			if(goPosVial(pVial)) {
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1173 : int goPosVial(const VIAL_POS_t *pVial)
MotorCtrl_task.h (Ch_AS4\inc) line 59 : int goPosVial(const VIAL_POS_t *vial);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1746 : //dfp("<<<aspirateSample --- goPosVial>>>!! == devState.btMotorState[MOTOR_Z]=%x\n",devState.btMotorState[MOTOR_Z]);	
---- initHomePos_Y1 Matches (3 in 3 files) ----
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 710 : 				initHomePos_Y1();
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3565 : int initHomePos_Y1()	// 
MotorCtrl_task.h (Ch_AS4\inc) line 113 : int initHomePos_Y1();// 
---- initHomePos_Y Matches (6 in 3 files) ----
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 712 : 				initHomePos_Y();
LcasAction_task.c (Ch_AS4\apps_layer) line 940 : 					initHomePos_Y();
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 884 : 				initHomePos_Y();
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3442 : int initHomePos_Y()	// 
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3754 : 				initHomePos_Y();
MotorCtrl_task.h (Ch_AS4\inc) line 112 : int initHomePos_Y();// 
---- dfp Matches (351 in 9 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 10 : //#define dfp(fmt,args...) iprintf( "DFP [%s %d]-" fmt, __FUNCTION__,__LINE__, ## args ) 
debug_inform.h (Ch_AS4\ryu_inc) line 11 : #define dfp(fmt,args...) 
debug_inform.h (Ch_AS4\ryu_inc) line 34 : #define dfp(fmt,args...) 
Def_stepCon.h (Ch_AS4\common_inc) line 365 : dfp("======  X  readCount=[%d] [%d]\n", readCount , encoderCount_X); \
Def_stepCon.h (Ch_AS4\common_inc) line 373 : dfp("======  Y  readCount=[%d] [%d]\n", readCount , encoderCount_Y); \
Def_stepCon.h (Ch_AS4\common_inc) line 382 : dfp("======  Z  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 400 : dfp("xxxxxxxxxxxxx======  Syringe  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 409 : dfp("======  Valve  readCount=[%d]\n", readCount ); \
Def_stepCon.h (Ch_AS4\common_inc) line 419 : dfp("======  Injector  readCount=[%d] \n", readCount ); \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 187 : 		dfp("subMenu_w=%d  stateSYR=%x\n",subMenu_w,devState.btMotorState[MOTOR_SYR]);
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 491 :     dfp("subMenu_es=%d\n",subMenu_es);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 563 : 		dfp("subMenu_sma=%d\n",subMenu_sma);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 604 : 		dfp("subMenu_sma=%d\n",subMenu_sma);
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 648 : 		dfp("subMenu_wxch=%d stateSYR=%x\n",subMenu_wxch,devState.btMotorState[MOTOR_SYR]);		
startInjectionFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 768 : dfp("if(devState.auxTime100msCnt[0] == 0) devState.curAuxEventNo = %d\n\r",devState.curAuxEventNo);
startLoadingCommand in LcasAction_task.c (Ch_AS4\apps_layer) line 833 : 	dfp("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
LcasAction_task.c (Ch_AS4\apps_layer) line 911 :   dfp("subMenu_ghcx=%d\n",subMenu_ghcx);
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 989 : dfp("sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 994 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 999 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1004 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1009 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1014 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1021 : dfp("END sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1065 : dfp("sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1070 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1075 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1080 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1085 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1090 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1097 : dfp("END sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);			
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1166 :     dfp("subMenu_as=%d\n",subMenu_as);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1175 : dfp("tray[%d] pos[%d][%d]\n",pVial->uPos.tray,pVial->uPos.x,pVial->uPos.y);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1253 : dfp("<<<aspirateSample --- goZ_Encoder(POS_Z_TOP, ACT_XY_POS)>>>!!\n");															
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1260 : 				dfp("<<<aspirateSample --- error = %d \n",error);																			
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1377 : 		dfp("subMenu_fli=%d  stateSYR=%x\n",subMenu_fli,devState.btMotorState[MOTOR_SYR]);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1498 : dfp("missing %d	\n",devState.missVialResponse);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1509 : dfp("if(runSetup.airSegment ==	YES) %d	\n",devState.missVialResponse);													
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1572 : dfp("missing %d	\n",devState.missVialResponse);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1730 : 		dfp("subMenu_pli=%d\n",subMenu_pli);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1825 : dfp("missing %d	\n",devState.missVialResponse);													
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1892 : dfp("missing %d	\n",devState.missVialResponse);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1913 : dfp(">>>>injectVial=(%d,%d) sample=(%d,%d)\n",LcasState.injectVial.uPos.x,LcasState.injectVial.uPos.y,LcasState.sample.uPos.x,LcasState.sample.uPos.y);													
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1981 : dfp(">>>>>injectVial=(%d,%d) sample=(%d,%d)\n",LcasState.injectVial.uPos.x,LcasState.injectVial.uPos.y,LcasState.sample.uPos.x,LcasState.sample.uPos.y);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2141 : 		dfp("subMenu_mpi=%d\n",subMenu_mpi);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2251 : dfp("missing %d	\n",devState.missVialResponse);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2320 : dfp("missing %d	\n",devState.missVialResponse);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2437 : //dfp("==========sampleVolume=%d  transportVolume=%d injectionVolume=%d\n",sampleVolume,(int)(transportVolume*10),(int)(injectionVolume*10));
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2838 : dfp("===================sysConfig.trayRight = %d\n",sysConfig.trayRight);
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3011 : dfp("RE_OK============\n");			
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3012 : dfp("pVial->uPos (%d,%d)\n",pVial->uPos.x, pVial->uPos.y);
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3016 : dfp("RE_ERR===========\n");			
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3110 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3115 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3120 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3125 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3130 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
mix_ProgramNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3180 : 					dfp("mixSet.mixTable[%d].action = %d\n",devState.mixTableNo,mixSet.mixTable[devState.mixTableNo].action);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3260 : 		dfp("===================================subMenu_map=%d\n",subMenu_map);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3340 : //dfp("===================================aspirateReturn = %d	\n",aspirateReturn);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3349 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3385 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3386 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3399 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3457 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3481 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3482 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3495 : dfp("MISSING_VIAL_STOP %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3550 : 		dfp("subMenu_mmp=%d\n",subMenu_mmp);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3659 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3699 : dfp("missing %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3778 : dfp("repeat\n");
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3896 : dfp("AUX_SIG_OUT_CONTACT_CLOSE\n\r");				
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3900 : dfp("AUX_SIG_OUT_CONTACT_OPEN\n\r");								
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3912 : dfp("AUX_CONTACT_OPEN devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3919 : dfp("AUX_CONTACT_CLOSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);					
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3925 : dfp("AUX_TOGGLE---AUX_CONTACT_OPEN devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);																
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3930 : dfp("AUX_TOGGLE---AUX_SIG_OUT_CONTACT_CLOSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);																						
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3937 : dfp("AUX_PULSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3943 : dfp("devState.curAuxEventNo = %d\n\r",devState.curAuxEventNo);																								
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3949 : dfp("time_Event end \n\r");
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4069 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4119 : dfp("====== end function : initialize\n");
actionReady in LcasAction_task.c (Ch_AS4\apps_layer) line 4130 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 4155 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 4233 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
LcasAction_task.c (Ch_AS4\apps_layer) line 4359 : dfp("if(devState.doNextSample == YES) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");						
LcasAction_task.c (Ch_AS4\apps_layer) line 4361 : dfp("if(devState.vialExist == NO) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");													
LcasAction_task.c (Ch_AS4\apps_layer) line 4373 : //dfp("<<<analysisTime= %d %d	isNextInjection == YES %d >>>!!\n",devState.analysisTime100msCnt,devState.analysisTime100ms,devState.isNextInjection);
LcasAction_task.c (Ch_AS4\apps_layer) line 4385 : dfp("if(devState.isNextInjection == YES) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");								
LcasAction_task.c (Ch_AS4\apps_layer) line 4399 : dfp("devState.vialExist	=	NO \n");
LcasAction_task.c (Ch_AS4\apps_layer) line 4407 : dfp("if(devState.isNextInjection	== YES)<<<analysisTime= %d %d	isNextInjection == YES %d >>>!!\n",devState.analysisTime100msCnt,devState.analysisTime100ms,devState.isNextInjection);
LcasAction_task.c (Ch_AS4\apps_layer) line 4426 : dfp("<<<SELF_END_SEQUENCE>>>	devState.vialExist = %d\n",devState.vialExist);		
actionFault in LcasAction_task.c (Ch_AS4\apps_layer) line 4440 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionStandby in LcasAction_task.c (Ch_AS4\apps_layer) line 4452 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagnostics in LcasAction_task.c (Ch_AS4\apps_layer) line 4464 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagHeaterCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 4501 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagCoolerCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 4619 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagTempsenCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 4716 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 4801 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 4859 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 4906 : dfp("<<<AS_SERVICE_WASH_END>>>	\n");
actionStopFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 4918 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
convert_SystemConfig_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5484 : dfp("sysConfig.trayLeft= [%d] sysConfig.trayRight= [%d]\n",sysConfig.trayLeft, sysConfig.trayRight);
convert_SystemConfig_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5485 : //dfp("initSystemConfig sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
initSystemConfig_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5536 : dfp("initSystemConfig ======== not Save Data --- Init=================== %d\n");
usedTimeCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6032 : dfp("\n");				
CheckPowerBtn in LcasAction_task.c (Ch_AS4\apps_layer) line 6230 : //dfp("signalIn = 0x%08x\n",signalIn);
LcasAction_task.c (Ch_AS4\apps_layer) line 6289 : dfp("SELF_ERROR_DOOR_OPEN\n");
LcasAction_task.c (Ch_AS4\apps_layer) line 6316 : dfp("SELF_ERROR_LEAK\n");
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6379 : dfp("SELF_ERROR_DOOR_OPEN\n");
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6404 : dfp("SELF_ERROR_LEAK\n");
testMain in main.c (Ch_AS4) line 620 : 	//dfp("s1[%08X] s2[%08X] m3[%08X]\n",samState.btMotorState[MOTOR_SAM1], samState.btMotorState[MOTOR_SAM2], samState.btMotorState[MOTOR_M3]);						
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 458 : dfp("Error...... MOVE_ERR_BOTH\n");
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 461 : dfp("Error...... MOVE_ERR_VIALCHK\n");
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 464 : dfp("Error...... MOVE_ERR_NDLCHK\n");							
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 467 : dfp("OK...... MOVE_CMD_OK\n");												
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 555 : dfp("Error...... MOVE_ERR_BOTH %x\n",stateZ);
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 558 : dfp("Error...... MOVE_ERR_VIALCHK %x\n",stateZ);				
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 561 : dfp("Error...... MOVE_ERR_NDLCHK %x\n",stateZ);					
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 588 : 				dfp("AccelStep = %d\n",AccelStep);
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 594 : 				dfp("DeaccStep = %d\n",DeaccStep);				
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 597 : //dfp("[%d] tot=%d Acc=%d deacc=%d min=%d max=%d\n",who,totalStep,AccelStep,DeaccStep, minSpeed, maxSpeed);		
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 613 : //dfp("who[%d] ctrlCmd[0x%x]\n",who,ctrlCmd);				
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 679 : 	dfp("Error...... MOVE_ERR_BOTH\n");
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 683 : 	dfp("Error...... MOVE_ERR_BOTH__VIAL_CHECK\n");								
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 687 : 	dfp("Error...... MOVE_ERR_BOTH__Z_AXIS_CHECK\n");								
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 714 : 				dfp("AccelStep = %d\n",AccelStep);
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 720 : 				dfp("DeaccStep = %d\n",DeaccStep);				
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 726 : dfp("[%d] totalStep=%d  minSpeed=%d AccelStep=%d DeaccStep=%d ctrlCmd=0x%x\n",who,totalStep, minSpeed, AccelStep, DeaccStep, ctrlCmd);
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 744 : //dfp("who[%d] ctrlCmd[0x%x]\n",who,ctrlCmd);				
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 816 :     dfp("subMenu_grpx=%d\n",subMenu_grpx);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 876 :     dfp("subMenu_grpy=%d\n",subMenu_grpy);
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 939 :     dfp("subMenu_grpz=%d\n",subMenu_grpz);
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 993 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1015 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1037 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1057 :     dfp("subMenu_rcrx=%d\n",subMenu_rcrx);
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1075 : dfp("encoderCount =%d\n",encoderCount);
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1094 :     dfp("subMenu_rcry=%d\n",subMenu_rcry);
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1112 : dfp("encoderCount =%d\n",encoderCount);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1131 :     dfp("subMenu_rcrz=%d\n",subMenu_rcrz);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1154 : dfp("=============================================Count Z=%d\n",encoderCount);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1159 : dfp("encoderCount =%d\n",encoderCount);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1182 :     dfp("subMenu_gpv=%d\n",subMenu_gpv);
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1237 : //dfp("curStep=%d\n",(int)devState.curStep[MOTOR_X]);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1398 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_X]);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1470 : //dfp("curStep=%d\n",(int)devState.curStep[MOTOR_Y]);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1616 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_Y]);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1775 :     dfp("subMenu_gpvz=%d\n",subMenu_gpvz);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1857 : 	    dfp("subMenu_gpez=%d\n",subMenu_gpez);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1957 : 	    dfp("subMenu_gpezc=%d\n",subMenu_gpezc);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2517 : 	    dfp("subMenu_ihpv=%d\n",subMenu_ihpv);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2657 : 	    dfp("subMenu_ihpi=%d\n",subMenu_ihpi);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2801 : 	    dfp("subMenu_ihps=%d\n",subMenu_ihps);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2919 :     dfp("subMenu_ihpz=%d\n",subMenu_ihpz);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3057 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3069 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3108 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3127 : //dfp("stepCount_6=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3147 : //dfp("stepCount_9=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3175 : //dfp("stepCount_12=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3202 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3326 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3338 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3378 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3397 : //dfp("stepCount_6=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3416 : //dfp("stepCount_9=%d\n",stepCount);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3448 :     dfp("subMenu_ihpy=%d\n",subMenu_ihpy);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3571 :     dfp("subMenu_ihpy=%d\n",subMenu_ihpy);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3674 :     dfp("subMenu_ihpa=%d\n",subMenu_ihpa);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3786 : dfp("====== end function! \n");
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3848 :     dfp("subMenu_ami=%d\n",subMenu_ami);
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4045 : 	    dfp("subMenu_ane=%d\n",subMenu_ane);
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4103 :     dfp("subMenu_ase=%d\n",subMenu_ase);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4836 : dfp("devState.command == COMMAND_ABORT\n");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4870 : 		dfp("MOTOR_Z : DIR CHECK ERROR!!!\n");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4876 : 		dfp("MOTOR_X : DIR CHECK ERROR!!!\n");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4881 : 		dfp("MOTOR_Y : DIR CHECK ERROR!!!\n");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4886 : 		dfp("MOTOR_SYR : DIR CHECK ERROR!!!\n");
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 170 : dfp("check--ERROR--PACKCODE_LCAS_SYSTEM_INFORM (%s)\n",tmp.cModel);
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 175 : dfp("check--EQUAL--PACKCODE_LCAS_SYSTEM_INFORM (%s)\n",tmp.cModel);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 229 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 230 : dfp("tmp.cSerialNo = %s \n",tmp.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 234 : dfp("sysInform.cInstallDate.year = %d month = %d date = %d\n",sysInform.cInstallDate.year,sysInform.cInstallDate.month,sysInform.cInstallDate.date);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 246 : dfp("as_INFO.cSerialNo = %s \n",as_INFO.cSerialNO);
net_SystemConfig in net_AS.c (Ch_AS4\apps_layer) line 536 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 648 : 	dfp("Cal Temp Load !!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 652 : 	dfp("Cal Temp Load Error!!!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 674 : 	dfp("GfTempConstA = %d GfTempConstB = %d GfTempConstC = %d\n", (int)(GfTempConstA*100), (int)(GfTempConstB*100), (int)(GfTempConstC*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 675 : 	dfp("tempCalData.setTemp1 = %d setTemp2 = %d meaTemp1 = %d meaTemp2 = %d\n", (int)(tempCalData.setTemp1*100), (int)(tempCalData.setTemp2*100), (int)(tempCalData.meaTemp1*100),(int)(tempCalData.meaTemp2*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 763 : dfp("Cal Temp Load !!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 767 : dfp("Cal Temp Load Error!!!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 788 : dfp("GfTempConstA = %d GfTempConstB = %d GfTempConstC = %d\n", (int)(GfTempConstA*100), (int)(GfTempConstB*100), (int)(GfTempConstC*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 789 : dfp("tempCalData.setTemp1 = %d setTemp2 = %d meaTemp1 = %d meaTemp2 = %d\n", (int)(tempCalData.setTemp1*100), (int)(tempCalData.setTemp2*100), (int)(tempCalData.meaTemp1*100),(int)(tempCalData.meaTemp2*100));
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1062 : dfp("tmp.useAuxTimeEvent = %d 	tmp.initAux = %d tmp.auxOutSigTim = %d\n",tmp.useAuxTimeEvent, tmp.initAux,tmp.auxOutSigTime);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1063 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1106 : //dfp("============Time Event :  devState.auxTime100msCnt[%d]=%d\n\r",i,devState.auxTime100msCnt[i]);		
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1108 : dfp("============Time Event :  devState.auxTime100msCnt[%d]=%d\n\r",0,devState.auxTime100msCnt[0]);		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1137 : dfp("ERROR1 : Mix Setup\n");		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1138 : dfp("firstDestPos.uPos rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeDestination,tmp.firstDestPos.uPos.tray,tmp.firstDestPos.uPos.etc, tmp.firstDestPos.uPos.x, tmp.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1139 : dfp("reagentPosA.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentA,tmp.reagentPosA.uPos.tray,tmp.reagentPosA.uPos.etc, tmp.reagentPosA.uPos.x, tmp.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1140 : dfp("reagentPosB.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentB,tmp.reagentPosB.uPos.tray,tmp.reagentPosB.uPos.etc, tmp.reagentPosB.uPos.x, tmp.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1141 : dfp("reagentPosC.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentC,tmp.reagentPosC.uPos.tray,tmp.reagentPosC.uPos.etc, tmp.reagentPosC.uPos.x, tmp.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1142 : dfp("reagentPosD.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentD,tmp.reagentPosD.uPos.tray,tmp.reagentPosD.uPos.etc, tmp.reagentPosD.uPos.x, tmp.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1151 : dfp(" Receive Mix Error \n");		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1160 : dfp(" Receive Mix Error \n");				
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1169 : dfp(" Receive Mix Error \n");				
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1178 : dfp(" Receive Mix Error \n");					
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1190 : 	dfp("ERROR : Mix Setup = %d %d \n",tmp.firstDestPos.uPos.tray,tmp.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1191 : dfp("firstDestPos.uPos rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeDestination,tmp.firstDestPos.uPos.tray,tmp.firstDestPos.uPos.etc, tmp.firstDestPos.uPos.x, tmp.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1192 : dfp("reagentPosA.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentA,tmp.reagentPosA.uPos.tray,tmp.reagentPosA.uPos.etc, tmp.reagentPosA.uPos.x, tmp.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1193 : dfp("reagentPosB.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentB,tmp.reagentPosB.uPos.tray,tmp.reagentPosB.uPos.etc, tmp.reagentPosB.uPos.x, tmp.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1194 : dfp("reagentPosC.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentC,tmp.reagentPosC.uPos.tray,tmp.reagentPosC.uPos.etc, tmp.reagentPosC.uPos.x, tmp.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1195 : dfp("reagentPosD.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentD,tmp.reagentPosD.uPos.tray,tmp.reagentPosD.uPos.etc, tmp.reagentPosD.uPos.x, tmp.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1199 : 	dfp(" Mix Setup = %d %d \n",tmp.firstDestPos.uPos.tray,tmp.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1250 : dfp("firstDestVial.pos (%x)\n",mixSet.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1251 : dfp("reagentVialA.pos (%x)\n",mixSet.reagentPosA.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1252 : dfp("reagentVialB.pos (%x)\n",mixSet.reagentPosB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1253 : dfp("reagentVialC.pos (%x)\n",mixSet.reagentPosC.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1254 : dfp("reagentVialD.pos (%x)\n",mixSet.reagentPosD.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1255 : dfp("firstDestVial.uPos (%d,%d)\n",mixSet.firstDestPos.uPos.x, mixSet.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1256 : dfp("reagentVialA.uPos (%d,%d)\n",mixSet.reagentPosA.uPos.x, mixSet.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1257 : dfp("reagentVialB.uPos (%d,%d)\n",mixSet.reagentPosB.uPos.x, mixSet.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1258 : dfp("reagentVialC.uPos (%d,%d)\n",mixSet.reagentPosC.uPos.x, mixSet.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1259 : dfp("reagentVialD.uPos (%d,%d)\n",mixSet.reagentPosD.uPos.x, mixSet.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1264 : dfp("sequence.firstSamplePos (%d,%d)\n",sequence.firstSamplePos.uPos.x, sequence.firstSamplePos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1265 : dfp("firstSamplePosCnt =%d\n",firstSamplePosCnt);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1323 : dfp("cnt = %d  devState.reagentVialB.pos = %d\n",cnt,devState.reagentVialB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1344 : dfp("==============firstDestVial.pos (%x)\n",devState.firstDestVial.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1345 : dfp("reagentVialA.pos (%x)\n",devState.reagentVialA.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1346 : dfp("reagentVialB.pos (%x)\n",devState.reagentVialB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1347 : dfp("reagentVialC.pos (%x)\n",devState.reagentVialC.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1348 : dfp("reagentVialD.pos (%x)\n",devState.reagentVialD.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1349 : dfp("firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1350 : dfp("reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1351 : dfp("reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1352 : dfp("reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1353 : dfp("reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1445 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1457 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1458 : dfp("tmp.firstSamplePos.pos = %x\n", tmp.firstSamplePos.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1459 : dfp("tmp.lastSamplePos.pos = %x\n", tmp.lastSamplePos.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1461 : dfp("tmp.firstSamplePos.uPos (%d,%d)\n",tmp.firstSamplePos.uPos.x, tmp.firstSamplePos.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1462 : dfp("tmp.lastSamplePos.uPos (%d,%d)\n",tmp.lastSamplePos.uPos.x, tmp.lastSamplePos.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1464 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1471 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1473 : dfp("--PACKCODE_LCAS_SEQUENCE - net_Sequence\n");					
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1540 : dfp("==============firstDestVial.pos (%x)\n",devState.firstDestVial.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1541 : dfp("reagentVialA.pos (%x)\n",devState.reagentVialA.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1542 : dfp("reagentVialB.pos (%x)\n",devState.reagentVialB.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1543 : dfp("reagentVialC.pos (%x)\n",devState.reagentVialC.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1544 : dfp("reagentVialD.pos (%x)\n",devState.reagentVialD.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1545 : dfp("firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1546 : dfp("reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1547 : dfp("reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1548 : dfp("reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1549 : dfp("reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3130 : 				if(IS_REQUEST_PACKET(pData)) {			dfp("XXXXXXXXIS_REQUEST_PACKET--PACKCODE_LCAS_SYSTEM_INFORM\n");				
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3133 : 				else if(IS_ACK_PACKET(pData)){	dfp("ack--PACKCODE_LCAS_SYSTEM_INFORM\n");				}
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3134 : 				else {	dfp("rcv--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3154 : dfp("snd--PACKCODE_LCAS_SYSTEM_INFORM sysInform.cVersion = %s\n",sysInform.cVersion);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3157 : dfp("ack--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3160 : //dfp("rcv--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3172 : dfp("snd--PACKCODE_LCAS_ETHERNET_CONFIG ethernetConfig.cGateway = %s\n",ethernetConfig.cGateway);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3175 : dfp("ack--PACKCODE_LCAS_ETHERNET_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3178 : //dfp("rcv--PACKCODE_LCAS_ETHERNET_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3190 : dfp("snd--PACKCODE_LCAS_SYSTEM_CONFIG sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3193 : dfp("ack--PACKCODE_LCAS_SYSTEM_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3197 : //dfp("rcv--PACKCODE_LCAS_SYSTEM_CONFIG sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3209 : dfp("snd--PACKCODE_LCAS_RUN_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3212 : dfp("ack--PACKCODE_LCAS_RUN_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3219 : dfp("snd--PACKCODE_LCAS_TIME_EVENT\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3222 : dfp("ack--PACKCODE_LCAS_TIME_EVENT\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3229 : dfp("snd--PACKCODE_LCAS_MIX_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3232 : dfp("ack--PACKCODE_LCAS_MIX_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3241 : dfp("snd--PACKCODE_LCAS_SEQUENCE\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3244 : dfp("snd--PACKCODE_LCAS_SEQUENCE\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3288 : dfp("========================missing %d	\n",devState.missVialResponse);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3306 : dfp("========================missing %d	\n",devState.missVialResponse);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3584 : dfp("PACKCODE_LCAS_SETUP request -- \n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3588 : dfp("PACKCODE_LCAS_SETUP  packet \n");
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3624 : dfp("net_ServiceDiagnostics service.subCommand = %d \n",service.subCommand1);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3759 : dfp("Cal Temp - Measure temp 1 Receive!!!\n");
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3775 : dfp("Cal Temp - Measure temp 2 Receive!!!\n");
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3789 : dfp("Cal Temp - TEMP_CAL_SAVE  !!\n");
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3937 : 	dfp("heat=%d %d",usedTime.heatTime,tmp.heatTime);
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3938 : 	dfp("ff=%d %d",ff,tmp.heatTime);
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3939 : 	dfp("iff=0x%x iff=%d %d",iff,tmp.time);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4029 : dfp("led=%d door=%d leak=%d buz=%d = NO\n",special.LED_onoff,special.Door_check,special.Leak_check,special.Buzzer_onoff);
rtcTime_Init in sysconfig.c (Ch_AS4\apps_layer) line 418 : dfp("rtcWrite_time\n");	
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 479 : dfp("rand = %x %x time=%d\n",r[i], my_mac[i], time);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 595 : dfp("rand = %x %x time=%d\n",r[i], my_mac[i], time);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 601 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 648 : dfp("[default MAC] my_mac[0]=[0x%x] [0x%x] [0x%x] [0x%x] [0x%x] [0x%x] \n\r",
loadEthernetConfig in sysconfig.c (Ch_AS4\apps_layer) line 743 : 	dfp("load === my_ip[0]=[0x%x] [0x%x] [0x%x] [0x%x] \n\r",
tcp_server_accept in tcp_server.c (Ch_AS4\apps_layer) line 202 : dfp("Client is connected \r\n");
machineTest_Function_Set in testPrgm.c (Ch_AS4\apps_layer) line 130 : 	dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 275 : 		dfp("Core_gpioInputn = 0x%08x\n",Core_gpioInput);	
testPrgm.c (Ch_AS4\apps_layer) line 290 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 296 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 302 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 308 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 322 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 328 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 334 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 340 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 353 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 359 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 365 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 371 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
machineTest_Mode_X in testPrgm.c (Ch_AS4\apps_layer) line 401 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_X in testPrgm.c (Ch_AS4\apps_layer) line 446 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_Y in testPrgm.c (Ch_AS4\apps_layer) line 461 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_Y in testPrgm.c (Ch_AS4\apps_layer) line 506 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_Z in testPrgm.c (Ch_AS4\apps_layer) line 521 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_Z in testPrgm.c (Ch_AS4\apps_layer) line 566 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_SYR in testPrgm.c (Ch_AS4\apps_layer) line 581 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_SYR in testPrgm.c (Ch_AS4\apps_layer) line 626 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_VAL in testPrgm.c (Ch_AS4\apps_layer) line 641 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_VAL in testPrgm.c (Ch_AS4\apps_layer) line 686 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_INJ in testPrgm.c (Ch_AS4\apps_layer) line 701 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_INJ in testPrgm.c (Ch_AS4\apps_layer) line 746 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 766 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,func);
machineTest_Mode_X_Y_Z in testPrgm.c (Ch_AS4\apps_layer) line 869 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
machineTest_Mode_X_Y_Z in testPrgm.c (Ch_AS4\apps_layer) line 880 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,acting);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1180 :     dfp("M_TEST_XYZ_Z_UP_LONG=%d\n",M_TEST_XYZ_Z_UP_LONG);		      
machineTest_Mode_VAL_SYR in testPrgm.c (Ch_AS4\apps_layer) line 1306 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
machineTest_Mode_VAL_SYR in testPrgm.c (Ch_AS4\apps_layer) line 1317 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,acting);
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1463 : 						dfp("goVal - POS_VAL_NEEDLE %d \n",func);										
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1509 : 		dfp("goVal - POS_VAL_WASHING %d \n",func);						
machineTest_Mode_VAL_Home in testPrgm.c (Ch_AS4\apps_layer) line 1662 :     dfp("subMenu_mtvh=%d\n",subMenu_mtvh);
machineTest_Mode_SYR_Home in testPrgm.c (Ch_AS4\apps_layer) line 1697 :     dfp("subMenu_mtsh=%d\n",subMenu_mtsh);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1732 :     dfp("subMenu_mtvsc=%d\n",subMenu_mtvsc);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1746 : //dfp("<<<aspirateSample --- goPosVial>>>!! == devState.btMotorState[MOTOR_Z]=%x\n",devState.btMotorState[MOTOR_Z]);	
machineTest_Mode_BOARD_ALL in testPrgm.c (Ch_AS4\apps_layer) line 1816 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_BOARD_ALL in testPrgm.c (Ch_AS4\apps_layer) line 1861 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 1883 : 		dfp("Core_gpioInputn = 0x%08x\n",Core_gpioInput);	
testPrgm.c (Ch_AS4\apps_layer) line 1889 : dfp("machineTest_Mode = 0x%08\n",Mode);	
testPrgm.c (Ch_AS4\apps_layer) line 1928 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1934 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1940 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1946 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1960 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1966 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1972 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1978 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1991 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1997 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 2003 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 2009 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
---- goPosETC_Z_check Matches (6 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 66 : // goPosETC_Z_check() 수정 - error_16
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1947 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos)
MotorCtrl_task.h (Ch_AS4\inc) line 30 : #define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 31 : #define goPosWastePort()		goPosETC_Z_check(POS_XY_WASTE, POS_Z_WASTE, POS_Z_WASTE_DETECT, POS_Z_WASTE_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 35 : #define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 90 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos);
---- goPosVial_Z Matches (7 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1765 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos)//, uint32_t z_option)
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3906 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3907 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3918 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3919 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3951 : 						if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
MotorCtrl_task.h (Ch_AS4\inc) line 88 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos);//, uint32_t z_option)
---- goPosVial Matches (6 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1149 : // goPosVial -> goZ(vial detect) -> goSyr(uL,speed) -> goZ(top)
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1173 : 			if(goPosVial(pVial)) {
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3603 : 			if(goPosVial(pVial)) {
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1174 : int goPosVial(const VIAL_POS_t *pVial)
MotorCtrl_task.h (Ch_AS4\inc) line 59 : int goPosVial(const VIAL_POS_t *vial);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1746 : //dfp("<<<aspirateSample --- goPosVial>>>!! == devState.btMotorState[MOTOR_Z]=%x\n",devState.btMotorState[MOTOR_Z]);	
---- goY_Encoder Matches (14 in 2 files) ----
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 897 : 			encoderCount = goY_Encoder(&Vial, option);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 900 : 			encoderCount = goY_Encoder(pos, Tray, option);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1191 : 			encoderCount_Y = goY_Encoder(pVial, ACT_XY_POS);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1193 : 			encoderCount_Y = goY_Encoder(pVial->uPos.y, pVial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1526 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option) 
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1622 : int goY_Encoder(int32_t pos, uint32_t Tray, uint32_t option)
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1829 : 				encoderCount_Y = goY_Encoder(pVial, ACT_XY_POS);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1831 : 				encoderCount_Y = goY_Encoder(pVial->uPos.y, pVial->uPos.tray, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1919 : 			encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1921 : 			encoderCount_Y = goY_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2011 : 					encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2013 : 					encoderCount_Y = goY_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 71 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 74 : int goY_Encoder(int32_t pos, uint32_t Tray, uint32_t option);
---- goRetryPos_Y Matches (3 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 868 : int goRetryPos_Y(int32_t pos, uint32_t Tray, uint32_t option)
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1114 : 			if(goRetryPos_Y(devState.mActSet[MOTOR_Y].pos, devState.mActSet[MOTOR_Y].Tray, devState.mActSet[MOTOR_Y].option)) {
MotorCtrl_task.h (Ch_AS4\inc) line 146 : int goRetryPos_Y(int32_t pos, uint32_t Tray, uint32_t option);
---- goRetryPos_X Matches (3 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 808 : int goRetryPos_X(int32_t pos, uint32_t Tray, uint32_t option)
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1079 : 			if(goRetryPos_X(devState.mActSet[MOTOR_X].pos, devState.mActSet[MOTOR_X].Tray, devState.mActSet[MOTOR_X].option)) {
MotorCtrl_task.h (Ch_AS4\inc) line 145 : int goRetryPos_X(int32_t pos, uint32_t Tray, uint32_t option);
---- mActSet Matches (45 in 2 files) ----
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 359 : 	MOTOR_ACT_SET_t mActSet[STEP_MOTOR_COUNT];			// 모터동작 설정저장 - (Encoder)실패시 사용
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 831 : 			devState.mActSet[MOTOR_X].act++ ;
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 850 : 					if(devState.mActSet[MOTOR_X].act > GO_POS_RETRY_COUNT) { 
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 892 : 			devState.mActSet[MOTOR_Y].act++ ;
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 912 : 					if(devState.mActSet[MOTOR_Y].act > GO_POS_RETRY_COUNT) { 
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 957 : 			devState.mActSet[MOTOR_Z].act++ ;
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 967 : 					if(devState.mActSet[MOTOR_Z].act > GO_POS_RETRY_COUNT) { 
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1067 : 				devState.mActSet[MOTOR_X].act = 0;
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1079 : 			if(goRetryPos_X(devState.mActSet[MOTOR_X].pos, devState.mActSet[MOTOR_X].Tray, devState.mActSet[MOTOR_X].option)) {
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1104 : 				devState.mActSet[MOTOR_Y].act = 0;
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1116 : 			if(goRetryPos_Y(devState.mActSet[MOTOR_Y].pos, devState.mActSet[MOTOR_Y].Tray, devState.mActSet[MOTOR_Y].option)) {
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1141 : 				devState.mActSet[MOTOR_Z].act = 0;
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1144 : 					if(devState.mActSet[MOTOR_Z].pos == POS_Z_TOP && devState.mActSet[MOTOR_Z].option == ACT_Z_POS) {
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1163 : 			if(goRetryPos_Z(devState.mActSet[MOTOR_Z].pos, devState.mActSet[MOTOR_Z].Tray, devState.mActSet[MOTOR_Z].option)) {
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1305 : //	devState.mActSet[MOTOR_X].pos = pVial->uPos.x; //pos;	// vial 좌표 a~e (a1 .. e12)
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1306 : 	devState.mActSet[MOTOR_X].Tray = pVial->uPos.tray; //Tray;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1307 : 	devState.mActSet[MOTOR_X].option = option;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1322 : 					devState.mActSet[MOTOR_X].pos = pVial->uPos.x; //pos;	// vial 좌표 a~e (a1 .. e12)
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1330 : 					devState.mActSet[MOTOR_X].pos = pVial->uPos.x; //pos;	// vial 좌표 a~e (a1 .. e12)
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1338 : 					devState.mActSet[MOTOR_X].pos = pVial->uPos.etc;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1348 : 			devState.mActSet[MOTOR_X].pos = pVial->uPos.etc;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1356 : 			devState.mActSet[MOTOR_X].pos = pVial->uPos.etc;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1404 : 	devState.mActSet[MOTOR_X].pos = pos;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1405 : 	devState.mActSet[MOTOR_X].Tray = Tray;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1406 : 	devState.mActSet[MOTOR_X].option = option;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1541 : 	devState.mActSet[MOTOR_Y].Tray = pVial->uPos.tray; //Tray;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1542 : 	devState.mActSet[MOTOR_Y].option = option;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1543 : //	devState.mActSet[MOTOR_Y].pos = pVial->uPos.y; //pos;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1553 : 					devState.mActSet[MOTOR_Y].pos = pVial->uPos.y; //pos;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1561 : 					devState.mActSet[MOTOR_Y].pos = pVial->uPos.y; //pos;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1569 : 					devState.mActSet[MOTOR_Y].pos = pVial->uPos.etc; //pos;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1578 : 			devState.mActSet[MOTOR_Y].pos = pVial->uPos.etc; //pos;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1585 : 			devState.mActSet[MOTOR_Y].pos = pVial->uPos.etc; //pos;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1633 : 	devState.mActSet[MOTOR_Y].pos = pos;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1634 : 	devState.mActSet[MOTOR_Y].Tray = Tray;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1635 : 	devState.mActSet[MOTOR_Y].option = option;
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1741 : 	devState.mActSet[MOTOR_Z].pos = pos;
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1742 : 	devState.mActSet[MOTOR_Z].option = option;
---- goX_Encoder Matches (14 in 2 files) ----
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 838 : 			encoderCount = goX_Encoder(&Vial, option);
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 840 : 			encoderCount = goX_Encoder(pos, Tray, option);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1204 : 			encoderCount_X = goX_Encoder(pVial, ACT_XY_POS);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1206 : 			encoderCount_X = goX_Encoder(pVial->uPos.x, pVial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1289 : int goX_Encoder(const VIAL_POS_t *pVial, uint32_t option)
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1396 : int goX_Encoder(int32_t pos, uint32_t Tray, uint32_t option)
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1826 : 				encoderCount_X = goX_Encoder(pVial, ACT_XY_POS);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1828 : 				encoderCount_X = goX_Encoder(pVial->uPos.x, pVial->uPos.tray, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1912 : 			encoderCount_X = goX_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1914 : 			encoderCount_X = goX_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2008 : 					encoderCount_X = goX_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2010 : 					encoderCount_X = goX_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 63 : int goX_Encoder(const VIAL_POS_t *pVial, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 66 : int goX_Encoder(int32_t pos, uint32_t Tray, uint32_t option);
---- goPosETC Matches (3 in 3 files) ----
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3302 : //								goPosETC(POS_XY_WASTE);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 798 : int goPosETC(unsigned char pos)
MotorCtrl_task.h (Ch_AS4\inc) line 58 : int goPosETC(unsigned char pos);
---- goPosETC_Z Matches (14 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 918 : //			if(goPosETC_Z(POS_XY_HOME,POS_Z_TOP))	{	++subMenu_ghcx; }
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1868 : int goPosETC_Z(int32_t xy_pos, int32_t z_pos)//, uint32_t z_option)
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3883 : 					if(goPosETC_Z(POS_XY_INJECTOR, POS_Z_INJECTOR_TOP_ADJUST)) {	// 맨처음 제품					
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3888 : //					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_INJECTOR_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3889 : 					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_NEEDLE_DEPTH_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3894 : 					if(goPosETC_Z(POS_XY_WASTE, POS_Z_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3911 : 					if(goPosETC_Z(POS_XY_WASH, POS_Z_WASH_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3916 : 					if(goPosETC_Z(POS_XY_WASTE, POS_Z_WASH_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3945 : //					if(goPosETC_Z(POS_XY_INJECTOR, POS_Z_VIAL_HEIGHT_ADJUST)) {					
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3946 : 					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_VIAL_HEIGHT_ADJUST)) {					
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3998 : 			if(goPosETC_Z(POS_XY_WASTE, POS_Z_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4015 : 			if(goPosETC_Z(POS_XY_WASTE, POS_Z_TOP)) {
MotorCtrl_task.h (Ch_AS4\inc) line 37 : #define goPosHome()				goPosETC_Z(POS_XY_HOME,POS_Z_TOP)
MotorCtrl_task.h (Ch_AS4\inc) line 89 : int goPosETC_Z(int32_t xy_pos, int32_t z_pos);//, uint32_t z_option)
---- goPosETC_Z Matches (14 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 918 : //			if(goPosETC_Z(POS_XY_HOME,POS_Z_TOP))	{	++subMenu_ghcx; }
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1868 : int goPosETC_Z(int32_t xy_pos, int32_t z_pos)//, uint32_t z_option)
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3883 : 					if(goPosETC_Z(POS_XY_INJECTOR, POS_Z_INJECTOR_TOP_ADJUST)) {	// 맨처음 제품					
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3888 : //					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_INJECTOR_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3889 : 					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_NEEDLE_DEPTH_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3894 : 					if(goPosETC_Z(POS_XY_WASTE, POS_Z_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3911 : 					if(goPosETC_Z(POS_XY_WASH, POS_Z_WASH_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3916 : 					if(goPosETC_Z(POS_XY_WASTE, POS_Z_WASH_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3945 : //					if(goPosETC_Z(POS_XY_INJECTOR, POS_Z_VIAL_HEIGHT_ADJUST)) {					
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3946 : 					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_VIAL_HEIGHT_ADJUST)) {					
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3998 : 			if(goPosETC_Z(POS_XY_WASTE, POS_Z_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4015 : 			if(goPosETC_Z(POS_XY_WASTE, POS_Z_TOP)) {
MotorCtrl_task.h (Ch_AS4\inc) line 37 : #define goPosHome()				goPosETC_Z(POS_XY_HOME,POS_Z_TOP)
MotorCtrl_task.h (Ch_AS4\inc) line 89 : int goPosETC_Z(int32_t xy_pos, int32_t z_pos);//, uint32_t z_option)
---- goPosVial_Z Matches (7 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1786 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos)//, uint32_t z_option)
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3927 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3928 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3939 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3940 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3972 : 						if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
MotorCtrl_task.h (Ch_AS4\inc) line 88 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos);//, uint32_t z_option)
---- goPosVial Matches (6 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1149 : // goPosVial -> goZ(vial detect) -> goSyr(uL,speed) -> goZ(top)
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1173 : 			if(goPosVial(pVial)) {
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3603 : 			if(goPosVial(pVial)) {
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1176 : int goPosVial(const VIAL_POS_t *pVial)
MotorCtrl_task.h (Ch_AS4\inc) line 59 : int goPosVial(const VIAL_POS_t *vial);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1746 : //dfp("<<<aspirateSample --- goPosVial>>>!! == devState.btMotorState[MOTOR_Z]=%x\n",devState.btMotorState[MOTOR_Z]);	
---- goY_Encoder Matches (14 in 2 files) ----
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 899 : 			encoderCount = goY_Encoder(&Vial, option);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 902 : 			encoderCount = goY_Encoder(pos, Tray, option);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1193 : 			encoderCount_Y = goY_Encoder(pVial, ACT_XY_POS);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1195 : 			encoderCount_Y = goY_Encoder(pVial->uPos.y, pVial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1528 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option) 
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1624 : int goY_Encoder(int32_t pos, uint32_t Tray, uint32_t option)
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1831 : 				encoderCount_Y = goY_Encoder(pVial, ACT_XY_POS);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1833 : 				encoderCount_Y = goY_Encoder(pVial->uPos.y, pVial->uPos.tray, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1921 : 			encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1923 : 			encoderCount_Y = goY_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2013 : 					encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2015 : 					encoderCount_Y = goY_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 71 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 74 : int goY_Encoder(int32_t pos, uint32_t Tray, uint32_t option);
---- goRetryPos_Y Matches (3 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 869 : int goRetryPos_Y(int32_t pos, uint32_t Tray, uint32_t option)
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1116 : 			if(goRetryPos_Y(devState.mActSet[MOTOR_Y].pos, devState.mActSet[MOTOR_Y].Tray, devState.mActSet[MOTOR_Y].option)) {
MotorCtrl_task.h (Ch_AS4\inc) line 146 : int goRetryPos_Y(int32_t pos, uint32_t Tray, uint32_t option);
---- goY_Encoder Matches (14 in 2 files) ----
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 899 : 			encoderCount = goY_Encoder(&Vial, option);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 902 : 			encoderCount = goY_Encoder(pos, Tray, option);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1193 : 			encoderCount_Y = goY_Encoder(pVial, ACT_XY_POS);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1195 : 			encoderCount_Y = goY_Encoder(pVial->uPos.y, pVial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1528 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option) 
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1624 : int goY_Encoder(int32_t pos, uint32_t Tray, uint32_t option)
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1831 : 				encoderCount_Y = goY_Encoder(pVial, ACT_XY_POS);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1833 : 				encoderCount_Y = goY_Encoder(pVial->uPos.y, pVial->uPos.tray, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1921 : 			encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1923 : 			encoderCount_Y = goY_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2013 : 					encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2015 : 					encoderCount_Y = goY_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 71 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 74 : int goY_Encoder(int32_t pos, uint32_t Tray, uint32_t option);
---- VIAL_POS_t Matches (60 in 8 files) ----
_MOTOR_ACT_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 336 : 	VIAL_POS_t 
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 416 : 	VIAL_POS_t sample;			// 분석해야할 sample (devState.actionMenu == AS_ACTION_RUN , 현재 실행중(devState.actionMenu == AS_ACTION_RUN) 
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 417 : 	VIAL_POS_t curSample;		// 분석중인 sample
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 418 : 	VIAL_POS_t lastSample;	// 분석해야할 마지막 vial
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 420 : 	VIAL_POS_t injectVial;	// 분석해야할 vial - Mix 동작 실행후 : 인젝터에 주입되어야 하는 바이알 
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 427 : 	VIAL_POS_t firstDestVial;
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 429 : 	VIAL_POS_t reagentVialA;
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 430 : 	VIAL_POS_t reagentVialB;
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 431 : 	VIAL_POS_t reagentVialC;
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 432 : 	VIAL_POS_t reagentVialD;
LcasAction_task.c (Ch_AS4\apps_layer) line 1154 : int aspirateSample(const VIAL_POS_t *pVial, float vol, uint32_t speed)
LcasAction_task.c (Ch_AS4\apps_layer) line 1280 : int dispenseSample(const VIAL_POS_t *pVial, int32_t vol, uint32_t speed)
LcasAction_task.c (Ch_AS4\apps_layer) line 1360 : int	full_LoopInjection(const VIAL_POS_t	*pVial)
LcasAction_task.c (Ch_AS4\apps_layer) line 1713 : int	partial_LoopInjection(const	VIAL_POS_t *pVial)
LcasAction_task.c (Ch_AS4\apps_layer) line 2119 : int	micro_pick_Injection(const VIAL_POS_t	*pVial)
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2136 : VIAL_POS_t transVial;
LcasAction_task.c (Ch_AS4\apps_layer) line 2926 : //int nextVialNew(VIAL_POS_t *pVial)
LcasAction_task.c (Ch_AS4\apps_layer) line 2927 : int nextSample(VIAL_POS_t *pVial)
LcasAction_task.c (Ch_AS4\apps_layer) line 3022 : int nextVial(VIAL_POS_t *pVial)
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3251 : 	static VIAL_POS_t* pVial;
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3541 : 	static VIAL_POS_t* pVial;
LcasAction_task.h (Ch_AS4\inc) line 54 : int aspirateSample(const VIAL_POS_t *pVial, float vol, uint32_t speed);
LcasAction_task.h (Ch_AS4\inc) line 55 : //int dispenseSample(const VIAL_POS_t *pVial, int32_t vol, uint32_t speed);
LcasAction_task.h (Ch_AS4\inc) line 57 : int (*pLoop_Injection_Fn) (const VIAL_POS_t *pVial); // 함수포인터 선언
LcasAction_task.h (Ch_AS4\inc) line 58 : int full_LoopInjection(/*int repeat,*/ const VIAL_POS_t *pVial);
LcasAction_task.h (Ch_AS4\inc) line 59 : int partial_LoopInjection(const VIAL_POS_t *pVial);
LcasAction_task.h (Ch_AS4\inc) line 60 : int micro_pick_Injection(const VIAL_POS_t *pVial);
LcasAction_task.h (Ch_AS4\inc) line 66 : int nextSample(VIAL_POS_t *pVial);
LcasAction_task.h (Ch_AS4\inc) line 67 : int nextVial(VIAL_POS_t *pVial);
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 833 : 			VIAL_POS_t Vial;
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 894 : 			VIAL_POS_t Vial;
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1179 : int goPosVial(const VIAL_POS_t *pVial)
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1292 : int goX_Encoder(const VIAL_POS_t *pVial, uint32_t option)
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1531 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option) 
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1789 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos)//, uint32_t z_option)
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1888 : 	VIAL_POS_t Vial;
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1988 : 	VIAL_POS_t Vial;
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3878 : //	VIAL_POS_t *pVial;	// 초기화 시킨후 사용해야 한다.
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3879 : 	VIAL_POS_t Vial;
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4063 : //	VIAL_POS_t *pVial;	// 초기화 시킨후 사용해야 한다.
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4064 : 	VIAL_POS_t Vial;
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4122 : 	VIAL_POS_t Vial;
MotorCtrl_task.h (Ch_AS4\inc) line 59 : int goPosVial(const VIAL_POS_t *vial);
MotorCtrl_task.h (Ch_AS4\inc) line 63 : int goX_Encoder(const VIAL_POS_t *pVial, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 71 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 88 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos);//, uint32_t z_option)
MotorCtrl_task.h (Ch_AS4\inc) line 116 : int checkTray(unsigned char vialType, VIAL_POS_t *pVial);
net_AS.c (Ch_AS4\apps_layer) line 1358 : int vialPos2Cnt(VIAL_POS_t *pVial)
cnt2vialPos in net_AS.c (Ch_AS4\apps_layer) line 1388 : 	VIAL_POS_t vPos;
net_AS.h (Ch_AS4\inc) line 54 : int vialPos2Cnt(VIAL_POS_t *pVial);
_VIAL_POS_t in protocolType_AS.h (Ch_AS4\common_inc) line 395 : } VIAL_POS_t;
_LCAS_MIX_t in protocolType_AS.h (Ch_AS4\common_inc) line 460 : 	VIAL_POS_t firstDestPos;
_LCAS_MIX_t in protocolType_AS.h (Ch_AS4\common_inc) line 462 : 	VIAL_POS_t reagentPosA;
_LCAS_MIX_t in protocolType_AS.h (Ch_AS4\common_inc) line 463 : 	VIAL_POS_t reagentPosB;
_LCAS_MIX_t in protocolType_AS.h (Ch_AS4\common_inc) line 464 : 	VIAL_POS_t reagentPosC;
_LCAS_MIX_t in protocolType_AS.h (Ch_AS4\common_inc) line 465 : 	VIAL_POS_t reagentPosD;
_LCAS_SEQUENCE_t in protocolType_AS.h (Ch_AS4\common_inc) line 481 : 	VIAL_POS_t firstSamplePos;		// 시작 바이알 위치
_LCAS_SEQUENCE_t in protocolType_AS.h (Ch_AS4\common_inc) line 482 : 	VIAL_POS_t lastSamplePos;			// 끝 바이알 위치
_LCAS_STATE_t in protocolType_AS.h (Ch_AS4\common_inc) line 556 : 	VIAL_POS_t sample;
_LCAS_STATE_t in protocolType_AS.h (Ch_AS4\common_inc) line 557 : 	VIAL_POS_t injectVial;	// 인젝션할 바이알 - mix Program에서 사용
---- goRetryPos_Y Matches (6 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 870 : int goRetryPos_Y(VIAL_POS_t vPos, uint32_t option)
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 872 : int goRetryPos_Y(int32_t pos, uint32_t Tray, uint32_t option)
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1122 : 			if(goRetryPos_Y(devState.mActSet[MOTOR_Y].vPos, devState.mActSet[MOTOR_Y].option)) {
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1124 : 			if(goRetryPos_Y(devState.mActSet[MOTOR_Y].pos, devState.mActSet[MOTOR_Y].Tray, devState.mActSet[MOTOR_Y].option)) {				
MotorCtrl_task.h (Ch_AS4\inc) line 147 : int goRetryPos_Y(VIAL_POS_t pos, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 149 : int goRetryPos_Y(int32_t pos, uint32_t Tray, uint32_t option);
---- readyChkRetry_Y Matches (5 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1172 : int readyChkRetry_Y(int encoderCount)
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1295 : 			if(readyChkRetry_Y(encoderCount_Y)) {
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2025 : 			if(readyChkRetry_Y(encoderCount_Y)) {
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2134 : 			if(readyChkRetry_Y(encoderCount_Y)) {
MotorCtrl_task.h (Ch_AS4\inc) line 141 : int readyChkRetry_Y(int encoderCount);
---- VIAL_XY_CALIBRATION_FIX_Y1 Matches (9 in 4 files) ----
_MOTOR_ACT_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 335 : //#if VIAL_XY_CALIBRATION_FIX_Y1
MotorCtrl_task.c (Ch_AS4\apps_layer) line 870 : #if VIAL_XY_CALIBRATION_FIX_Y1
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 904 : #if VIAL_XY_CALIBRATION_FIX_Y1
MotorCtrl_task.c (Ch_AS4\apps_layer) line 942 : #if VIAL_XY_CALIBRATION_FIX_Y1
MotorCtrl_task.c (Ch_AS4\apps_layer) line 976 : #if VIAL_XY_CALIBRATION_FIX_Y1
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1196 : #if VIAL_XY_CALIBRATION_FIX_Y1
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1678 : #if VIAL_XY_CALIBRATION_FIX_Y1
MotorCtrl_task.h (Ch_AS4\inc) line 146 : #if VIAL_XY_CALIBRATION_FIX_Y1
option_AS.h (Ch_AS4\ryu_inc) line 409 : #define VIAL_XY_CALIBRATION_FIX_Y1			1
---- VIAL_XY_CALIBRATION_FIX_X1 Matches (6 in 3 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 808 : #if VIAL_XY_CALIBRATION_FIX_X1
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 841 : #if VIAL_XY_CALIBRATION_FIX_X1
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1166 : #if VIAL_XY_CALIBRATION_FIX_X1
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1537 : #if VIAL_XY_CALIBRATION_FIX_X1
MotorCtrl_task.h (Ch_AS4\inc) line 144 : #if VIAL_XY_CALIBRATION_FIX_X1
option_AS.h (Ch_AS4\ryu_inc) line 407 : #define VIAL_XY_CALIBRATION_FIX_X1			1
---- VIAL_XY_CALIBRATION_FIX_Y1 Matches (9 in 4 files) ----
_MOTOR_ACT_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 335 : //#if VIAL_XY_CALIBRATION_FIX_Y1
MotorCtrl_task.c (Ch_AS4\apps_layer) line 871 : #if VIAL_XY_CALIBRATION_FIX_Y1
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 905 : #if VIAL_XY_CALIBRATION_FIX_Y1
MotorCtrl_task.c (Ch_AS4\apps_layer) line 943 : #if VIAL_XY_CALIBRATION_FIX_Y1
MotorCtrl_task.c (Ch_AS4\apps_layer) line 977 : #if VIAL_XY_CALIBRATION_FIX_Y1
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1194 : #if VIAL_XY_CALIBRATION_FIX_Y1
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1670 : #if VIAL_XY_CALIBRATION_FIX_Y1
MotorCtrl_task.h (Ch_AS4\inc) line 145 : #if VIAL_XY_CALIBRATION_FIX_Y1
option_AS.h (Ch_AS4\ryu_inc) line 409 : #define VIAL_XY_CALIBRATION_FIX_Y1			1
---- VIAL_XY_CALIBRATION_FIX_X1 Matches (2 in 2 files) ----
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1424 : #if VIAL_XY_CALIBRATION_FIX_X1
option_AS.h (Ch_AS4\ryu_inc) line 407 : //#define VIAL_XY_CALIBRATION_FIX_X1			1
---- Leak Matches (83 in 9 files) ----
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 494 : 	unsigned char LeakError;	// low = Error (leak)
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 495 : 	unsigned char LeakErrorSend;	// 에러를 다시 체크할 것인가?	
define_AS.h (Ch_AS4\ryu_inc) line 79 : // 20211222	-- Leak Error 수정 : Stop 이나 Init 명령이후 동작안함.
errFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 3987 : 		case SELF_ERROR_LEAK: //			(7) // Leak
initDiagData in LcasAction_task.c (Ch_AS4\apps_layer) line 5807 : 	diagData.btLeakTest1 = DIAG_RESULT_NONE;		// leak check
initDiagData in LcasAction_task.c (Ch_AS4\apps_layer) line 5808 : 	diagData.btLeakTest2 = DIAG_RESULT_NONE;		// leak check
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5835 : 			if(special.Leak_check > ON) special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5841 : 			special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5862 : 	if(special.Leak_check == YES) {
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5863 : 		devState.LeakErrorSend = YES;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5864 : 		devState.LeakError = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5867 : 		devState.LeakErrorSend = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5868 : 		devState.LeakError = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5873 : 	as_INFO.Leak_check = special.Leak_check;			
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5892 : 			if(special.Leak_check > ON) special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5899 : 			special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5919 : 	if(special.Leak_check == YES) {
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5920 : 		devState.LeakErrorSend = YES;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5921 : 		devState.LeakError = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5924 : 		devState.LeakErrorSend = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5925 : 		devState.LeakError = NO;
LcasAction_task.c (Ch_AS4\apps_layer) line 6266 : 	static unsigned char Leak = 0;
LcasAction_task.c (Ch_AS4\apps_layer) line 6299 : 	if(special.Leak_check == ON) {	// 5 - low : error : leak
LcasAction_task.c (Ch_AS4\apps_layer) line 6301 : 			Leak = 0;
LcasAction_task.c (Ch_AS4\apps_layer) line 6302 : 			devState.LeakErrorSend = YES;
LcasAction_task.c (Ch_AS4\apps_layer) line 6306 : 			Leak++;
LcasAction_task.c (Ch_AS4\apps_layer) line 6309 : 		if(Leak > LEAK_CHECK_TIME) {
LcasAction_task.c (Ch_AS4\apps_layer) line 6310 : 			Leak = LEAK_CHECK_TIME;
LcasAction_task.c (Ch_AS4\apps_layer) line 6311 : 			devState.LeakError = YES;
LcasAction_task.c (Ch_AS4\apps_layer) line 6312 : 			if(devState.LeakErrorSend == YES) {
LcasAction_task.c (Ch_AS4\apps_layer) line 6313 : 				devState.LeakErrorSend = NO;
LcasAction_task.c (Ch_AS4\apps_layer) line 6320 : 			if(devState.LeakError == YES) {
LcasAction_task.c (Ch_AS4\apps_layer) line 6323 : 			devState.LeakError = NO;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6360 : 	static unsigned char Leak = 0;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6389 : 	if(special.Leak_check == ON) {	// 5 - low : error : leak
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6391 : 			Leak++;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6394 : 			Leak = 0;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6395 : 			devState.LeakErrorSend = YES;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6398 : 		if(Leak > LEAK_CHECK_TIME) {
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6399 : 			Leak = LEAK_CHECK_TIME;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6400 : 			devState.LeakError = YES;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6401 : 			if(devState.LeakErrorSend == YES) {
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6402 : 				devState.LeakErrorSend = NO;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6408 : 			if(devState.LeakError == YES) {
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6411 : 			devState.LeakError = NO;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6478 : 	if(devState.LeakError !=	YES	&& devState.thError1	!= YES &&	devState.thError2 !=	YES	 &&	devState.DoorError != YES && ovenStt.sensorError	!= YES &&	ovenStt.bServiceErr	!= YES)	{
led_Control in led_task.c (Ch_AS4\apps_layer) line 116 : 				if(devState.LeakError == YES) {
led_task.h (Ch_AS4\inc) line 90 : // LeakSen -- GPIO_5
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3703 : 		case DIAG_LEAK_CHECK:		// (7)		//  Leak - 사용안함.
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3983 : 	if(	tmp.LED_onoff > ON || tmp.Door_check > ON || tmp.Leak_check > ON || tmp.Buzzer_onoff > ON ) {
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3993 : 		|| special.Leak_check != tmp.Leak_check || special.Buzzer_onoff != tmp.Buzzer_onoff)
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4009 : 		if(special.Leak_check == YES) {
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4010 : 			devState.LeakErrorSend = YES;
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4011 : 			devState.LeakError = NO;
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4014 : 			devState.LeakErrorSend = NO;
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4015 : 			devState.LeakError = NO;
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4029 : dfp("led=%d door=%d leak=%d buz=%d = NO\n",special.LED_onoff,special.Door_check,special.Leak_check,special.Buzzer_onoff);
send_DiagData in net_AS.c (Ch_AS4\apps_layer) line 4129 : 		diagData.btLeakTest1 = (
send_DiagData in net_AS.c (Ch_AS4\apps_layer) line 4134 : 		diagData.btLeakTest2 = (
send_DiagData in net_AS.c (Ch_AS4\apps_layer) line 4156 : 	diagData.btLeakTest1 = (
send_DiagData in net_AS.c (Ch_AS4\apps_layer) line 4161 : 	diagData.btLeakTest2 = (
protocolType_AS.h (Ch_AS4\common_inc) line 678 : 	#define DIAG_LEAK_CHECK		(7)		//  Leak
protocolType_AS.h (Ch_AS4\common_inc) line 791 : 	#define SELF_ERROR_LEAK			(7) // Leak
_LCAS_DIAG_DATA in protocolType_AS.h (Ch_AS4\common_inc) line 929 : 	unsigned char btLeakTest1;		// leak check
_LCAS_DIAG_DATA in protocolType_AS.h (Ch_AS4\common_inc) line 930 : 	unsigned char btLeakTest2;		// leak check
_LCAS_SPECIAL in protocolType_AS.h (Ch_AS4\common_inc) line 961 : 	unsigned char Leak_check;
_CHROZEN_INFORMATION_t in protocolType_AS.h (Ch_AS4\common_inc) line 1065 : 	unsigned char Leak_check;		// AS / Oven / UVD		--- (bit 5)
protocolType_AS.h (Ch_AS4\common_inc) line 1108 : 	unsigned char Leak_check;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 873 : 	if(special.Leak_check >= ON) special.Leak_check = ON;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 880 : 	as_INFO.Leak_check = special.Leak_check;
sysconfig.c (Ch_AS4\apps_layer) line 902 : 	idata[6] = as_INFO.Leak_check;
sysconfig.c (Ch_AS4\apps_layer) line 921 : 	special.Leak_check = ON;
sysconfig.c (Ch_AS4\apps_layer) line 928 : 	as_INFO.Leak_check = special.Leak_check;
testPrgm.c (Ch_AS4\apps_layer) line 210 : 	static unsigned char Leak = NO;
testPrgm.c (Ch_AS4\apps_layer) line 265 : 	static unsigned char Leak = NO;
testPrgm.c (Ch_AS4\apps_layer) line 1871 : 	static unsigned char Leak = NO;
---- special Matches (134 in 16 files) ----
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 511 : 	unsigned char save_EEPROM_special;
etharp_output in etharp.c (Ch_AS4\lwIP\netif) line 820 :    * are special, other IP addresses are looked up in the ARP table. */
inet_chksum.c (Ch_AS4\lwIP\core\ipv4) line 191 :  * the checksum loop, treating the head and tail bytes specially, whereas
ip_frag.c (Ch_AS4\lwIP\core\ipv4) line 73 :  * Datagrams will be freed by timeout only. Especially useful when MEMP_NUM_REASSDATA
LcasAction_task.c (Ch_AS4\apps_layer) line 103 : extern LCAS_SPECIAL_t special;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5827 : 		size = sizeof(special);
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5832 : 			memcpy(&special, &readBuf[1], size);
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5833 : 			if(special.LED_onoff > ON) special.LED_onoff = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5834 : 			if(special.Door_check > ON) special.Door_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5835 : 			if(special.Leak_check > ON) special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5836 : 			if(special.Buzzer_onoff > ON) special.Buzzer_onoff = OFF;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5839 : 			special.LED_onoff = ON;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5840 : 			special.Door_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5841 : 			special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5842 : 			special.Buzzer_onoff = OFF;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5844 : 			special.Reserved[0] = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5845 : 			special.Reserved[1] = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5846 : 			special.Reserved[2] = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5847 : 			special.Reserved[3] = NO;	
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5851 : 	if(special.LED_onoff == ON) {	EXT_LED_CON_ON;	}
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5854 : 	if(special.Door_check == YES) {
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5862 : 	if(special.Leak_check == YES) {
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5871 : 	as_INFO.LED_onoff = special.LED_onoff;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5872 : 	as_INFO.Door_check = special.Door_check;			
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5873 : 	as_INFO.Leak_check = special.Leak_check;			
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5874 : 	as_INFO.Buzzer_onoff = special.Buzzer_onoff;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5884 : 		size = sizeof(special);
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5889 : 			memcpy(&special, &readBuf[1], size);
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5890 : 			if(special.Buzzer_onoff > ON) special.Buzzer_onoff = OFF;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5891 : 			if(special.Door_check > ON) special.Door_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5892 : 			if(special.Leak_check > ON) special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5893 : 			if(special.LED_onoff > ON) special.LED_onoff = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5896 : 			special.LED_onoff = ON;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5897 : 			special.Buzzer_onoff = OFF;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5898 : 			special.Door_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5899 : 			special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5901 : 			special.Reserved[0] = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5902 : 			special.Reserved[1] = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5903 : 			special.Reserved[2] = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5904 : 			special.Reserved[3] = NO;	
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5908 : 	if(special.LED_onoff == ON) {	EXT_LED_CON_ON;	}
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5911 : 	if(special.Door_check == YES) {
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5919 : 	if(special.Leak_check == YES) {
convert_Specia_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5937 : //	size = sizeof(special);
convert_Specia_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5939 : //	eepromRead_Data(SPECIAL_DATA_SAVE,(sizeof(special) + 1),&data);
convert_Specia_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5940 : 	eepromRead_Data(SPECIAL_DATA_SAVE,(sizeof(special) + 1),data);
convert_Specia_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5943 : 		NVM_write((INFO_SPECIAL_ENVM_ADDR), data, (sizeof(special) + 1), NVM_DO_NOT_LOCK_PAGE);	
LcasAction_task.c (Ch_AS4\apps_layer) line 6270 : 	if(special.Door_check == ON /*&& LcasState.state == STATE_RUN*/) {	 // 2 - High : error : open
LcasAction_task.c (Ch_AS4\apps_layer) line 6299 : 	if(special.Leak_check == ON) {	// 5 - low : error : leak
LcasAction_task.c (Ch_AS4\apps_layer) line 6330 : 		if(special.Buzzer_onoff == ON ) {
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6365 : 	if(special.Door_check == YES) {
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6389 : 	if(special.Leak_check == ON) {	// 5 - low : error : leak
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6513 : 		if(special.Buzzer_onoff == ON ) {
main.c (Ch_AS4) line 97 : //extern LCAS_SPECIAL_t special;
main in main.c (Ch_AS4) line 481 : 					if(devState.save_EEPROM_special == YES) {
main in main.c (Ch_AS4) line 482 : 						if(save_EEPROM_special_data()) {
main in main.c (Ch_AS4) line 483 : 							devState.save_EEPROM_special = NO;
memp_std.h (Ch_AS4\lwIP\include\lwip) line 9 :  * If the include'r doesn't require any special treatment of each of the types
net_AS.c (Ch_AS4\apps_layer) line 115 : LCAS_SPECIAL_t special;
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3410 : 				SEND_RESPONSE_LCAS_PACKET(special,pData);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3985 : 		SEND_LCAS_PACKET(PACKCODE_LCAS_SPECIAL, special, special);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3992 : 	if(special.LED_onoff != tmp.LED_onoff || special.Door_check != tmp.Door_check
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3993 : 		|| special.Leak_check != tmp.Leak_check || special.Buzzer_onoff != tmp.Buzzer_onoff)
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3995 : 		memcpy(&special, &tmp, sizeof(tmp));
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3997 : 		if(special.LED_onoff == ON) {		EXT_LED_CON_ON;		}
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4000 : 		if(special.Door_check == YES) {
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4009 : 		if(special.Leak_check == YES) {
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4017 : 		if(special.Buzzer_onoff == ON) {}
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4020 : 		devState.save_EEPROM_special = YES;
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4024 : 		memcpy(&data[1], &(special) , sizeof(special));
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4025 : 		eepromWrite_Data((SPECIAL_DATA_SAVE), sizeof(special) + 1, &(data[0]));
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4029 : dfp("led=%d door=%d leak=%d buz=%d = NO\n",special.LED_onoff,special.Door_check,special.Leak_check,special.Buzzer_onoff);
net_AS.c (Ch_AS4\apps_layer) line 4032 : int save_EEPROM_special_data()
save_EEPROM_special_data in net_AS.c (Ch_AS4\apps_layer) line 4037 : 	memcpy(&data[1], &(special) , sizeof(special));
save_EEPROM_special_data in net_AS.c (Ch_AS4\apps_layer) line 4042 : 	eepromWrite_Data((SPECIAL_DATA_SAVE), sizeof(special) + 1, &(data[0]));
save_EEPROM_special_data in net_AS.c (Ch_AS4\apps_layer) line 4045 : 	devState.save_EEPROM_special = NO;
net_AS.h (Ch_AS4\inc) line 82 : int save_EEPROM_special_data();
opt.h (Ch_AS4\lwIP\include\lwip) line 103 : * Especially useful with MEM_LIBC_MALLOC but handle with care regarding execution
pppifOutput in ppp.c (Ch_AS4\lwIP\netif\ppp) line 915 :       /* Update FCS before checking for special characters. */
pppifOutput in ppp.c (Ch_AS4\lwIP\netif\ppp) line 918 :       /* Copy to output buffer escaping special characters. */
pppWrite in ppp.c (Ch_AS4\lwIP\netif\ppp) line 1097 :     /* Update FCS before checking for special characters. */
pppWrite in ppp.c (Ch_AS4\lwIP\netif\ppp) line 1100 :     /* Copy to output buffer escaping special characters. */
pppInProc in ppp.c (Ch_AS4\lwIP\netif\ppp) line 1777 :     /* Handle special characters. */
rs422_if.c (Ch_AS4\apps_layer) line 75 : extern LCAS_SPECIAL_t special;
sysconfig.c (Ch_AS4\apps_layer) line 38 : extern LCAS_SPECIAL_t special;
sysconfig.c (Ch_AS4\apps_layer) line 781 : // =================== Special		special.LED_onoff // eepromRead_Data(SPECIAL_DATA_SAVE,(size + 1),&readBuf);
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 869 : 	if(special.LED_onoff >= ON) special.LED_onoff = ON;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 870 : 	else special.LED_onoff = OFF;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 871 : 	if(special.Buzzer_onoff >= ON) special.Buzzer_onoff = ON;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 872 : 	else special.Buzzer_onoff = OFF;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 873 : 	if(special.Leak_check >= ON) special.Leak_check = ON;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 874 : 	else special.Door_check = OFF; 		
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 875 : 	if(special.Door_check >= ON) special.Door_check = ON;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 876 : 	else special.Door_check = OFF;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 878 : 	as_INFO.LED_onoff = special.LED_onoff;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 879 : 	as_INFO.Door_check = special.Door_check;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 880 : 	as_INFO.Leak_check = special.Leak_check;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 881 : 	as_INFO.Buzzer_onoff = special.Buzzer_onoff;
sysconfig.c (Ch_AS4\apps_layer) line 918 : 	special.LED_onoff = ON;
sysconfig.c (Ch_AS4\apps_layer) line 919 : 	special.Buzzer_onoff = ON;
sysconfig.c (Ch_AS4\apps_layer) line 920 : 	special.Door_check = ON;
sysconfig.c (Ch_AS4\apps_layer) line 921 : 	special.Leak_check = ON;
sysconfig.c (Ch_AS4\apps_layer) line 923 : //	oven_INFO.fMaxTemperature = special.fMaxTemperature;
sysconfig.c (Ch_AS4\apps_layer) line 924 : //	oven_INFO.fMinTemperature = special.fMinTemperature;
sysconfig.c (Ch_AS4\apps_layer) line 926 : 	as_INFO.LED_onoff = special.LED_onoff;
sysconfig.c (Ch_AS4\apps_layer) line 927 : 	as_INFO.Door_check = special.Door_check;
sysconfig.c (Ch_AS4\apps_layer) line 928 : 	as_INFO.Leak_check = special.Leak_check;
sysconfig.c (Ch_AS4\apps_layer) line 929 : 	as_INFO.Buzzer_onoff = special.Buzzer_onoff;
testPrgm.c (Ch_AS4\apps_layer) line 42 : extern LCAS_SPECIAL_t special;
vj_compress_tcp in vj.c (Ch_AS4\lwIP\netif\ppp) line 336 :      * actual changes match one of our special case encodings --
vj_compress_tcp in vj.c (Ch_AS4\lwIP\netif\ppp) line 343 :       /* special case for echoed terminal traffic */
vj_compress_tcp in vj.c (Ch_AS4\lwIP\netif\ppp) line 351 :       /* special case for data xfer */
vj.h (Ch_AS4\lwIP\netif\ppp) line 43 :  * (there may be no changes and there are two special cases where
vj.h (Ch_AS4\lwIP\netif\ppp) line 90 : /* reserved, special-case values of above */
---- devState.LeakError Matches (26 in 3 files) ----
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5863 : 		devState.LeakErrorSend = YES;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5864 : 		devState.LeakError = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5867 : 		devState.LeakErrorSend = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5868 : 		devState.LeakError = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5920 : 		devState.LeakErrorSend = YES;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5921 : 		devState.LeakError = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5924 : 		devState.LeakErrorSend = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5925 : 		devState.LeakError = NO;
LcasAction_task.c (Ch_AS4\apps_layer) line 6302 : 			devState.LeakErrorSend = YES;
LcasAction_task.c (Ch_AS4\apps_layer) line 6311 : 			devState.LeakError = YES;
LcasAction_task.c (Ch_AS4\apps_layer) line 6312 : 			if(devState.LeakErrorSend == YES) {
LcasAction_task.c (Ch_AS4\apps_layer) line 6313 : 				devState.LeakErrorSend = NO;
LcasAction_task.c (Ch_AS4\apps_layer) line 6320 : 			if(devState.LeakError == YES) {
LcasAction_task.c (Ch_AS4\apps_layer) line 6323 : 			devState.LeakError = NO;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6395 : 			devState.LeakErrorSend = YES;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6400 : 			devState.LeakError = YES;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6401 : 			if(devState.LeakErrorSend == YES) {
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6402 : 				devState.LeakErrorSend = NO;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6408 : 			if(devState.LeakError == YES) {
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6411 : 			devState.LeakError = NO;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6478 : 	if(devState.LeakError !=	YES	&& devState.thError1	!= YES &&	devState.thError2 !=	YES	 &&	devState.DoorError != YES && ovenStt.sensorError	!= YES &&	ovenStt.bServiceErr	!= YES)	{
led_Control in led_task.c (Ch_AS4\apps_layer) line 116 : 				if(devState.LeakError == YES) {
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4010 : 			devState.LeakErrorSend = YES;
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4011 : 			devState.LeakError = NO;
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4014 : 			devState.LeakErrorSend = NO;
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4015 : 			devState.LeakError = NO;
---- special.Leak_check Matches (19 in 3 files) ----
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5835 : 			if(special.Leak_check > ON) special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5841 : 			special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5862 : 	if(special.Leak_check == YES) {
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5873 : 	as_INFO.Leak_check = special.Leak_check;			
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5892 : 			if(special.Leak_check > ON) special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5899 : 			special.Leak_check = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5919 : 	if(special.Leak_check == YES) {
LcasAction_task.c (Ch_AS4\apps_layer) line 6299 : 	if(special.Leak_check == ON) {	// 5 - low : error : leak
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6389 : 	if(special.Leak_check == ON) {	// 5 - low : error : leak
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3993 : 		|| special.Leak_check != tmp.Leak_check || special.Buzzer_onoff != tmp.Buzzer_onoff)
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4009 : 		if(special.Leak_check == YES) {
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4029 : dfp("led=%d door=%d leak=%d buz=%d = NO\n",special.LED_onoff,special.Door_check,special.Leak_check,special.Buzzer_onoff);
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 873 : 	if(special.Leak_check >= ON) special.Leak_check = ON;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 880 : 	as_INFO.Leak_check = special.Leak_check;
sysconfig.c (Ch_AS4\apps_layer) line 921 : 	special.Leak_check = ON;
sysconfig.c (Ch_AS4\apps_layer) line 928 : 	as_INFO.Leak_check = special.Leak_check;
---- CMD_CHK_DIR_START Matches (24 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 371 : 	#define CMD_CHK_DIR_START_Z 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x30A << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 382 : 	#define CMD_CHK_DIR_START_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 390 : 	#define CMD_CHK_DIR_START_Y 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x30A << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 398 : 	#define CMD_CHK_DIR_START_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 437 : 	#define CMD_CHK_DIR_START_Z
define_AS.h (Ch_AS4\ryu_inc) line 447 : 	#define CMD_CHK_DIR_START_X
define_AS.h (Ch_AS4\ryu_inc) line 456 : 	#define CMD_CHK_DIR_START_Y
define_AS.h (Ch_AS4\ryu_inc) line 466 : 	#define CMD_CHK_DIR_START_SYR
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 736 : //CMD_CHK_DIR_START_Z;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1432 : 		CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1434 : 	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1510 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1648 : 		CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1650 : 	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1722 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1816 : 		CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1818 : 	dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2046 : 				encoderCount = goZ_Encoder(POS_Z_TOP,ACT_Z_POS);	// CMD_CHK_DIR_START_Z
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2279 : 		CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2281 : 	dprintf("## CMD_CHK_DIR_START chk_DirS=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2106 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2110 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2114 : CMD_CHK_DIR_START(i);
---- CMD_CHK_DIR_START Matches (24 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 371 : 	#define CMD_CHK_DIR_START_Z 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x30A << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 382 : 	#define CMD_CHK_DIR_START_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 390 : 	#define CMD_CHK_DIR_START_Y 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x30A << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 398 : 	#define CMD_CHK_DIR_START_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 437 : 	#define CMD_CHK_DIR_START_Z
define_AS.h (Ch_AS4\ryu_inc) line 447 : 	#define CMD_CHK_DIR_START_X
define_AS.h (Ch_AS4\ryu_inc) line 456 : 	#define CMD_CHK_DIR_START_Y
define_AS.h (Ch_AS4\ryu_inc) line 466 : 	#define CMD_CHK_DIR_START_SYR
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 735 : //CMD_CHK_DIR_START_Z;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1358 : 		CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1360 : //	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1436 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1574 : 		CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1576 : //	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1648 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1742 : 		CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1744 : //	dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1972 : 				encoderCount = goZ_Encoder(POS_Z_TOP,ACT_Z_POS);	// CMD_CHK_DIR_START_Z
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2205 : 		CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2207 : //	dprintf("## CMD_CHK_DIR_START chk_DirS=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2106 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2110 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2114 : CMD_CHK_DIR_START(i);
---- CMD_CHK_DIR_START Matches (24 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 371 : 	#define CMD_CHK_DIR_START_Z 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Z] + (0x30A << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 382 : 	#define CMD_CHK_DIR_START_X 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_X] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 390 : 	#define CMD_CHK_DIR_START_Y 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_Y] + (0x30A << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 398 : 	#define CMD_CHK_DIR_START_SYR 	*((uint32_t volatile *)(devSet.baseAddr[MOTOR_SYR] + (0x30E << 2))) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
define_AS.h (Ch_AS4\ryu_inc) line 437 : 	#define CMD_CHK_DIR_START_Z
define_AS.h (Ch_AS4\ryu_inc) line 447 : 	#define CMD_CHK_DIR_START_X
define_AS.h (Ch_AS4\ryu_inc) line 456 : 	#define CMD_CHK_DIR_START_Y
define_AS.h (Ch_AS4\ryu_inc) line 466 : 	#define CMD_CHK_DIR_START_SYR
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 735 : //CMD_CHK_DIR_START_Z;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1358 : 		CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1360 : //	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1436 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1574 : 		CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1576 : //	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1648 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1742 : 		CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1744 : 	dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1972 : 				encoderCount = goZ_Encoder(POS_Z_TOP,ACT_Z_POS);	// CMD_CHK_DIR_START_Z
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2205 : 		CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2207 : //	dprintf("## CMD_CHK_DIR_START chk_DirS=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2106 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2110 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2114 : CMD_CHK_DIR_START(i);
---- errorFunction Matches (103 in 9 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 19 : #define errorFunction(X)			{ iprintf( "[%s %d]",__FUNCTION__,__LINE__); errFunction(X); }
debug_inform.h (Ch_AS4\ryu_inc) line 43 : #define errorFunction(X)			{ errFunction(X); }
Def_stepCon.h (Ch_AS4\common_inc) line 353 : 	#define errorEncoder(WHO)			errorFunction(SELF_ERROR_ENCODER_COUNT + WHO)
Def_stepCon.h (Ch_AS4\common_inc) line 355 : 	#define errorEncoder_X()			errorFunction(SELF_ERROR_ENCODER_COUNT_X)
Def_stepCon.h (Ch_AS4\common_inc) line 356 : 	#define errorEncoder_Y()			errorFunction(SELF_ERROR_ENCODER_COUNT_Y)
Def_stepCon.h (Ch_AS4\common_inc) line 357 : 	#define errorEncoder_Z()			errorFunction(SELF_ERROR_ENCODER_COUNT_Z)
Def_stepCon.h (Ch_AS4\common_inc) line 358 : 	#define errorEncoder_SYR()			errorFunction(SELF_ERROR_ENCODER_COUNT_SYR)
Def_stepCon.h (Ch_AS4\common_inc) line 359 : 	#define errorEncoder_VAL()			errorFunction(SELF_ERROR_ENCODER_COUNT_VAL)
Def_stepCon.h (Ch_AS4\common_inc) line 360 : 	#define errorEncoder_INJ()			errorFunction(SELF_ERROR_ENCODER_COUNT_INJ)
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1463 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1471 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1486 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1535 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1544 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1559 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1793 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1801 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1813 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1859 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1867 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1879 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2219 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2228 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2239 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2287 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2295 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2307 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2866 : 			if(devState.connected) errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3348 : 								errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3368 : 								errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3382 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3447 : errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3454 : 								errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3463 : 								errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3646 : errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3654 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3667 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
LcasAction_task.c (Ch_AS4\apps_layer) line 3958 : //int	errorFunction(unsigned char	err)
errFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 3961 : dfpErr("errorFunction=%d\n",err);
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4080 : 				errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
LcasAction_task.c (Ch_AS4\apps_layer) line 6291 : 				errorFunction(SELF_ERROR_DOOR_OPEN);
LcasAction_task.c (Ch_AS4\apps_layer) line 6315 : 				errorFunction(SELF_ERROR_LEAK);  //					sendMsg
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6380 : 				errorFunction(SELF_ERROR_DOOR_OPEN);
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6403 : 				errorFunction(SELF_ERROR_LEAK);  //					sendMsg
LcasAction_task.h (Ch_AS4\inc) line 83 : //int errorFunction(unsigned char err);
main in main.c (Ch_AS4) line 547 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Z);
main in main.c (Ch_AS4) line 552 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_X);
main in main.c (Ch_AS4) line 557 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Y);
main in main.c (Ch_AS4) line 562 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_SYR);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1143 : 							errorFunction(SELF_ERROR_HOME_CHK_Z);
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1276 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1374 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1452 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1507 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1590 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1662 : 		errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2003 : 											errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2095 : 	      		errorFunction(SELF_ERROR_POSITION_Z);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2520 : 		errorFunction(SELF_ERROR_HOME_CHK_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2660 : 		errorFunction(SELF_ERROR_HOME_CHK_INJ);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2804 : 		errorFunction(SELF_ERROR_HOME_CHK_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2832 : 					errorFunction(SELF_ERROR_HOME_CHK_SYR);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2923 : 		errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3012 : 						errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3065 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3163 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3206 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3289 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3334 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3452 : 		errorFunction(SELF_ERROR_HOME_CHK_Y);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3535 : 						errorFunction(SELF_ERROR_HOME_CHK_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3575 : 		errorFunction(SELF_ERROR_HOME_CHK_Y);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4864 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Z);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4870 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_X);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4875 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Y);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4880 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_SYR);
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4982 : 		errorFunction(SELF_ERROR_POSITION_XY);
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 196 : 			errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
net_SystemConfig in net_AS.c (Ch_AS4\apps_layer) line 533 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 949 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 981 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 991 : 					errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 1000 : 					errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1060 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1070 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1240 : 		errorFunction(err);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1455 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1627 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1814 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2945 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3372 : 						errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3629 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3711 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3714 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3730 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3734 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3753 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3764 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3769 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3780 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3984 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
tcp_server.h (Ch_AS4\inc) line 168 : int	errorFunction(unsigned char	err);
netBoardCmd in testPrgm.c (Ch_AS4\apps_layer) line 2135 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
---- goY_Encoder Matches (14 in 2 files) ----
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 897 : 			encoderCount = goY_Encoder(&Vial, option);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 900 : 			encoderCount = goY_Encoder(pos, Tray, option);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1187 : 			encoderCount_Y = goY_Encoder(pVial, ACT_XY_POS);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1189 : 			encoderCount_Y = goY_Encoder(pVial->uPos.y, pVial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1515 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option) 
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1597 : int goY_Encoder(int32_t pos, uint32_t Tray, uint32_t option)
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1804 : 				encoderCount_Y = goY_Encoder(pVial, ACT_XY_POS);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1806 : 				encoderCount_Y = goY_Encoder(pVial->uPos.y, pVial->uPos.tray, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1894 : 			encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1896 : 			encoderCount_Y = goY_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1986 : 					encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1988 : 					encoderCount_Y = goY_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 71 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 74 : int goY_Encoder(int32_t pos, uint32_t Tray, uint32_t option);
---- goSyr_Encoder Matches (27 in 3 files) ----
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 225 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, 	WASH_SPEED_UP_SYR, ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 281 : 			encoderCount = goSyr_Encoder(washVolume,	0, WASH_SPEED_DOWN_SYR, ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 308 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO , 0, WASH_SPEED_UP_SYR,	ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 385 : 			encoderCount = goSyr_Encoder(washVolume,	0, WASH_SPEED_DOWN_SYR, ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 418 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO , 0, WASH_SPEED_UP_SYR,	ACT_XY_POS);
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 525 : 				encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, WASH_SPEED_UP_SYR, ACT_XY_POS);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1238 : 			encoderCount =  goSyr_Encoder(vol, 0, speed, ACT_XY_POS_ADD);	// 현재위치에서 추가로 흡입하거나 배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1406 : 							encoderCount =	goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1510 : 						encoderCount = goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1618 : 		encoderCount = 			goSyr_Encoder(-injectionVolume, 0, syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 배출		
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1665 : 		encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, syringeSpeed, ACT_XY_POS);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1761 : 						encoderCount =		goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1835 : 						encoderCount = goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1924 : 			encoderCount = goSyr_Encoder(-(PARTIAL_LOOP_EXTRA_SAMPLE_VOL_1ST), 0, syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 배출		
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1958 : 		encoderCount = goSyr_Encoder(-injectionVolume, 0, syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 배출		
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2008 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, syringeSpeed, ACT_XY_POS);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2173 : 				encoderCount = goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2261 : 						encoderCount =				goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2369 : 			encoderCount =		goSyr_Encoder(-injectionVolume,0,	syringeSpeed,	ACT_XY_POS_ADD);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2415 : 				encoderCount =			goSyr_Encoder(POS_SYR_ZERO, 0, syringeSpeed, ACT_XY_POS);						
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3320 : 								encoderCount = goSyr_Encoder(airSegmentVol,	0,devSet.syrSpeedInj[runSetup.syringeDnSpdInj-1], ACT_XY_POS);	// 처음이라	절대위치
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3589 : 				encoderCount = goSyr_Encoder(airSegmentVol,	0,devSet.syrSpeedInj[runSetup.syringeDnSpdInj-1], ACT_XY_POS);	// 처음이라	절대위치
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3738 : 		encoderCount =	goSyr_Encoder(addVolume, 0,syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3754 : 	encoderCount =	goSyr_Encoder(-addVolume,	0,syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3770 : 		encoderCount =		goSyr_Encoder(POS_SYR_ZERO, 0,syringeSpeed, ACT_XY_POS);	// 현재위치에서	추가로 흡입하거나	배출
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2175 : int goSyr_Encoder(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
MotorCtrl_task.h (Ch_AS4\inc) line 84 : int goSyr_Encoder(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
---- Washing Matches (38 in 9 files) ----
_LCAS_CONTROL_t in ComType_AS.h (Ch_AS4\common_inc) line 697 : 	unsigned char btWashingCount;
_LCAS_CONTROL_t in ComType_AS.h (Ch_AS4\common_inc) line 698 : 	int bWashingStartStop;
_LCAS_CONTROL_t in ComType_AS.h (Ch_AS4\common_inc) line 702 : 	unsigned char btInitWashingCount;
Def_stepCon.h (Ch_AS4\common_inc) line 391 : // Washing 삭제
Def_stepCon.h (Ch_AS4\common_inc) line 503 : // Washing port를 영점으로 함.
LcasAction_task.c (Ch_AS4\apps_layer) line 177 : int	Washing(int	repeat,	int	*curRepeat,	int	port)
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 246 : 					if(goPosWashingPort()) { ++subMenu_w;}
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 249 : 					if(goPosWashingPort()) { ++subMenu_w;}
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 252 : 					if(goPosWashingPort()) { ++subMenu_w;}
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 255 : //					if(goPosWashingPort()) { ++subMenu_w;}
LcasAction_task.c (Ch_AS4\apps_layer) line 2093 : 	1. Valve : Washing Port
mix_ProgramNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3149 : // 6.	Washing
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3271 : 					if(Washing(runSetup.washNeedleBeforeInj,	&(devState.curNdlWashBeforeCnt), WASH_NEEDLE_ALL)) {
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3505 : 					if(Washing(runSetup.washNeedleAfterInj, &(devState.curNdlWashAfterCnt), WASH_NEEDLE_ALL)) {
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3561 : 			if(Washing(runSetup.washNeedleBeforeInj,	&(devState.curNdlWashBeforeCnt), WASH_NEEDLE_ALL)) {
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3784 : 			if(Washing(runSetup.washNeedleAfterInj, &(devState.curNdlWashAfterCnt), WASH_NEEDLE_ALL)) {
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4095 : 			if(Washing(WASH_TIMES_DEFAULT_INIT,	&(devState.curNdlWashAfterCnt),	WASH_NEEDLE_INT))	{
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4100 : 			if(Washing(WASH_TIMES_DEFAULT_INIT,	&(devState.curNdlWashAfterCnt),	WASH_NEEDLE_ALL))	{
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4105 : 			if(Washing(WASH_TIMES_DEFAULT_INIT,	&(devState.curNdlWashAfterCnt),	WASH_INJECTOR))	{
LcasAction_task.c (Ch_AS4\apps_layer) line 4264 : 					else if(Washing(runSetup.washNeedleBeforeInj,	&(devState.curNdlWashBeforeCnt), WASH_NEEDLE_ALL)) {
LcasAction_task.c (Ch_AS4\apps_layer) line 4270 : 					else if(Washing(runSetup.washInjportBeforeInj, &(devState.curInjWashBeforeCnt),	WASH_INJECTOR))	{
LcasAction_task.c (Ch_AS4\apps_layer) line 4313 : 					else if(Washing(runSetup.washNeedleAfterInj, &(devState.curNdlWashAfterCnt), WASH_NEEDLE_ALL)) {
LcasAction_task.c (Ch_AS4\apps_layer) line 4319 : 					else if(Washing(runSetup.washInjportAfterInj,	&(devState.curInjWashAfterCnt),	WASH_INJECTOR))	{
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 4881 : 			if(Washing(devState.serviceWashCnt,	&(devState.curSvcWashCnt),	WASH_NEEDLE_INT))	{
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 4886 : 			if(Washing(devState.serviceWashCnt,	&(devState.curSvcWashCnt),	WASH_NEEDLE_ALL))	{
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 4891 : 			if(Washing(devState.serviceWashCnt,	&(devState.curSvcWashCnt),	WASH_INJECTOR))	{
usedTimeCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 5979 : 				// 주입 및 Washing이 끝나면 	
usedTimeCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6039 : 				// 주입 및 Washing이 끝나면 	
LcasAction_task.h (Ch_AS4\inc) line 32 : int Washing(int repeat, int *curRepeat, int port);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2498 : // Valve Home : Washing port 와 Syringe 연결 위치
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2504 : // Valve : Washing Port
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3767 : //			if(goPosWashingPort()) {	subMenu_ihpa++;	}
MotorCtrl_task.h (Ch_AS4\inc) line 30 : #define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
option_AS.h (Ch_AS4\ryu_inc) line 41 : // Washing 삭제
protocolType_AS.h (Ch_AS4\common_inc) line 535 : #define	STATE_SERVICE_WASH		6			// 사용자가 임의로 Washing 명령을 줄때 - 사용자가 세척 명령을 보냄.
protocolType_AS.h (Ch_AS4\common_inc) line 636 : 	#define ADJUST_WASTE_PORT						6				// : x,y  -- Washing Port와 동일
_LCAS_USED_TIME in protocolType_AS.h (Ch_AS4\common_inc) line 987 : // 주입 및 Washing이 끝나면
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1441 : // Washing : CCW
---- goSyr Matches (39 in 5 files) ----
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 225 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, 	WASH_SPEED_UP_SYR, ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 281 : 			encoderCount = goSyr_Encoder(washVolume,	0, WASH_SPEED_DOWN_SYR, ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 308 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO , 0, WASH_SPEED_UP_SYR,	ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 385 : 			encoderCount = goSyr_Encoder(washVolume,	0, WASH_SPEED_DOWN_SYR, ACT_XY_POS);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 418 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO , 0, WASH_SPEED_UP_SYR,	ACT_XY_POS);
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 525 : 				encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, WASH_SPEED_UP_SYR, ACT_XY_POS);
LcasAction_task.c (Ch_AS4\apps_layer) line 1149 : // goPosVial -> goZ(vial detect) -> goSyr(uL,speed) -> goZ(top)
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1238 : 			encoderCount =  goSyr_Encoder(vol, 0, speed, ACT_XY_POS_ADD);	// 현재위치에서 추가로 흡입하거나 배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1406 : 							encoderCount =	goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1510 : 						encoderCount = goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1586 : //						goSyr(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1618 : 		encoderCount = 			goSyr_Encoder(-injectionVolume, 0, syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 배출		
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1665 : 		encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, syringeSpeed, ACT_XY_POS);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1761 : 						encoderCount =		goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1835 : 						encoderCount = goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1924 : 			encoderCount = goSyr_Encoder(-(PARTIAL_LOOP_EXTRA_SAMPLE_VOL_1ST), 0, syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 배출		
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1958 : 		encoderCount = goSyr_Encoder(-injectionVolume, 0, syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 배출		
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2008 : 			encoderCount = goSyr_Encoder(POS_SYR_ZERO, 0, syringeSpeed, ACT_XY_POS);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2173 : 				encoderCount = goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2261 : 						encoderCount =				goSyr_Encoder(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2369 : 			encoderCount =		goSyr_Encoder(-injectionVolume,0,	syringeSpeed,	ACT_XY_POS_ADD);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2415 : 				encoderCount =			goSyr_Encoder(POS_SYR_ZERO, 0, syringeSpeed, ACT_XY_POS);						
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3320 : 								encoderCount = goSyr_Encoder(airSegmentVol,	0,devSet.syrSpeedInj[runSetup.syringeDnSpdInj-1], ACT_XY_POS);	// 처음이라	절대위치
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3589 : 				encoderCount = goSyr_Encoder(airSegmentVol,	0,devSet.syrSpeedInj[runSetup.syringeDnSpdInj-1], ACT_XY_POS);	// 처음이라	절대위치
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3738 : 		encoderCount =	goSyr_Encoder(addVolume, 0,syringeSpeed, ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3754 : 	encoderCount =	goSyr_Encoder(-addVolume,	0,syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3770 : 		encoderCount =		goSyr_Encoder(POS_SYR_ZERO, 0,syringeSpeed, ACT_XY_POS);	// 현재위치에서	추가로 흡입하거나	배출
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2132 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2165 : dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2175 : int goSyr_Encoder(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2210 : //dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4143 : 			goSyr((float)(devSet.syrExchangeHeight), 0, WASH_SPEED_UP_SYR, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 81 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 84 : int goSyr_Encoder(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2180 : 					goSyr(-ADJUST_STEP_UNIT_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2229 : 					goSyr((-ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2283 : 					goSyr((ADJUST_STEP_UNIT_SYR), 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2335 : 					goSyr((ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
option_AS.h (Ch_AS4\ryu_inc) line 170 : // Step 계산시 플로팅포인트 계산 에러 (goSyr())
---- goSyr Matches (12 in 5 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1149 : // goPosVial -> goZ(vial detect) -> goSyr(uL,speed) -> goZ(top)
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1586 : //						goSyr(airSegmentVol,	0, syringeSpeed,	ACT_XY_POS_ADD);	// 현재위치에서	추가로 흡입하거나	배출
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2132 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2165 : dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2210 : //dprintf("===	goSyr pos=%f curStep=%f cur=%f act=%f step=%d option=%d\n", pos,devState.curStep[MOTOR_SYR], cur, act, step, option);	
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4143 : 			goSyr((float)(devSet.syrExchangeHeight), 0, WASH_SPEED_UP_SYR, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 81 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2180 : 					goSyr(-ADJUST_STEP_UNIT_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2229 : 					goSyr((-ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2283 : 					goSyr((ADJUST_STEP_UNIT_SYR), 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2335 : 					goSyr((ADJUST_STEP_UNIT_SYR) * ADJUST_STEP_UNIT_SCALE_SYR, 0, ADJUST_SPEED_SYL, ACT_MOVE_STEP_RELATE);
option_AS.h (Ch_AS4\ryu_inc) line 170 : // Step 계산시 플로팅포인트 계산 에러 (goSyr())
---- initHomePos_Syr Matches (4 in 3 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2799 : int initHomePos_Syr()	// 
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3782 : 				initHomePos_Syr();
MotorCtrl_task.h (Ch_AS4\inc) line 108 : int initHomePos_Syr();	// 
machineTest_Mode_SYR_Home in testPrgm.c (Ch_AS4\apps_layer) line 1709 : 				initHomePos_Syr();
---- cmdChkDir_READY_Addr Matches (8 in 3 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 589 : 	unsigned int cmdChkDir_READY_Addr[STEP_MOTOR_COUNT];
define_AS.h (Ch_AS4\ryu_inc) line 405 : 	#define CMD_CHK_DIR_READY(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_READY_Addr[WHO])) = 0x0; \
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4639 : 	devSet.cmdChkDir_READY_Addr[MOTOR_X] = BASEADDR_MOTOR_X_Z + (0x30D << 2);
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4640 : 	devSet.cmdChkDir_READY_Addr[MOTOR_Y] = BASEADDR_MOTOR_Y_SYR + (0x309 << 2);
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4641 : 	devSet.cmdChkDir_READY_Addr[MOTOR_Z] = BASEADDR_MOTOR_X_Z + (0x309 << 2);
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4642 : 	devSet.cmdChkDir_READY_Addr[MOTOR_SYR] = BASEADDR_MOTOR_Y_SYR + (0x30D << 2);
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4643 : 	//devSet.cmdChkDir_READY_Addr[MOTOR_VAL] = BASEADDR_MOTOR_X_Z + (0x30D << 2);
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4644 : 	//devSet.cmdChkDir_READY_Addr[MOTOR_INJ] = BASEADDR_MOTOR_X_Z + (0x30D << 2);
---- initHomePos_All Matches (7 in 3 files) ----
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4084 : 			if(initHomePos_All())	{
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 4808 : 			if(initHomePos_All())	{
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 4844 : 			if(initHomePos_All())	{
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3675 : int initHomePos_All()
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4064 : 			if(initHomePos_All())	{
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4122 : 			if(initHomePos_All())	{
MotorCtrl_task.h (Ch_AS4\inc) line 114 : int initHomePos_All();
---- AS_INIT_SUB_CHECK_VIAL_PLATE Matches (1 in 1 files) ----
ComType_AS.h (Ch_AS4\common_inc) line 160 : 	#define AS_INIT_SUB_CHECK_VIAL_PLATE				(2)
---- AS_INIT_SUB_FIND_HOME_ALL Matches (5 in 3 files) ----
ComType_AS.h (Ch_AS4\common_inc) line 158 : 	#define AS_INIT_SUB_FIND_HOME_ALL					(1)
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4076 : 			if(devSet.adjustState	== YES)	devState.actionSubmenu = AS_INIT_SUB_FIND_HOME_ALL;
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4083 : 		case AS_INIT_SUB_FIND_HOME_ALL:
commandStopFn in net_AS.c (Ch_AS4\apps_layer) line 1596 : 	devState.actionSubmenu = AS_INIT_SUB_FIND_HOME_ALL;
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1795 : 				devState.actionSubmenu = AS_INIT_SUB_FIND_HOME_ALL;
---- checkTray Matches (1 in 1 files) ----
MotorCtrl_task.h (Ch_AS4\inc) line 118 : int checkTray(unsigned char vialType, VIAL_POS_t *pVial);
---- checkVialPlate Matches (1 in 1 files) ----
MotorCtrl_task.h (Ch_AS4\inc) line 119 : int checkVialPlate();
---- subMenu_ihpa Matches (27 in 2 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 63 : uint8_t subMenu_ihpa	=	1;
initSubmenuValue in LcasAction_task.c (Ch_AS4\apps_layer) line 5185 : 	subMenu_ihpa	=	1;
MotorCtrl_task.c (Ch_AS4\apps_layer) line 94 : extern uint8_t subMenu_ihpa;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3679 : if(subMenu_ihpa != Menu) {
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3680 :     dfp("subMenu_ihpa=%d\n",subMenu_ihpa);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3681 :     Menu = subMenu_ihpa;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3685 : 	switch(subMenu_ihpa) {
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3693 : 			++subMenu_ihpa;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3697 : 				++subMenu_ihpa;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3704 : 			else subMenu_ihpa++;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3710 : 			else subMenu_ihpa++;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3716 : 			subMenu_ihpa++;			
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3721 : 				++subMenu_ihpa;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3728 : 			else subMenu_ihpa++;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3734 : 			subMenu_ihpa++;			
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3738 : 				++subMenu_ihpa;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3745 : 			else subMenu_ihpa++;//;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3751 : 			subMenu_ihpa++;			
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3755 : 				++subMenu_ihpa;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3763 : 				subMenu_ihpa++;//;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3767 : 			if(goPosWastePort()) {	subMenu_ihpa++;	}
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3768 : //			if(goPosWashingPort()) {	subMenu_ihpa++;	}
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3774 : 			subMenu_ihpa++;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3778 : 				++subMenu_ihpa;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3786 : 				subMenu_ihpa++;
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3791 : 				subMenu_ihpa = 1;//; 
---- readyChk(MOTOR_X) Matches (35 in 3 files) ----
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 223 : 			if(readyChk(MOTOR_X) &&	readyChk(MOTOR_Y)	&& readyChk(MOTOR_Z) &&	readyChkVal(MOTOR_VAL))	{
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 269 : 			if(readyChk(MOTOR_X) &&	readyChk(MOTOR_Y)	&& readyChk(MOTOR_Z) &&	readyChkVal(MOTOR_VAL))	{
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 684 : 			if(readyChk(MOTOR_X) &&	readyChk(MOTOR_Y)	&& readyChk(MOTOR_Z) && readyChk(MOTOR_SYR))	{
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1183 : 			if(readyChk(MOTOR_X) && readyChk(MOTOR_Y)) {
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2347 : 					if(readyChk(MOTOR_X) &&	readyChk(MOTOR_Y) && readyChk(MOTOR_Z))	{
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3612 : 			if(readyChk(MOTOR_X) &&	readyChk(MOTOR_Y)) {
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 847 : 			if(readyChk(MOTOR_X))	{
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1066 : 			if(readyChk(MOTOR_X))	{
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1824 : 			if(readyChk(MOTOR_X) && readyChk(MOTOR_Y))	{
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1832 : 			if(readyChk(MOTOR_X) && readyChk(MOTOR_Y))	{
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1923 : //      if(readyChk(MOTOR_X) && readyChk(MOTOR_Y)) {
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3083 : 			if(readyChk(MOTOR_X))
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3120 : 			if(readyChk(MOTOR_X)) {	// RESET이후 다시 READY상태 
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3131 : 			if(readyChk(MOTOR_X)) {	// 동작 완료
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3159 : 			if(readyChk(MOTOR_X)) {	// RESET이후 다시 READY상태
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3170 : 			if(readyChk(MOTOR_X)) {	
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3224 : 			if(readyChk(MOTOR_X))
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3255 : 			if(readyChk(MOTOR_X)) {	// RESET이후 다시 READY상태 
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3264 : 			if(readyChk(MOTOR_X)) {	// 동작 완료
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3287 : 			if(readyChk(MOTOR_X)) {	// RESET이후 다시 READY상태
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3296 : 			if(readyChk(MOTOR_X)) {	
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3352 : 			if(readyChk(MOTOR_X))
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3390 : 			if(readyChk(MOTOR_X)) {	// RESET이후 다시 READY상태 
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3401 : 			if(readyChk(MOTOR_X)) {	// 동작 완료
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3428 : 			if(readyChk(MOTOR_X)) { // RESET이후 다시 READY상태
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3739 : 			if(readyChk(MOTOR_X)){
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4104 : 			if(readyChk(MOTOR_X) && readyChk(MOTOR_Y))	{
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1007 : 		      if(readyChk(MOTOR_X))	{
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1014 : 					if(readyChk(MOTOR_X))	{
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1029 : 		      if(readyChk(MOTOR_X))	{
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1036 : 					if(readyChk(MOTOR_X))	{
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1051 : 		      if(readyChk(MOTOR_X))	{
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1057 : 					if(readyChk(MOTOR_X))	{
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1072 : 		      if(readyChk(MOTOR_X))	{
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1078 : 					if(readyChk(MOTOR_X))	{
---- goPosVial_Z Matches (7 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1771 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos)//, uint32_t z_option)
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3943 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3944 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3955 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3956 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3988 : 						if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
MotorCtrl_task.h (Ch_AS4\inc) line 88 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos);//, uint32_t z_option)
---- goPosVial Matches (6 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1153 : // goPosVial -> goZ(vial detect) -> goSyr(uL,speed) -> goZ(top)
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1177 : 			if(goPosVial(pVial)) {
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3607 : 			if(goPosVial(pVial)) {
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1182 : int goPosVial(const VIAL_POS_t *pVial)
MotorCtrl_task.h (Ch_AS4\inc) line 59 : int goPosVial(const VIAL_POS_t *vial);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1746 : //dfp("<<<aspirateSample --- goPosVial>>>!! == devState.btMotorState[MOTOR_Z]=%x\n",devState.btMotorState[MOTOR_Z]);	
---- ENCODER_CHECK_X Matches (2 in 1 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 345 : 	#define ENCODER_CHECK_X				(encoderCountCheck(encoderCount_X,readCount) > ERR_ENCODER_COUNT_X)
Def_stepCon.h (Ch_AS4\common_inc) line 367 : 			if(ENCODER_CHECK_X) {	errorEncoder(MOTOR_X); } \
---- readyChkEncoder_Syr Matches (27 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 417 : // readyChkEncoder_Syr()
Def_stepCon.h (Ch_AS4\common_inc) line 425 : 	#define readyChkEncoder_Syr()	{ \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 236 : 				readyChkEncoder_Syr();
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 292 : 				readyChkEncoder_Syr();		
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 319 : 				readyChkEncoder_Syr();				
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 402 : 				readyChkEncoder_Syr();		
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 430 : 				readyChkEncoder_Syr();				
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 537 : 				readyChkEncoder_Syr();		
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1247 : 				readyChkEncoder_Syr();
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1417 : 										readyChkEncoder_Syr();
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1521 : 						readyChkEncoder_Syr();
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1627 : readyChkEncoder_Syr();					
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1677 : readyChkEncoder_Syr();						
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1774 : 										readyChkEncoder_Syr();						
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1846 : 						readyChkEncoder_Syr(); 	
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1937 : readyChkEncoder_Syr();					
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1967 : readyChkEncoder_Syr();					
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2020 : readyChkEncoder_Syr();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2185 : readyChkEncoder_Syr();						
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2276 : readyChkEncoder_Syr();  					
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2378 : readyChkEncoder_Syr();						
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2427 : readyChkEncoder_Syr();						
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3333 : readyChkEncoder_Syr();
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3600 : readyChkEncoder_Syr();
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3747 : 			readyChkEncoder_Syr();
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3763 : 			readyChkEncoder_Syr();
option_AS.h (Ch_AS4\ryu_inc) line 38 : // readyChkEncoder_Syr()
---- readyChkEncoder_Z Matches (6 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 399 : 	#define readyChkEncoder_Z()	{ \
Def_stepCon.h (Ch_AS4\common_inc) line 407 : 	#define readyChkEncoder_Z()	{ \
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2034 : //readyChkEncoder_Z();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2440 : 						//readyChkEncoder_Z();
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1809 : 				readyChkEncoder_Z();
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1840 : 				readyChkEncoder_Z();			
---- readyChkEncoder_Syr Matches (27 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 417 : // readyChkEncoder_Syr()
Def_stepCon.h (Ch_AS4\common_inc) line 425 : 	#define readyChkEncoder_Syr()	{ \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 236 : 				readyChkEncoder_Syr();
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 292 : 				readyChkEncoder_Syr();		
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 319 : 				readyChkEncoder_Syr();				
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 402 : 				readyChkEncoder_Syr();		
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 430 : 				readyChkEncoder_Syr();				
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 537 : 				readyChkEncoder_Syr();		
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1247 : 				readyChkEncoder_Syr();
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1417 : 										readyChkEncoder_Syr();
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1521 : 						readyChkEncoder_Syr();
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1627 : readyChkEncoder_Syr();					
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1677 : readyChkEncoder_Syr();						
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1774 : 										readyChkEncoder_Syr();						
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1846 : 						readyChkEncoder_Syr(); 	
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1937 : readyChkEncoder_Syr();					
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1967 : readyChkEncoder_Syr();					
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2020 : readyChkEncoder_Syr();
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2185 : readyChkEncoder_Syr();						
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2276 : readyChkEncoder_Syr();  					
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2378 : readyChkEncoder_Syr();						
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2427 : readyChkEncoder_Syr();						
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3333 : readyChkEncoder_Syr();
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3600 : readyChkEncoder_Syr();
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3747 : 			readyChkEncoder_Syr();
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3763 : 			readyChkEncoder_Syr();
option_AS.h (Ch_AS4\ryu_inc) line 38 : // readyChkEncoder_Syr()
---- full_LoopInjection Matches (5 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1364 : int	full_LoopInjection(const VIAL_POS_t	*pVial)
LcasAction_task.h (Ch_AS4\inc) line 58 : int full_LoopInjection(/*int repeat,*/ const VIAL_POS_t *pVial);
main in main.c (Ch_AS4) line 290 : //	pLoop_Injection_Fn = full_LoopInjection;
main in main.c (Ch_AS4) line 318 : 	pLoop_Injection_Fn = full_LoopInjection;
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 1029 : 			pLoop_Injection_Fn = full_LoopInjection;
---- pLoop_Injection_Fn Matches (7 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 4290 : 					if(pLoop_Injection_Fn(&devState.injectVial)) {
LcasAction_task.h (Ch_AS4\inc) line 57 : int (*pLoop_Injection_Fn) (const VIAL_POS_t *pVial); // 함수포인터 선언
main in main.c (Ch_AS4) line 290 : //	pLoop_Injection_Fn = full_LoopInjection;
main in main.c (Ch_AS4) line 318 : 	pLoop_Injection_Fn = full_LoopInjection;
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 1029 : 			pLoop_Injection_Fn = full_LoopInjection;
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 1032 : 			pLoop_Injection_Fn = partial_LoopInjection;			
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 1035 : 			pLoop_Injection_Fn = micro_pick_Injection;
---- injectVial Matches (18 in 4 files) ----
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 422 : 	VIAL_POS_t injectVial;	// 분석해야할 vial - Mix 동작 실행후 : 인젝터에 주입되어야 하는 바이알 
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1917 : dfp(">>>>injectVial=(%d,%d) sample=(%d,%d)\n",LcasState.injectVial.uPos.x,LcasState.injectVial.uPos.y,LcasState.sample.uPos.x,LcasState.sample.uPos.y);													
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1985 : dfp(">>>>>injectVial=(%d,%d) sample=(%d,%d)\n",LcasState.injectVial.uPos.x,LcasState.injectVial.uPos.y,LcasState.sample.uPos.x,LcasState.sample.uPos.y);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3419 : devState.injectVial.pos = devState.sample.pos;
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3425 : devState.injectVial.pos = devState.firstDestVial.pos;
LcasAction_task.c (Ch_AS4\apps_layer) line 4290 : 					if(pLoop_Injection_Fn(&devState.injectVial)) {
LcasAction_task.c (Ch_AS4\apps_layer) line 4298 : 						devState.injectVial.pos = devState.sample.pos;					
initSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 5687 : 	devState.injectVial.pos = sequence.firstSamplePos.pos;
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1479 : 	devState.injectVial.pos = sequence.firstSamplePos.pos;
send_State_Blank in net_AS.c (Ch_AS4\apps_layer) line 4098 : 	LcasState.injectVial.pos = devState.injectVial.pos;
send_State in net_AS.c (Ch_AS4\apps_layer) line 4113 : 	LcasState.injectVial.pos = devState.injectVial.pos;
_LCAS_STATE_t in protocolType_AS.h (Ch_AS4\common_inc) line 557 : 	VIAL_POS_t injectVial;	// 인젝션할 바이알 - mix Program에서 사용
---- CHECK_AS_INIT_POSITION_ENCODER_TEST Matches (6 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 65 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4090 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4102 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
initSubmenuValue in LcasAction_task.c (Ch_AS4\apps_layer) line 5191 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
MotorCtrl_task.c (Ch_AS4\apps_layer) line 95 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
option_AS.h (Ch_AS4\ryu_inc) line 424 : #define CHECK_AS_INIT_POSITION_ENCODER_TEST		1
---- maxSpeed Matches (56 in 3 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 572 : unsigned int maxSpeed[STEP_MOTOR_COUNT]; //
MotorCtrl_task.c (Ch_AS4\apps_layer) line 400 : // maxSpeed <= ACT_SPEED_MAX_X = 149
MotorCtrl_task.c (Ch_AS4\apps_layer) line 401 : // maxSpeed <= ACT_SPEED_MAX_VAL(ACT_SPEED_MAX_INJ) = 255
MotorCtrl_task.c (Ch_AS4\apps_layer) line 529 : // maxSpeed : Speed[7:0]
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 541 : 	uint32_t maxSpeed = Speed & 0x000000ff;
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 575 : 			for(i=minSpeed; i <= maxSpeed ; i++) {
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 599 : //dfp("[%d] tot=%d Acc=%d deacc=%d min=%d max=%d\n",who,totalStep,AccelStep,DeaccStep, minSpeed, maxSpeed);		
MotorCtrl_task.c (Ch_AS4\apps_layer) line 623 : int moveStepSpeed(uint32_t who, uint32_t minSpeed, uint32_t maxSpeed, int32_t tStep)
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 633 : 	// maxSpeed : Speed[7:0]
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 635 : //	uint32_t maxSpeed = (Speed >> 8) & 0x000000ff;
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 701 : 			for(i=minSpeed; i <= maxSpeed ; i++) {
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1282 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1366 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1444 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1513 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1582 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1656 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goZ in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1710 : 	ret = moveStepSpeed(MOTOR_Z, devSet.minSpeed[MOTOR_Z], devSet.maxSpeed[MOTOR_Z], step);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1750 : 	ret = moveStepSpeed(MOTOR_Z, devSet.minSpeed[MOTOR_Z], devSet.maxSpeed[MOTOR_Z], step);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2135 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2170 : 	ret = moveStepSpeed(MOTOR_SYR, minSpeed, maxSpeed, step);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2178 : int goSyr_Encoder(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2215 : 	ret = moveStepSpeed(MOTOR_SYR, minSpeed, maxSpeed, step);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2237 : int goVal(int32_t pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goVal in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2264 : 		return moveStepSpeed(MOTOR_VAL, minSpeed, maxSpeed, step);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2272 : int goVal_Encoder(int32_t pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goVal_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2301 : 		moveStepSpeed(MOTOR_VAL, minSpeed, maxSpeed, step);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2311 : int goInj(int32_t pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goInj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2338 : 		return moveStepSpeed(MOTOR_INJ, minSpeed, maxSpeed, step);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2346 : int goInj_Encoder(int32_t pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option)
goInj_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2375 : 		moveStepSpeed(MOTOR_INJ, minSpeed, maxSpeed, step);
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3811 : 	static unsigned int maxSpeed[6];
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3834 : 				maxSpeed[i] = devSet.maxSpeed[i];
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3835 : 				devSet.maxSpeed[i] = 19;
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3908 : 			devSet.maxSpeed[i] += 10;
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3910 : dprintf("============MaxSpeed = %d %d\n",devSet.maxSpeed[0],devSet.maxSpeed[1]);
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3911 : 		if(devSet.maxSpeed[0] > 149) {	
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3914 : 				devSet.maxSpeed[i] = maxSpeed[i];
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3916 : dprintf("=========org MaxSpeed = %d %d\n",devSet.maxSpeed[0],devSet.maxSpeed[1]);			
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4866 : 	devSet.maxSpeed[MOTOR_X] = ACT_SPEED_MAX_X;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4867 : 	devSet.maxSpeed[MOTOR_Y] = ACT_SPEED_MAX_Y;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4868 : 	devSet.maxSpeed[MOTOR_Z] = ACT_SPEED_MAX_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4869 : 	devSet.maxSpeed[MOTOR_SYR] = ACT_SPEED_MAX_SYR;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4870 : 	devSet.maxSpeed[MOTOR_VAL] = ACT_SPEED_MAX_VAL;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4871 : 	devSet.maxSpeed[MOTOR_INJ] = ACT_SPEED_MAX_INJ;
MotorCtrl_task.h (Ch_AS4\inc) line 53 : int moveStepSpeed(uint32_t who, uint32_t minSpeed, uint32_t maxSpeed, int32_t tStep);
MotorCtrl_task.h (Ch_AS4\inc) line 81 : int goSyr(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 82 : int goVal(int32_t pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 83 : int goInj(int32_t pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 84 : int goSyr_Encoder(float pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 85 : int goVal_Encoder(int32_t pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 86 : int goInj_Encoder(int32_t pos, uint32_t minSpeed, uint32_t maxSpeed, uint32_t option);
---- AS_INIT_Position_Encoder_Check Matches (3 in 3 files) ----
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4104 : 			if(	AS_INIT_Position_Encoder_Check()) {
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3804 : int AS_INIT_Position_Encoder_Check()
MotorCtrl_task.h (Ch_AS4\inc) line 116 : int AS_INIT_Position_Encoder_Check();
---- CHECK_AS_INIT_POSITION_ENCODER_TEST Matches (6 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 65 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4090 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4102 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
initSubmenuValue in LcasAction_task.c (Ch_AS4\apps_layer) line 5191 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
MotorCtrl_task.c (Ch_AS4\apps_layer) line 95 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
option_AS.h (Ch_AS4\ryu_inc) line 424 : #define CHECK_AS_INIT_POSITION_ENCODER_TEST		0
---- AS_INIT_Position_Encoder_Check Matches (3 in 3 files) ----
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4103 : 			if(	AS_INIT_Position_Encoder_Check()) {
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3804 : int AS_INIT_Position_Encoder_Check()
MotorCtrl_task.h (Ch_AS4\inc) line 116 : int AS_INIT_Position_Encoder_Check();
---- CHECK_AS_INIT_POSITION_ENCODER_TEST Matches (6 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 65 : //#if CHECK_AS_INIT_POSITION_ENCODER_TEST
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4089 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4101 : #if CHECK_AS_INIT_POSITION_ENCODER_TEST
initSubmenuValue in LcasAction_task.c (Ch_AS4\apps_layer) line 5190 : //#if CHECK_AS_INIT_POSITION_ENCODER_TEST
MotorCtrl_task.c (Ch_AS4\apps_layer) line 95 : //#if CHECK_AS_INIT_POSITION_ENCODER_TEST
option_AS.h (Ch_AS4\ryu_inc) line 424 : #define CHECK_AS_INIT_POSITION_ENCODER_TEST		0
---- CMD_CHK_DIR_START Matches (14 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 407 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1370 : 		CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1372 : //	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1448 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1586 : 		CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1588 : //	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1660 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1754 : 		CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1756 : 	dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2218 : 		CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2220 : 	printf("==========###### MOTOR_SYR CMD_CHK_DIR_START chk_DirS=%08x cur=%f act=%f step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2106 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2110 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2114 : CMD_CHK_DIR_START(i);
---- SELF_END_SEQUENCE Matches (5 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 4439 : 						send_SelfMessage(SELF_END_SEQUENCE,0);
LcasAction_task.c (Ch_AS4\apps_layer) line 4440 : dfp("<<<SELF_END_SEQUENCE>>>	devState.vialExist = %d\n",devState.vialExist);		
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 4919 : //					send_SelfMessage(SELF_END_SEQUENCE,0);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3285 : 				case SELF_END_SEQUENCE:	//			9		// 시퀀스 동작 수행 완료
protocolType_AS.h (Ch_AS4\common_inc) line 866 : #define SELF_END_SEQUENCE			8		// 시퀀스 동작 수행 완료
---- 99 Matches (50 in 6 files) ----
arch.h (Ch_AS4\lwIP\include\lwip) line 174 : #define  EADDRNOTAVAIL  99  /* Cannot assign requested address */
Def_stepCon.h (Ch_AS4\common_inc) line 190 : 20	99.58	0.034090667
Def_stepCon.h (Ch_AS4\common_inc) line 201 : 99	406.0	0.1687488
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 213 : //		ar2 = sAccel[who][i].ar1 / ACC_INTERVAL + 0.99;	// 자리올림 		
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 214 : 		ar2 = sAccel[i].ar1 / interval + 0.99;	// 자리올림 		
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3842 : 			// Y축-2 X 99 ~ 106	  // O 115 ~ 120
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3844 : 			// X축-1 X 94(소음) ~ 99  128 ~ 
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3845 : 			// X축-2 X 94(Err) ~ 99  116~128(Err - 멈춤 )  130 ~ 139는 이상무 이상하네 - 공진 발생하는 구간에서 토크가 확 떨어진다??
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3990 : 			// Y축-2 X 99 ~ 106	  // O 115 ~ 120
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3992 : 			// X축-1 X 94(소음) ~ 99  128 ~ 
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3993 : 			// X축-2 X 94(Err) ~ 99  116~128(Err - 멈춤 )  130 ~ 139는 이상무 이상하네 - 공진 발생하는 구간에서 토크가 확 떨어진다??
commandStopFn in net_AS.c (Ch_AS4\apps_layer) line 1589 : 	initSpecial(99);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1786 : 				initSpecial(99);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1864 : 						if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_X] >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1877 : 						if(devSet.adjustTmp.value[ADJUST_VALVE_X] >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1885 : 						if(devSet.adjustTmp.value[ADJUST_INJECTOR_X] >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1893 : 						if(devSet.adjustTmp.wash_x >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1901 : 						if(devSet.adjustTmp.waste_x >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1909 : 						if(devSet.adjustTmp.leftVial_x[sysConfig.trayLeft] >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1917 : 						if(devSet.adjustTmp.rightVial_x[sysConfig.trayRight] >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1928 : 						if(devSet.adjustTmp.vialHeight_x >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2015 : 					if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_X] <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2027 : 					if(devSet.adjustTmp.value[ADJUST_VALVE_X] <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2035 : 					if(devSet.adjustTmp.value[ADJUST_INJECTOR_X] <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2043 : 					if(devSet.adjustTmp.wash_x <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2051 : 					if(devSet.adjustTmp.waste_x <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2059 : 					if(devSet.adjustTmp.leftVial_x[sysConfig.trayLeft] <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2067 : 					if(devSet.adjustTmp.rightVial_x[sysConfig.trayRight] <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2078 : 					if(devSet.adjustTmp.vialHeight_x <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2168 : 					if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_Z] <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2176 : 					if(devSet.adjustTmp.value[ADJUST_SYRINGE_Z] <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2187 : 					if(devSet.adjustTmp.vialHeight <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2271 : 					if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_Z] >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2279 : 					if(devSet.adjustTmp.value[ADJUST_SYRINGE_Z] >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2290 : 					if(devSet.adjustTmp.vialHeight >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2374 : 					if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_Y] <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2389 : 					if(devSet.adjustTmp.wash_y <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2397 : 					if(devSet.adjustTmp.waste_y <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2405 : 					if(devSet.adjustTmp.leftVial_y[sysConfig.trayLeft] <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2413 : 					if(devSet.adjustTmp.rightVial_y[sysConfig.trayRight] <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2424 : 					if(devSet.adjustTmp.vialHeight_y <= -99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2498 : 					if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_Y] >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2513 : 					if(devSet.adjustTmp.wash_y >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2521 : 					if(devSet.adjustTmp.waste_y >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2529 : 					if(devSet.adjustTmp.leftVial_y[sysConfig.trayLeft] >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2537 : 					if(devSet.adjustTmp.rightVial_y[sysConfig.trayRight] >= 99) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2548 : 					if(devSet.adjustTmp.vialHeight_y >= 99) {
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1080 : // 10 : 15도=>9.99 : (-255.00) (-103)
_SYSTEM_INFORM_t in protocolType_AS.h (Ch_AS4\common_inc) line 54 : 													// yaer : year(0 ~ 99)
_SYSTEM_INFORM_t in protocolType_AS.h (Ch_AS4\common_inc) line 59 : 												// year : year(0 ~ 99)
---- 99 Matches (17 in 6 files) ----
arch.h (Ch_AS4\lwIP\include\lwip) line 174 : #define  EADDRNOTAVAIL  99  /* Cannot assign requested address */
Def_stepCon.h (Ch_AS4\common_inc) line 190 : 20	99.58	0.034090667
Def_stepCon.h (Ch_AS4\common_inc) line 201 : 99	406.0	0.1687488
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 213 : //		ar2 = sAccel[who][i].ar1 / ACC_INTERVAL + 0.99;	// 자리올림 		
make_StepData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 214 : 		ar2 = sAccel[i].ar1 / interval + 0.99;	// 자리올림 		
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3842 : 			// Y축-2 X 99 ~ 106	  // O 115 ~ 120
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3844 : 			// X축-1 X 94(소음) ~ 99  128 ~ 
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3845 : 			// X축-2 X 94(Err) ~ 99  116~128(Err - 멈춤 )  130 ~ 139는 이상무 이상하네 - 공진 발생하는 구간에서 토크가 확 떨어진다??
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3990 : 			// Y축-2 X 99 ~ 106	  // O 115 ~ 120
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3992 : 			// X축-1 X 94(소음) ~ 99  128 ~ 
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3993 : 			// X축-2 X 94(Err) ~ 99  116~128(Err - 멈춤 )  130 ~ 139는 이상무 이상하네 - 공진 발생하는 구간에서 토크가 확 떨어진다??
commandStopFn in net_AS.c (Ch_AS4\apps_layer) line 1589 : 	initSpecial(99);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1786 : 				initSpecial(99);
net_AS.c (Ch_AS4\apps_layer) line 1838 : #define ADJUST_VALUE_MAX	99
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1080 : // 10 : 15도=>9.99 : (-255.00) (-103)
_SYSTEM_INFORM_t in protocolType_AS.h (Ch_AS4\common_inc) line 54 : 													// yaer : year(0 ~ 99)
_SYSTEM_INFORM_t in protocolType_AS.h (Ch_AS4\common_inc) line 59 : 												// year : year(0 ~ 99)
---- 98 Matches (41 in 7 files) ----
arch.h (Ch_AS4\lwIP\include\lwip) line 173 : #define  EADDRINUSE  98  /* Address already in use */
chpms.h (Ch_AS4\lwIP\netif\ppp) line 30 : * 98-01-30 Guy Lancaster <lancasterg@acm.org>, Global Election Systems Inc.
Def_stepCon.h (Ch_AS4\common_inc) line 200 : 98	402.1	0.167044267
net_AS.c (Ch_AS4\apps_layer) line 1839 : #define ADJUST_VALUE_LIMIT	98
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1943 : 					if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_X] >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1955 : 					if(devSet.adjustTmp.value[ADJUST_VALVE_X] >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1963 : 					if(devSet.adjustTmp.value[ADJUST_INJECTOR_X] >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1971 : 					if(devSet.adjustTmp.wash_x >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1979 : 					if(devSet.adjustTmp.waste_x >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1987 : 					if(devSet.adjustTmp.leftVial_x[sysConfig.trayLeft] >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1995 : 					if(devSet.adjustTmp.rightVial_x[sysConfig.trayRight] >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2006 : 					if(devSet.adjustTmp.vialHeight_x >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2093 : 					if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_X] <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2105 : 					if(devSet.adjustTmp.value[ADJUST_VALVE_X] <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2113 : 					if(devSet.adjustTmp.value[ADJUST_INJECTOR_X] <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2121 : 					if(devSet.adjustTmp.wash_x <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2129 : 					if(devSet.adjustTmp.waste_x <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2137 : 					if(devSet.adjustTmp.leftVial_x[sysConfig.trayLeft] <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2145 : 					if(devSet.adjustTmp.rightVial_x[sysConfig.trayRight] <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2156 : 					if(devSet.adjustTmp.vialHeight_x <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2220 : 					if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_Z] <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2228 : 					if(devSet.adjustTmp.value[ADJUST_SYRINGE_Z] <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2239 : 					if(devSet.adjustTmp.vialHeight <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2326 : 					if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_Z] >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2334 : 					if(devSet.adjustTmp.value[ADJUST_SYRINGE_Z] >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2345 : 					if(devSet.adjustTmp.vialHeight >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2439 : 					if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_Y] <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2454 : 					if(devSet.adjustTmp.wash_y <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2462 : 					if(devSet.adjustTmp.waste_y <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2470 : 					if(devSet.adjustTmp.leftVial_y[sysConfig.trayLeft] <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2478 : 					if(devSet.adjustTmp.rightVial_y[sysConfig.trayRight] <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2489 : 					if(devSet.adjustTmp.vialHeight_y <= -98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2563 : 					if(devSet.adjustTmp.value[ADJUST_INJ_PORT_VALUE_Y] >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2579 : 					if(devSet.adjustTmp.wash_y >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2587 : 					if(devSet.adjustTmp.waste_y >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2595 : 					if(devSet.adjustTmp.leftVial_y[sysConfig.trayLeft] >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2603 : 					if(devSet.adjustTmp.rightVial_y[sysConfig.trayRight] >= 98) {
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2614 : 					if(devSet.adjustTmp.vialHeight_y >= 98) {
pppdebug.h (Ch_AS4\lwIP\netif\ppp) line 31 : * 98-07-29 Guy Lancaster <lancasterg@acm.org>, Global Election Systems Inc.
randm.c (Ch_AS4\lwIP\netif\ppp) line 30 : * 98-06-03 Guy Lancaster <lancasterg@acm.org>, Global Election Systems Inc.
randm.h (Ch_AS4\lwIP\netif\ppp) line 30 : * 98-05-29 Guy Lancaster <glanca@gesn.com>, Global Election Systems Inc.
---- 98 Matches (7 in 7 files) ----
arch.h (Ch_AS4\lwIP\include\lwip) line 173 : #define  EADDRINUSE  98  /* Address already in use */
chpms.h (Ch_AS4\lwIP\netif\ppp) line 30 : * 98-01-30 Guy Lancaster <lancasterg@acm.org>, Global Election Systems Inc.
Def_stepCon.h (Ch_AS4\common_inc) line 200 : 98	402.1	0.167044267
net_AS.c (Ch_AS4\apps_layer) line 1839 : #define ADJUST_VALUE_LIMIT	98
pppdebug.h (Ch_AS4\lwIP\netif\ppp) line 31 : * 98-07-29 Guy Lancaster <lancasterg@acm.org>, Global Election Systems Inc.
randm.c (Ch_AS4\lwIP\netif\ppp) line 30 : * 98-06-03 Guy Lancaster <lancasterg@acm.org>, Global Election Systems Inc.
randm.h (Ch_AS4\lwIP\netif\ppp) line 30 : * 98-05-29 Guy Lancaster <glanca@gesn.com>, Global Election Systems Inc.
---- ADJUST_VALUE_X_MIN Matches (9 in 2 files) ----
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2498 : 			if(devSet.adjust.value[i]	<	ADJUST_VALUE_X_MIN ||	devSet.adjust.value[i] > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2544 : 		if(devSet.adjust.wash_x <	ADJUST_VALUE_X_MIN ||	devSet.adjust.wash_x > ADJUST_VALUE_X_MAX || devSet.adjust.wash_y <	ADJUST_VALUE_Y_MIN ||	devSet.adjust.wash_y > ADJUST_VALUE_Y_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2589 : 		if(devSet.adjust.waste_x <	ADJUST_VALUE_X_MIN ||	devSet.adjust.waste_x > ADJUST_VALUE_X_MAX || devSet.adjust.waste_y <	ADJUST_VALUE_Y_MIN ||	devSet.adjust.waste_y > ADJUST_VALUE_Y_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2636 : 		if(devSet.adjust.vialHeight <	ADJUST_VALUE_X_MIN ||	devSet.adjust.vialHeight > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2679 : 		if(devSet.adjust.vialHeight_x <	ADJUST_VALUE_X_MIN ||	devSet.adjust.vialHeight_x > ADJUST_VALUE_X_MAX || devSet.adjust.vialHeight_y <	ADJUST_VALUE_X_MIN ||	devSet.adjust.vialHeight_y > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2726 : 			if(devSet.adjust.leftVial_x[sysConfig.trayLeft] <	ADJUST_VALUE_X_MIN ||	devSet.adjust.leftVial_y[sysConfig.trayLeft] > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2781 : 		if(devSet.adjust.rightVial_x[sysConfig.trayRight] <	ADJUST_VALUE_X_MIN ||	devSet.adjust.rightVial_y[sysConfig.trayRight] > ADJUST_VALUE_X_MAX) {
protocolType_AS.h (Ch_AS4\common_inc) line 226 : #define	ADJUST_VALUE_X_MIN		-120
---- MICRO_PUMP_POWER_START Matches (2 in 2 files) ----
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 327 : 					PumpConOn(MICRO_PUMP_POWER_START);
protocolType_AS.h (Ch_AS4\common_inc) line 224 : #define MICRO_PUMP_POWER_START			210		// 처음 기동을 위한 시작 전압
---- ADJUST_VALUE_X_MAX Matches (10 in 2 files) ----
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2498 : 			if(devSet.adjust.value[i]	<	ADJUST_VALUE_X_MIN ||	devSet.adjust.value[i] > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2544 : 		if(devSet.adjust.wash_x <	ADJUST_VALUE_X_MIN ||	devSet.adjust.wash_x > ADJUST_VALUE_X_MAX || devSet.adjust.wash_y <	ADJUST_VALUE_Y_MIN ||	devSet.adjust.wash_y > ADJUST_VALUE_Y_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2589 : 		if(devSet.adjust.waste_x <	ADJUST_VALUE_X_MIN ||	devSet.adjust.waste_x > ADJUST_VALUE_X_MAX || devSet.adjust.waste_y <	ADJUST_VALUE_Y_MIN ||	devSet.adjust.waste_y > ADJUST_VALUE_Y_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2636 : 		if(devSet.adjust.vialHeight <	ADJUST_VALUE_X_MIN ||	devSet.adjust.vialHeight > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2679 : 		if(devSet.adjust.vialHeight_x <	ADJUST_VALUE_X_MIN ||	devSet.adjust.vialHeight_x > ADJUST_VALUE_X_MAX || devSet.adjust.vialHeight_y <	ADJUST_VALUE_X_MIN ||	devSet.adjust.vialHeight_y > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2726 : 			if(devSet.adjust.leftVial_x[sysConfig.trayLeft] <	ADJUST_VALUE_X_MIN ||	devSet.adjust.leftVial_y[sysConfig.trayLeft] > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2781 : 		if(devSet.adjust.rightVial_x[sysConfig.trayRight] <	ADJUST_VALUE_X_MIN ||	devSet.adjust.rightVial_y[sysConfig.trayRight] > ADJUST_VALUE_X_MAX) {
protocolType_AS.h (Ch_AS4\common_inc) line 239 : #define	ADJUST_VALUE_X_MAX		120
protocolType_AS.h (Ch_AS4\common_inc) line 259 : #define	ADJUST_VALUE_X_MAX		120
---- ADJUST_VALUE_Z_MIN Matches (2 in 1 files) ----
protocolType_AS.h (Ch_AS4\common_inc) line 243 : #define	ADJUST_VALUE_Z_MIN		-120
protocolType_AS.h (Ch_AS4\common_inc) line 263 : #define	ADJUST_VALUE_Z_MIN		-120
---- ADJUST_VALUE_SYR_MIN Matches (2 in 1 files) ----
protocolType_AS.h (Ch_AS4\common_inc) line 246 : #define	ADJUST_VALUE_SYR_MIN		-120
protocolType_AS.h (Ch_AS4\common_inc) line 266 : #define	ADJUST_VALUE_SYR_MIN		-120
---- ADJUST_VALUE_X_MIN Matches (10 in 2 files) ----
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2498 : 			if(devSet.adjust.value[i]	<	ADJUST_VALUE_X_MIN ||	devSet.adjust.value[i] > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2544 : 		if(devSet.adjust.wash_x <	ADJUST_VALUE_X_MIN ||	devSet.adjust.wash_x > ADJUST_VALUE_X_MAX || devSet.adjust.wash_y <	ADJUST_VALUE_Y_MIN ||	devSet.adjust.wash_y > ADJUST_VALUE_Y_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2589 : 		if(devSet.adjust.waste_x <	ADJUST_VALUE_X_MIN ||	devSet.adjust.waste_x > ADJUST_VALUE_X_MAX || devSet.adjust.waste_y <	ADJUST_VALUE_Y_MIN ||	devSet.adjust.waste_y > ADJUST_VALUE_Y_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2636 : 		if(devSet.adjust.vialHeight <	ADJUST_VALUE_X_MIN ||	devSet.adjust.vialHeight > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2679 : 		if(devSet.adjust.vialHeight_x <	ADJUST_VALUE_X_MIN ||	devSet.adjust.vialHeight_x > ADJUST_VALUE_X_MAX || devSet.adjust.vialHeight_y <	ADJUST_VALUE_X_MIN ||	devSet.adjust.vialHeight_y > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2726 : 			if(devSet.adjust.leftVial_x[sysConfig.trayLeft] <	ADJUST_VALUE_X_MIN ||	devSet.adjust.leftVial_y[sysConfig.trayLeft] > ADJUST_VALUE_X_MAX) {
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2781 : 		if(devSet.adjust.rightVial_x[sysConfig.trayRight] <	ADJUST_VALUE_X_MIN ||	devSet.adjust.rightVial_y[sysConfig.trayRight] > ADJUST_VALUE_X_MAX) {
protocolType_AS.h (Ch_AS4\common_inc) line 238 : #define	ADJUST_VALUE_X_MIN		-ADJUST_VALUE_MAX
protocolType_AS.h (Ch_AS4\common_inc) line 259 : #define	ADJUST_VALUE_X_MIN		-120
---- goPosVial_Z Matches (7 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1771 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos)//, uint32_t z_option)
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4208 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4209 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4220 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4221 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4253 : 						if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
MotorCtrl_task.h (Ch_AS4\inc) line 88 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos);//, uint32_t z_option)
---- goPosVial_Z Matches (7 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1771 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos)//, uint32_t z_option)
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4208 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4209 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4220 : //					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4221 : 					if(goPosVial_Z(&Vial,POS_Z_VIAL_RIGHT_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4253 : 						if(goPosVial_Z(&Vial,POS_Z_VIAL_LEFT_ADJUST)) {
MotorCtrl_task.h (Ch_AS4\inc) line 88 : int goPosVial_Z(const VIAL_POS_t *pVial, int32_t z_pos);//, uint32_t z_option)
---- errFunction Matches (4 in 3 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 19 : #define errorFunction(X)			{ iprintf( "[%s %d]",__FUNCTION__,__LINE__); errFunction(X); }
debug_inform.h (Ch_AS4\ryu_inc) line 43 : #define errorFunction(X)			{ errFunction(X); }
LcasAction_task.c (Ch_AS4\apps_layer) line 3962 : int	errFunction(unsigned char	err)
LcasAction_task.h (Ch_AS4\inc) line 84 : int errFunction(unsigned char err);
---- errorFunction Matches (103 in 9 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 19 : #define errorFunction(X)			{ iprintf( "[%s %d]",__FUNCTION__,__LINE__); errFunction(X); }
debug_inform.h (Ch_AS4\ryu_inc) line 43 : #define errorFunction(X)			{ errFunction(X); }
Def_stepCon.h (Ch_AS4\common_inc) line 353 : 	#define errorEncoder(WHO)			errorFunction(SELF_ERROR_ENCODER_COUNT + WHO)
Def_stepCon.h (Ch_AS4\common_inc) line 355 : 	#define errorEncoder_X()			errorFunction(SELF_ERROR_ENCODER_COUNT_X)
Def_stepCon.h (Ch_AS4\common_inc) line 356 : 	#define errorEncoder_Y()			errorFunction(SELF_ERROR_ENCODER_COUNT_Y)
Def_stepCon.h (Ch_AS4\common_inc) line 357 : 	#define errorEncoder_Z()			errorFunction(SELF_ERROR_ENCODER_COUNT_Z)
Def_stepCon.h (Ch_AS4\common_inc) line 358 : 	#define errorEncoder_SYR()			errorFunction(SELF_ERROR_ENCODER_COUNT_SYR)
Def_stepCon.h (Ch_AS4\common_inc) line 359 : 	#define errorEncoder_VAL()			errorFunction(SELF_ERROR_ENCODER_COUNT_VAL)
Def_stepCon.h (Ch_AS4\common_inc) line 360 : 	#define errorEncoder_INJ()			errorFunction(SELF_ERROR_ENCODER_COUNT_INJ)
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1466 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1474 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1489 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1538 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1547 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1562 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1796 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1804 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1816 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1862 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1870 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1882 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2222 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2231 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2242 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2290 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2298 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2310 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2869 : 			if(devState.connected) errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3351 : 								errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3371 : 								errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3385 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3450 : errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3457 : 								errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3466 : 								errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3649 : errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3657 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3670 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
LcasAction_task.c (Ch_AS4\apps_layer) line 3961 : //int	errorFunction(unsigned char	err)
errFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 3964 : dfpErr("errorFunction=%d\n",err);
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4083 : 				errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
LcasAction_task.c (Ch_AS4\apps_layer) line 6308 : 				errorFunction(SELF_ERROR_DOOR_OPEN);
LcasAction_task.c (Ch_AS4\apps_layer) line 6332 : 				errorFunction(SELF_ERROR_LEAK);  //					sendMsg
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6397 : 				errorFunction(SELF_ERROR_DOOR_OPEN);
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6420 : 				errorFunction(SELF_ERROR_LEAK);  //					sendMsg
LcasAction_task.h (Ch_AS4\inc) line 83 : //int errorFunction(unsigned char err);
main in main.c (Ch_AS4) line 551 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Z);
main in main.c (Ch_AS4) line 558 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_X);
main in main.c (Ch_AS4) line 564 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Y);
main in main.c (Ch_AS4) line 571 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_SYR);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1155 : 							errorFunction(SELF_ERROR_HOME_CHK_Z);
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1288 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1386 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1464 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1519 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1602 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1674 : 		errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2016 : 											errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2108 : 	      		errorFunction(SELF_ERROR_POSITION_Z);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2533 : 		errorFunction(SELF_ERROR_HOME_CHK_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2673 : 		errorFunction(SELF_ERROR_HOME_CHK_INJ);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2817 : 		errorFunction(SELF_ERROR_HOME_CHK_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2845 : 					errorFunction(SELF_ERROR_HOME_CHK_SYR);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2937 : 		errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3026 : 						errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3079 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3177 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3220 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3303 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3348 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3466 : 		errorFunction(SELF_ERROR_HOME_CHK_Y);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3549 : 						errorFunction(SELF_ERROR_HOME_CHK_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3589 : 		errorFunction(SELF_ERROR_HOME_CHK_Y);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5224 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Z);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5230 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_X);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5235 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Y);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5240 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_SYR);
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5342 : 		errorFunction(SELF_ERROR_POSITION_XY);
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 196 : 			errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
net_SystemConfig in net_AS.c (Ch_AS4\apps_layer) line 533 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 949 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 981 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 991 : 					errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 1000 : 					errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1060 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1070 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1240 : 		errorFunction(err);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1455 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1627 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1814 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2945 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3372 : 						errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3629 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3711 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3714 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3730 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3734 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3753 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3764 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3769 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3780 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3984 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
tcp_server.h (Ch_AS4\inc) line 168 : int	errorFunction(unsigned char	err);
netBoardCmd in testPrgm.c (Ch_AS4\apps_layer) line 2135 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
---- errorEncoder_X Matches (1 in 1 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 355 : 	#define errorEncoder_X()			errorFunction(SELF_ERROR_ENCODER_COUNT_X)
---- errorEncoder_Y Matches (1 in 1 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 356 : 	#define errorEncoder_Y()			errorFunction(SELF_ERROR_ENCODER_COUNT_Y)
---- errorEncoder_Z Matches (1 in 1 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 357 : 	#define errorEncoder_Z()			errorFunction(SELF_ERROR_ENCODER_COUNT_Z)
---- errorEncoder_INJ Matches (1 in 1 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 360 : 	#define errorEncoder_INJ()			errorFunction(SELF_ERROR_ENCODER_COUNT_INJ)
---- errorEncoder Matches (14 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 353 : 	#define errorEncoder(WHO)			errorFunction(SELF_ERROR_ENCODER_COUNT + WHO)
Def_stepCon.h (Ch_AS4\common_inc) line 368 : 			if(ENCODER_CHECK_X) {	errorEncoder(MOTOR_X); } \
Def_stepCon.h (Ch_AS4\common_inc) line 376 : 		if(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_X) {	errorEncoder(MOTOR_X); } \
Def_stepCon.h (Ch_AS4\common_inc) line 386 : 			if(ENCODER_CHECK_Y) {	errorEncoder(MOTOR_Y); } \
Def_stepCon.h (Ch_AS4\common_inc) line 394 : 		if(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_Y) {	errorEncoder(MOTOR_Y); } \							
Def_stepCon.h (Ch_AS4\common_inc) line 404 : 			if(ENCODER_CHECK_Z) {	errorEncoder(MOTOR_Z); } \
Def_stepCon.h (Ch_AS4\common_inc) line 412 : 		if(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_Z) {	errorEncoder(MOTOR_Z); } \				
Def_stepCon.h (Ch_AS4\common_inc) line 430 : 			if(ENCODER_CHECK_SYR) {	errorEncoder(MOTOR_SYR); } \
Def_stepCon.h (Ch_AS4\common_inc) line 439 : 			if(readCount < ERR_ENCODER_COUNT_VAL)	{	errorEncoder(MOTOR_VAL);} \
Def_stepCon.h (Ch_AS4\common_inc) line 449 : 			if(readCount < ERR_ENCODER_COUNT_INJ) {	errorEncoder(MOTOR_INJ);} \
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 853 : 						errorEncoder(MOTOR_X);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 913 : 						errorEncoder(MOTOR_Y);
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 968 : 						errorEncoder(MOTOR_Z);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1154 : //							errorEncoder(MOTOR_Z);
---- errorEncoder_X Matches (1 in 1 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 355 : 	#define errorEncoder_X()			errorFunction(SELF_ERROR_ENCODER_COUNT_X)
---- error Matches (342 in 64 files) ----
netconn in api.h (Ch_AS4\lwIP\include\lwip) line 121 :   /** the last error this netconn had */
api_lib.c (Ch_AS4\lwIP\api) line 65 :  *         NULL on memory error
netconn_delete in api_lib.c (Ch_AS4\lwIP\api) line 107 :   /* No ASSERT here because possible to get a (conn == NULL) if we got an accept error */
api_lib.c (Ch_AS4\lwIP\api) line 226 :  *         don't return any error (yet?))
api_lib.c (Ch_AS4\lwIP\api) line 290 :  * @return a new netbuf containing received data or NULL on memory error or timeout
netconn_recv in api_lib.c (Ch_AS4\lwIP\api) line 351 :       /* Avoid to lose any previous error code */
api_lib.c (Ch_AS4\lwIP\api) line 403 :  * @return ERR_OK if data was sent, any other err_t on error
api_lib.c (Ch_AS4\lwIP\api) line 421 :  * @return ERR_OK if data was sent, any other err_t on error
api_lib.c (Ch_AS4\lwIP\api) line 447 :  * @return ERR_OK if data was sent, any other err_t on error
api_lib.c (Ch_AS4\lwIP\api) line 473 :  * @return ERR_OK if the netconn was closed, any other err_t on error
api_lib.c (Ch_AS4\lwIP\api) line 497 :  * @return ERR_OK if the action was taken, any err_t on error
api_lib.c (Ch_AS4\lwIP\api) line 526 :  *         ERR_MEM: memory error, try again later
api_msg.c (Ch_AS4\lwIP\api) line 131 :  * Posts the packet to conn->recvmbox or deletes it on memory error.
do_newconn in api_msg.c (Ch_AS4\lwIP\api) line 476 :    /* Is this an error condition? Should it be deleted? */
api_msg.c (Ch_AS4\lwIP\api) line 490 :  *         NULL on memory error
do_writemore in api_msg.c (Ch_AS4\lwIP\api) line 1021 :        only a temporary error! */
do_writemore in api_msg.c (Ch_AS4\lwIP\api) line 1031 :        the error to the application thread. */
do_getaddr in api_msg.c (Ch_AS4\lwIP\api) line 1115 :         /* return an error as connecting is only a helper for upper layers */
do_dns_found in api_msg.c (Ch_AS4\lwIP\api) line 1212 :     /* timeout or memory error */
do_gethostbyname in api_msg.c (Ch_AS4\lwIP\api) line 1236 :     /* on error or immediate success, wake up the application
arch.h (Ch_AS4\lwIP\include\lwip) line 78 : #define  EIO     5  /* I/O error */
arch.h (Ch_AS4\lwIP\include\lwip) line 81 : #define  ENOEXEC     8  /* Exec format error */
arch.h (Ch_AS4\lwIP\include\lwip) line 143 : #define  EADV    68  /* Advertise error */
arch.h (Ch_AS4\lwIP\include\lwip) line 144 : #define  ESRMNT    69  /* Srmount error */
arch.h (Ch_AS4\lwIP\include\lwip) line 145 : #define  ECOMM    70  /* Communication error on send */
arch.h (Ch_AS4\lwIP\include\lwip) line 146 : #define  EPROTO    71  /* Protocol error */
arch.h (Ch_AS4\lwIP\include\lwip) line 148 : #define  EDOTDOT    73  /* RFS specific error */
arch.h (Ch_AS4\lwIP\include\lwip) line 161 : #define  ESTRPIPE  86  /* Streams pipe error */
arch.h (Ch_AS4\lwIP\include\lwip) line 196 : #define  EREMOTEIO  121  /* Remote I/O error */
debug-in-microsemi-smartfusion2-envm.ld (Ch_AS4\firmware\CMSIS\startup_gcc) line 200 :     . += MIN_SIZE_HEAP;         /* will generate error if this minimum size not available */
debug-in-microsemi-smartfusion2-esram.ld (Ch_AS4\firmware\CMSIS\startup_gcc) line 199 :     . += MIN_SIZE_HEAP;         /* will generate error if this minimum size not available */
debug-in-microsemi-smartfusion2-external-ram.ld (Ch_AS4\firmware\CMSIS\startup_gcc) line 187 :     . += MIN_SIZE_HEAP;         /* will generate error if this minimum size not available */
dhcp.c (Ch_AS4\lwIP\core) line 245 :  * @return lwIP specific error (see error.h)
dhcp.c (Ch_AS4\lwIP\core) line 578 :  * @return lwIP error code
dhcp.c (Ch_AS4\lwIP\core) line 579 :  * - ERR_OK - No error
dns_init_local in dns.c (Ch_AS4\lwIP\core) line 342 :     LWIP_ASSERT("mem-error in dns_init_local", entry != NULL);
dns.c (Ch_AS4\lwIP\core) line 425 :  * @return ERR_OK if succeeded or ERR_MEM on memory error
dns_recv in dns.c (Ch_AS4\lwIP\core) line 769 :     LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: mem_malloc error\n"));
dns_recv in dns.c (Ch_AS4\lwIP\core) line 792 :         /* Check for error. If so, call callback to inform. */
dns_recv in dns.c (Ch_AS4\lwIP\core) line 794 :           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": error in flags\n", pEntry->name));
dns_recv in dns.c (Ch_AS4\lwIP\core) line 795 :           /* call callback to indicate error, clean up memory and return */
dns_recv in dns.c (Ch_AS4\lwIP\core) line 803 :           /* call callback to indicate error, clean up memory and return */
dns_recv in dns.c (Ch_AS4\lwIP\core) line 839 :         LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": error in response\n", pEntry->name));
dns_recv in dns.c (Ch_AS4\lwIP\core) line 840 :         /* call callback to indicate error, clean up memory and return */
dns_recv in dns.c (Ch_AS4\lwIP\core) line 850 :   /* ERROR: call specified callback function with NULL as name to indicate an error */
dns.h (Ch_AS4\lwIP\include\lwip) line 73 :  *        or NULL if the name could not be found (or on any other error).
err.c (Ch_AS4\lwIP\api) line 45 :            "Out of memory error.",   /* ERR_MEM        -1  */
err.c (Ch_AS4\lwIP\api) line 46 :            "Buffer error.",          /* ERR_BUF        -2  */
err.c (Ch_AS4\lwIP\api) line 56 :            "Low-level netif error.", /* ERR_IF         -12 */
err.c (Ch_AS4\lwIP\api) line 62 :  * Convert an lwip internal error to a string representation.
err.h (Ch_AS4\lwIP\include\lwip) line 50 : /* Definitions for error constants. */
err.h (Ch_AS4\lwIP\include\lwip) line 52 : #define ERR_OK          0    /* No error, everything OK. */
err.h (Ch_AS4\lwIP\include\lwip) line 53 : #define ERR_MEM        -1    /* Out of memory error.     */
err.h (Ch_AS4\lwIP\include\lwip) line 54 : #define ERR_BUF        -2    /* Buffer error.            */
err.h (Ch_AS4\lwIP\include\lwip) line 71 : #define ERR_IF         -12   /* Low-level netif error    */
etharp.c (Ch_AS4\lwIP\netif) line 133 :   #error "If you want to use ARP, ARP_TABLE_SIZE must fit in an s8_t, so, you have to reduce it in your lwipopts.h"
etharp_output in etharp.c (Ch_AS4\lwIP\netif) line 847 :         /* no route to destination error (default gateway missing) */
ethernetif.c (Ch_AS4\lwIP\netif) line 158 :  *         NULL on memory error
ethernetif.c (Ch_AS4\lwIP\netif) line 249 :      { LWIP_DEBUGF(NETIF_DEBUG, ("ethernetif_input: IP input error\n"));
ethernetif.c (Ch_AS4\lwIP\netif) line 272 :  *         any other err_t on error
fsm.c (Ch_AS4\lwIP\netif\ppp) line 442 :  * Treat this as a catastrophic error (RXJ-).
icmp_input in icmp.c (Ch_AS4\lwIP\core\ipv4) line 219 :         LWIP_DEBUGF(ICMP_DEBUG, ("icmp_input: ip_output_if returned an error: %c.\n", ret));
igmp.c (Ch_AS4\lwIP\core\ipv4) line 268 :  *         NULL on memory error.
igmp_input in igmp.c (Ch_AS4\lwIP\core\ipv4) line 356 :     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: length error\n"));
igmp_input in igmp.c (Ch_AS4\lwIP\core\ipv4) line 371 :     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: checksum error\n"));
igmp_joingroup in igmp.c (Ch_AS4\lwIP\core\ipv4) line 509 :         /* Return an error even if some network interfaces are joined */
igmp_leavegroup in igmp.c (Ch_AS4\lwIP\core\ipv4) line 584 :         /* It's not a fatal error on "leavegroup" */
init.c (Ch_AS4\lwIP\core) line 63 :   #error "BYTE_ORDER is not defined, you have to define it in your cc.h"
init.c (Ch_AS4\lwIP\core) line 66 :   #error "If you want to use broadcast filter per pcb on recv operations, you have to define IP_SOF_BROADCAST=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 69 :   #error "If you want to use ARP Queueing, you have to define LWIP_ARP=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 72 :   #error "If you want to use UDP Lite, you have to define LWIP_UDP=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 75 :   #error "If you want to use SNMP, you have to define LWIP_UDP=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 78 :   #error "If you want to use DHCP, you have to define LWIP_UDP=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 81 :   #error "If you want to use IGMP, you have to define LWIP_UDP=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 84 :   #error "If you want to use DNS, you have to define LWIP_UDP=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 87 :   #error "If you want to use ARP, ARP_TABLE_SIZE must fit in an s8_t, so, you have to reduce it in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 90 :   #error "If you want to use ARP Queueing, you have to define MEMP_NUM_ARP_QUEUE>=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 93 :   #error "If you want to use RAW, you have to define MEMP_NUM_RAW_PCB>=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 96 :   #error "If you want to use UDP, you have to define MEMP_NUM_UDP_PCB>=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 99 :   #error "If you want to use TCP, you have to define MEMP_NUM_TCP_PCB>=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 102 :   #error "If you want to use TCP, TCP_WND must fit in an u16_t, so, you have to reduce it in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 105 :   #error "If you want to use TCP, TCP_SND_QUEUELEN must fit in an u16_t, so, you have to reduce it in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 108 :   #error "If you want to use TCP, TCP_MAXRTX and TCP_SYNMAXRTX must less or equal to 12 (due to tcp_backoff table), so, you have to reduce them in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 111 :   #error "If you want to use TCP backlog, TCP_DEFAULT_LISTEN_BACKLOG must fit into an u8_t"
init.c (Ch_AS4\lwIP\core) line 114 :   #error "If you want to use IGMP, you have to define MEMP_NUM_IGMP_GROUP>1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 117 :   #error "If you want to use PPP, you have to define NO_SYS=0 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 120 :   #error "If you want to use NETIF API, you have to define NO_SYS=0 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 123 :   #error "If you want to use Sequential API, you have to define NO_SYS=0 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 126 :   #error "If you want to use Sequential API, you have to define MEMP_NUM_TCPIP_MSG_API>=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 129 :   #error "If you want to use Socket API, you have to define LWIP_NETCONN=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 132 :   #error "If you want to use DHCP/AUTOIP cooperation mode, you have to define LWIP_DHCP=1 and LWIP_AUTOIP=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 135 :   #error "If you want to use DHCP ARP checking, you have to define LWIP_DHCP=1 and LWIP_ARP=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 138 :   #error "If you want to use AUTOIP, you have to define LWIP_ARP=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 141 :   #error "If you want to use SNMP, you have to define SNMP_CONCURRENT_REQUESTS>=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 144 :   #error "If you want to use SNMP, you have to define SNMP_TRAP_DESTINATIONS>=1 in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 147 :   #error "One and exactly one of LWIP_EVENT_API and LWIP_CALLBACK_API has to be enabled in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 151 :   #error "MEMP_NUM_SYS_TIMEOUT is too low to accomodate all required timeouts"
init.c (Ch_AS4\lwIP\core) line 154 :   #error "MEMP_NUM_REASSDATA > IP_REASS_MAX_PBUFS doesn't make sense since each struct ip_reassdata must hold 2 pbufs at least!"
init.c (Ch_AS4\lwIP\core) line 157 :   #error "MEM_LIBC_MALLOC and MEM_USE_POOLS may not both be simultaneously enabled in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 160 :   #error "MEM_USE_POOLS requires custom pools (MEMP_USE_CUSTOM_POOLS) to be enabled in your lwipopts.h"
init.c (Ch_AS4\lwIP\core) line 163 :   #error "PBUF_POOL_BUFSIZE must be greater than MEM_ALIGNMENT or the offset may take the full first pbuf"
init.c (Ch_AS4\lwIP\core) line 166 :   #error "TCP_QUEUE_OOSEQ requires LWIP_TCP"
init.c (Ch_AS4\lwIP\core) line 169 :   #error "you have to define define DNS_LOCAL_HOSTLIST_INIT {{'host1', 0x123}, {'host2', 0x234}} to initialize DNS_LOCAL_HOSTLIST"
init.c (Ch_AS4\lwIP\core) line 172 :   #error "PPP_SUPPORT needs either PPPOS_SUPPORT or PPPOE_SUPPORT turned on"
init.c (Ch_AS4\lwIP\core) line 179 :   #error "MEMP_NUM_TCPIP_MSG option is deprecated. Remove it from your lwipopts.h."
init.c (Ch_AS4\lwIP\core) line 182 :   #error "MEMP_NUM_API_MSG option is deprecated. Remove it from your lwipopts.h."
init.c (Ch_AS4\lwIP\core) line 185 :   #error "TCP_REXMIT_DEBUG option is deprecated. Remove it from your lwipopts.h."
init.c (Ch_AS4\lwIP\core) line 188 :   #error "RAW_STATS option is deprecated. Remove it from your lwipopts.h."
init.c (Ch_AS4\lwIP\core) line 191 :   #error "ETHARP_QUEUE_FIRST option is deprecated. Remove it from your lwipopts.h."
init.c (Ch_AS4\lwIP\core) line 194 :   #error "ETHARP_ALWAYS_INSERT option is deprecated. Remove it from your lwipopts.h."
init.c (Ch_AS4\lwIP\core) line 199 :   #error "SO_REUSE currently unavailable, this was a hack"
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 996 : 			else { /* error */}
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1001 : 			else { /* error */}
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1006 : 			else { /* error */}
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1011 : 			else { /* error */}				
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1016 : 			else { /* error */}		
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1072 : 			else { /* error */}
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1077 : 			else { /* error */}
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1082 : 			else { /* error */}
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1087 : 			else { /* error */}				
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1092 : 			else { /* error */}		
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1162 : 	static int error = NO;
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1215 : 							error = ACTION_MENU_ERR_VIAL;
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1263 : 				dfp("<<<aspirateSample --- error = %d \n",error);																			
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1264 : 				if(error == ACTION_MENU_ERR_VIAL) {
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1266 : 					error = NO;
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3112 : 		else { /* error */}
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3117 : 		else { /* error */}
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3122 : 		else { /* error */}
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3127 : 		else { /* error */}						
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3132 : 		else { /* error */}						
mix_ProgramNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3179 : // error
LcasAction_task.c (Ch_AS4\apps_layer) line 6287 : 	if(special.Door_check == ON /*&& LcasState.state == STATE_RUN*/) {	 // 2 - High : error : open
LcasAction_task.c (Ch_AS4\apps_layer) line 6316 : 	if(special.Leak_check == ON) {	// 5 - low : error : leak
LcasAction_task.c (Ch_AS4\apps_layer) line 6374 : void CheckDeviceState()		// error Check
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6406 : 	if(special.Leak_check == ON) {	// 5 - low : error : leak
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 64 :   CommSwitchError_IR              = 24,       /*!< Communications Switch error interrupt                */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 65 :   CacheError_IRQn                 = 25,       /*!< Cache error interrupt                                */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 68 :   HPDMA_Error_IRQn                = 28,       /*!< High speed DMA transfer error interrupt              */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 69 :   ECC_Error_IRQn                  = 29,       /*!< ECC error detected                                   */
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 1858 :       Clock count for error counter decrement
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2358 :       PRBS error counter register (RO)
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2478 :       PRBS first error cycle counter bits [7:0]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2483 :       PRBS first error cycle counter bits [15:8]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2488 :       PRBS first error cycle counter bits [23:16]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2493 :       PRBS first error cycle counter bits [31:24]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2498 :       PRBS first error cycle counter bits [39:32]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2503 :       PRBS first error cycle counter bits [47:40]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2508 :       PRBS first error cycle counter bits [49:48]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2518 :       PRBS last error cycle counter bits [7:0]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2523 :       PRBS last error cycle counter bits [15:8]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2528 :       PRBS last error cycle counter bits [23:16]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2533 :       PRBS last error cycle counter bits [31:24]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2538 :       PRBS last error cycle counter bits [39:32]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2543 :       PRBS last error cycle counter bits [47:40]
{anonSERDES_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2548 :       PRBS last error cycle counter bits [49:48]
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 269 :  *         any other err_t on error
ethernetif_input in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 672 :         { /* LWIP_DEBUGF(NETIF_DEBUG, ("ethernetif_input: IP input error\n")); */
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 692 :  *         NULL on memory error
mem_malloc in mem.c (Ch_AS4\lwIP\core) line 100 :     /* No need to DEBUGF or ASSERT: This error is already
mem.c (Ch_AS4\lwIP\core) line 618 :  * @return pointer to allocated memory / NULL pointer if there is an error
memp.c (Ch_AS4\lwIP\core) line 303 :  * @return a pointer to the allocated memory or a NULL pointer on error
memp_std.h (Ch_AS4\lwIP\include\lwip) line 97 :  * REQUIRED CLEANUP: Clear up so we don't get "multiply defined" error later
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 851 : 				else { // error
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 911 : 				else { // error
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 937 : //	static int error = NO;
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 966 : 				else { // error
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1773 : 	static int error = NO;
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1856 : 	static int error = NO;
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1956 : 	static int error = NO;
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2065 : 						subMenu_gpezc++;	// error - 대기후 다시 검사
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2844 : 					// error
msg_in.c (Ch_AS4\lwIP\core\snmp) line 97 : snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)
snmp_error_response in msg_in.c (Ch_AS4\lwIP\core\snmp) line 104 :   msg_ps->error_status = error;
snmp_recv in msg_in.c (Ch_AS4\lwIP\core\snmp) line 848 :         /* Only accept requests and requests without error (be robust) */
snmp_recv in msg_in.c (Ch_AS4\lwIP\core\snmp) line 853 :         /* Reject response and trap headers or error requests as input! */
snmp_recv in msg_in.c (Ch_AS4\lwIP\core\snmp) line 883 :              drop request silently, do not return error!
snmp_recv in msg_in.c (Ch_AS4\lwIP\core\snmp) line 892 :            drop request silently, do not return error! */
snmp_pdu_header_check in msg_in.c (Ch_AS4\lwIP\core\snmp) line 1031 :     /* unsupported input PDU for this agent (no parse error) */
snmp_pdu_header_check in msg_in.c (Ch_AS4\lwIP\core\snmp) line 1062 :     /* can't decode or no integer (error-status) */
snmp_pdu_header_check in msg_in.c (Ch_AS4\lwIP\core\snmp) line 1098 :     /* can't decode or no integer (error-index) */
msg_out.c (Ch_AS4\lwIP\core\snmp) line 110 :  * and provide error-status and index (except for tooBig errors) ...
snmp_send_response in msg_out.c (Ch_AS4\lwIP\core\snmp) line 130 :     /* can't construct reply, return error-status tooBig */
snmp_send_response in msg_out.c (Ch_AS4\lwIP\core\snmp) line 146 :     /* pass 1, size error, encode packet ino the pbuf(s) */
mss_assert.h (Ch_AS4\firmware\CMSIS) line 40 :  * Call C library assert function which should result in error message
mss_assert.h (Ch_AS4\firmware\CMSIS) line 48 :  * Call C library assert function which should result in error message
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 617 :      * Configure MAC FIFOs error detection and correction (EDAC)
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 776 :     /* Drop junk frames (Frames suffered CRC error or short collision) */
MSS_MAC_receive_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1024 :            made zero by RX overflow or RX bus error. In either case, this
MSS_MAC_receive_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1045 :            is no new RX bus error */
MSS_MAC_send_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1113 :             stopped transmission by itself caused by TX underrun or bus error.
MSS_MAC_send_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1136 :            there is no TX bus error */
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 240 : /* FIFO error detection & correction enable / disable */
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 69 :     The tx_edc_enable parameter specifies enable or disable error detection and
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 78 :     The rx_edc_enable parameter specifies enable or disable error detection and
{anonmss_mac_cfg_t} in mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 325 :     uint8_t tx_edc_enable;              /* Enable / disable error detection and correction for tx FIFOs */
{anonmss_mac_cfg_t} in mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 326 :     uint8_t rx_edc_enable;              /* Enable / disable error detection and correction for rx FIFOs */
mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 304 :   Generate error code based on NVM status value.
mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 610 :   In case of error, return the content of the eNVM controller status register
check_protection_reserved_nvm in mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 1006 :             /* Status is protection error if lower or upper area of eNVM is protected */
check_protection_reserved_nvm in mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 1025 :                      * Status is protection error if the offset or (offset + length) is 
check_protection_reserved_nvm in mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 1101 :             /* Status is protection error if lower or upper area of eNVM is protected */
check_protection_reserved_nvm in mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 1119 :                      * Status is protection error if the offset or (offset + length) is 
check_protection_reserved_nvm in mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 1189 :             /* Status is protection error if lower0 or upper1 area of eNVM is protected */
check_protection_reserved_nvm in mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 1208 :                      * Status is protection error if the offset or (offset + length) is 
check_protection_reserved_nvm in mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 1318 :            /* Status is protection error if lower or upper area of eNVM0 or 
check_protection_reserved_nvm in mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 1339 :                      * Status is protection error if the offset or (offset + length) is 
verify_nvm in mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 1460 :             /* Signal that an error occured by returning 0 a a number of bytes written. */
mss_nvm.c (Ch_AS4\firmware\drivers\mss_nvm) line 1526 :   In case of error, return the content of the eNVM controller status register
mss_nvm.h (Ch_AS4\firmware\drivers\mss_nvm) line 89 :       protection error. This happens when attempting to program a page that was
mss_nvm.h (Ch_AS4\firmware\drivers\mss_nvm) line 178 :     following error codes if the programming of the eNVM fails:
mss_nvm.h (Ch_AS4\firmware\drivers\mss_nvm) line 202 : #define MSS_NVM_ECC2                (1u<<8)     /* NVM 2-bit error occurred */
mss_nvm.h (Ch_AS4\firmware\drivers\mss_nvm) line 223 :     execution. It returns one of the following error codes if the unlocking of the eNVM
netbuf.c (Ch_AS4\lwIP\api) line 185 :  *         ERR_BUF on error.
netdb.c (Ch_AS4\lwIP\api) line 152 :  *               and set to zero on error
netdb.c (Ch_AS4\lwIP\api) line 155 :  * @return 0 on success, non-zero on error, additional error information
netdb.h (Ch_AS4\lwIP\include\lwip) line 89 : /* application accessable error code set by the DNS API functions */
net_AS.c (Ch_AS4\apps_layer) line 71 :   * @param  err	the error value linked with the received data
net_AS.c (Ch_AS4\apps_layer) line 72 :   * @retval error value
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 983 : dprintf("error INJ_MODE_PARTIAL_LOOP -injectionVolume %f \n",tmp.injectionVolume);				
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 993 : dprintf("error INJ_MODE_PARTIAL_LOOP -injectionVolume %f \n",tmp.injectionVolume);			
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 1002 : dprintf("error INJ_MODE_PARTIAL_LOOP -injectionVolume %f \n",tmp.injectionVolume);			
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1175 : 	{	// error
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1234 : dprintf("--error tmp.mixTable[i].action = %d\n",action);			
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1454 : 		) {	// error
phy.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 43 : #define MII_RERRCOUNTER         0x15u       /* Receive error counter       */
phy.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 46 : #define MII_LBRERROR            0x18u       /* Lpback, rx, bypass error    */
PID_Control_AS.c (Ch_AS4\apps_layer) line 217 : 			/* Transfer error in transmission process */
ppp.c (Ch_AS4\lwIP\netif\ppp) line 484 :  * an error code (negative) on failure. */
ppp.c (Ch_AS4\lwIP\netif\ppp) line 656 :  * Return 0 on success, an error code on failure. */
ppp.c (Ch_AS4\lwIP\netif\ppp) line 951 :  * Return 0 on success, an error code on failure. */
pppIOCtl in ppp.c (Ch_AS4\lwIP\netif\ppp) line 969 :     case PPPCTLS_ERRCODE:       /* Set the PPP error code. */
pppIOCtl in ppp.c (Ch_AS4\lwIP\netif\ppp) line 976 :     case PPPCTLG_ERRCODE:       /* Get the PPP error code. */
ppp.c (Ch_AS4\lwIP\netif\ppp) line 1218 :  * result of an error detected after decompression of a packet,
NPmode in ppp.h (Ch_AS4\lwIP\netif\ppp) line 166 :   NPMODE_ERROR,       /* return an error */
ppp.h (Ch_AS4\lwIP\netif\ppp) line 233 : #define PPPERR_NONE      0 /* No error. */
ppp.h (Ch_AS4\lwIP\netif\ppp) line 251 : #define PPPCTLS_ERRCODE  101 /* Set the error code */
ppp.h (Ch_AS4\lwIP\netif\ppp) line 252 : #define PPPCTLG_ERRCODE  102 /* Get the error code */
ppp.h (Ch_AS4\lwIP\netif\ppp) line 383 :  * an error code (negative) on failure. 
ppp.h (Ch_AS4\lwIP\netif\ppp) line 398 :  * Return 0 on success, an error code on failure. 
ppp.h (Ch_AS4\lwIP\netif\ppp) line 409 :  * Return 0 on success, an error code on failure. 
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 392 :   char *error;
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 495 :       error = NULL;
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 497 :         error = mem_malloc(len+1);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 498 :         if (error) {
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 499 :           strncpy(error, (char*)pb->payload + off + sizeof(pt), len);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 500 :           error[len-1] = '\0';
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 503 :       if (error) {
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 504 :         printf("%s: %s: %s\n", devname, err_msg, error);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 505 :         mem_free(error);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 627 :         PPPDEBUG((LOG_DEBUG, "pppoe: %c%c%"U16_F": failed to send PADR, error=%d\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, err));
pppoe_disc_input in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 666 :   /* avoid error messages if there is not a single pppoe instance */
pppoe_timeout in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 872 :         PPPDEBUG((LOG_DEBUG, "pppoe: %c%c%"U16_F": failed to transmit PADI, error=%d\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, err));
pppoe_timeout in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 884 :           PPPDEBUG((LOG_DEBUG, "pppoe: %c%c%"U16_F": failed to send PADI, error=%d\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, err));
pppoe_timeout in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 891 :         PPPDEBUG((LOG_DEBUG, "pppoe: %c%c%"U16_F": failed to send PADR, error=%d\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, err));
pppoe_connect in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 923 :   PPPDEBUG((LOG_DEBUG, "pppoe: %c%c%"U16_F": failed to send PADI, error=%d\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, err));
ppp_oe.h (Ch_AS4\lwIP\include\netif) line 124 : #define	PPPOE_TAG_SNAME_ERR	0x0201		/* service name error */
ppp_oe.h (Ch_AS4\lwIP\include\netif) line 125 : #define	PPPOE_TAG_ACSYS_ERR	0x0202		/* AC system error */
ppp_oe.h (Ch_AS4\lwIP\include\netif) line 126 : #define	PPPOE_TAG_GENERIC_ERR	0x0203		/* gerneric error */
production-smartfusion2-execute-in-place.ld (Ch_AS4\firmware\CMSIS\startup_gcc) line 192 :     . += MIN_SIZE_HEAP;         /* will generate error if this minimum size not available */
production-smartfusion2-relocate-to-external-ram.ld (Ch_AS4\firmware\CMSIS\startup_gcc) line 211 :     . += MIN_SIZE_HEAP;         /* will generate error if this minimum size not available */
_LCAS_RUN_SETUP_t in protocolType_AS.h (Ch_AS4\common_inc) line 339 : 				// 					0 = NO		// error - send_SelfMessage(SELF_ERROR, SELF_ERROR_MISSING_VIAL_WAIT);
raw.c (Ch_AS4\lwIP\core) line 134 :  * @return lwIP error code.
raw.c (Ch_AS4\lwIP\core) line 135 :  * - ERR_OK. Successful. No error occured.
raw.c (Ch_AS4\lwIP\core) line 157 :  * @return lwIP error code
slipif_rxbyte in slipif.c (Ch_AS4\lwIP\netif) line 205 :        (although that would be a protocol error) */
snmp_resp_header_lengths in snmp_msg.h (Ch_AS4\lwIP\include\lwip) line 123 :   /* encoding error-index length length */
snmp_resp_header_lengths in snmp_msg.h (Ch_AS4\lwIP\include\lwip) line 125 :   /* encoding error-status length length */
snmp_resp_header_lengths in snmp_msg.h (Ch_AS4\lwIP\include\lwip) line 138 :   /* encoding error-index length */
snmp_resp_header_lengths in snmp_msg.h (Ch_AS4\lwIP\include\lwip) line 140 :   /* encoding error-status length */
snmp_msg_pstat in snmp_msg.h (Ch_AS4\lwIP\include\lwip) line 229 :   /* error status */
snmp_msg_pstat in snmp_msg.h (Ch_AS4\lwIP\include\lwip) line 231 :   /* error index */
mib_external_node in snmp_structs.h (Ch_AS4\lwIP\include\lwip) line 220 :   /** async Panic Close (agent returns error reply, 
lwip_socket in sockets.c (Ch_AS4\lwIP\api) line 75 :   /** last error that occurred on this socket */
lwip_setgetsockopt_data in sockets.c (Ch_AS4\lwIP\api) line 111 :   /** if an error occures, it is temporarily stored here */
sockets.c (Ch_AS4\lwIP\api) line 125 : /** Table to quickly map an lwIP error (err_t) to a socket error
sockets.c (Ch_AS4\lwIP\api) line 128 :   0,             /* ERR_OK          0      No error, everything OK. */
sockets.c (Ch_AS4\lwIP\api) line 129 :   ENOMEM,        /* ERR_MEM        -1      Out of memory error.     */
sockets.c (Ch_AS4\lwIP\api) line 130 :   ENOBUFS,       /* ERR_BUF        -2      Buffer error.            */
sockets.c (Ch_AS4\lwIP\api) line 140 :   -1,            /* ERR_IF         -12     Low-level netif error    */
sockets.c (Ch_AS4\lwIP\api) line 213 :  * @return the index of the new socket; -1 on error
lwip_recvfrom in sockets.c (Ch_AS4\lwIP\api) line 520 :         /* We should really do some error checking here. */
sockets.h (Ch_AS4\lwIP\include\lwip) line 99 : #define SO_ERROR     0x1007    /* get error status and clear */
startup_m2sxxx.S (Ch_AS4\firmware\CMSIS\startup_gcc) line 139 :  * Initialize stack RAM content to initialize the error detection and correction
startup_m2sxxx.S (Ch_AS4\firmware\CMSIS\startup_gcc) line 281 :  * Initialize heap RAM content to initialize the error detection and correction
startup_m2sxxx.S (Ch_AS4\firmware\CMSIS\startup_gcc) line 346 :     b .                          /* ; halt as critical error-  memory map not OK- make it easy to catch in debugger */
stats_proto in stats.h (Ch_AS4\lwIP\include\lwip) line 63 :   STAT_COUNTER chkerr;           /* Checksum error. */
stats_proto in stats.h (Ch_AS4\lwIP\include\lwip) line 64 :   STAT_COUNTER lenerr;           /* Invalid length error. */
stats_proto in stats.h (Ch_AS4\lwIP\include\lwip) line 65 :   STAT_COUNTER memerr;           /* Out of memory error. */
stats_proto in stats.h (Ch_AS4\lwIP\include\lwip) line 66 :   STAT_COUNTER rterr;            /* Routing error. */
stats_proto in stats.h (Ch_AS4\lwIP\include\lwip) line 67 :   STAT_COUNTER proterr;          /* Protocol error. */
stats_proto in stats.h (Ch_AS4\lwIP\include\lwip) line 69 :   STAT_COUNTER err;              /* Misc error. */
stats_igmp in stats.h (Ch_AS4\lwIP\include\lwip) line 74 :   STAT_COUNTER lenerr;           /* Invalid length error. */
stats_igmp in stats.h (Ch_AS4\lwIP\include\lwip) line 75 :   STAT_COUNTER chkerr;           /* Checksum error. */
tcp.c (Ch_AS4\lwIP\core) line 516 :  * @param connected callback function to call when connected (or on error)
tcp.c (Ch_AS4\lwIP\core) line 1164 :  * Used to specify the function that should be called when a fatal error
tcp.c (Ch_AS4\lwIP\core) line 1168 :  * @param errf callback function to call for this pcb when a fatal error
tcp.h (Ch_AS4\lwIP\include\lwip) line 270 :    * @param err an error argument (TODO: that is current always ERR_OK?)
tcp_pcb in tcp.h (Ch_AS4\lwIP\include\lwip) line 381 :    * @param err an error argument (TODO: that is current always ERR_OK?)
tcp_pcb in tcp.h (Ch_AS4\lwIP\include\lwip) line 389 :    * @param err an error argument (TODO: that is current always ERR_OK?)
tcp_pcb in tcp.h (Ch_AS4\lwIP\include\lwip) line 403 :   /* Function to be called whenever a fatal error occurs.
tcp_pcb in tcp.h (Ch_AS4\lwIP\include\lwip) line 407 :    * @param err an indication why the error callback is called:
tcpip.c (Ch_AS4\lwIP\api) line 389 :  * @return ERR_MEM on memory error, ERR_OK otherwise
tcpip.c (Ch_AS4\lwIP\api) line 418 :  * @return ERR_MEM on memory error, ERR_OK otherwise
tcpip.c (Ch_AS4\lwIP\api) line 492 :  * @return error code given back by the function that was called
tcp_input in tcp_in.c (Ch_AS4\lwIP\core) line 309 :            end. We then call the error callback to inform the
tcp_in.c (Ch_AS4\lwIP\core) line 401 :  *         another err_t on error
tcp_timewait_input in tcp_in.c (Ch_AS4\lwIP\core) line 512 :       /* If the SYN is in the window it is an error, send a reset */
tcp_process in tcp_in.c (Ch_AS4\lwIP\core) line 663 :           /* If the accept function returns with an error, we abort
tcp_out.c (Ch_AS4\lwIP\core) line 111 :  * @return ERR_OK if enqueued, another err_t on error
tcp_out.c (Ch_AS4\lwIP\core) line 232 : 	* configured maximum, return an error */
tcp_enqueue in tcp_out.c (Ch_AS4\lwIP\core) line 550 : 	* configured maximum, return an error */
tcp_out.c (Ch_AS4\lwIP\core) line 901 :  *         another err_t on error
tcp_output in tcp_out.c (Ch_AS4\lwIP\core) line 970 : 		* - if tcp_enqueue had a memory error before (prevent delayed ACK timeout) or
tcp_server.c (Ch_AS4\apps_layer) line 137 :   * @retval err_t: error status
tcp_server_accept in tcp_server.c (Ch_AS4\apps_layer) line 191 : 		/* return memory error */
tcp_server_accept in tcp_server.c (Ch_AS4\apps_layer) line 249 :     /* return memory error */
tcp_server.c (Ch_AS4\apps_layer) line 262 :   * @param  err: error information regarding the received pbuf
tcp_server.c (Ch_AS4\apps_layer) line 263 :   * @retval err_t: error code
tcp_server.c (Ch_AS4\apps_layer) line 504 :   * @param  err: error information regarding the received pbuf
tcp_server.c (Ch_AS4\apps_layer) line 505 :   * @retval err_t: error code
tcp_server.c (Ch_AS4\apps_layer) line 724 :   *         when a fatal tcp_connection error occurs. 
tcp_server.c (Ch_AS4\apps_layer) line 758 :   * @retval err_t: error code
machineTest_Mode_VAL_Home in testPrgm.c (Ch_AS4\apps_layer) line 1657 : 	static int error = NO;
machineTest_Mode_SYR_Home in testPrgm.c (Ch_AS4\apps_layer) line 1692 : 	static int error = NO;
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1727 : 	static int error = NO;
udp.c (Ch_AS4\lwIP\core) line 327 :  * @return lwIP error code.
udp.c (Ch_AS4\lwIP\core) line 328 :  * - ERR_OK. Successful. No error occured.
udp.c (Ch_AS4\lwIP\core) line 355 :  * @return lwIP error code (@see udp_send for possible error codes)
udp.c (Ch_AS4\lwIP\core) line 398 :  * @return lwIP error code (@see udp_send for possible error codes)
udp_sendto_if in udp.c (Ch_AS4\lwIP\core) line 544 :   /* TODO: must this be increased even if error occured? */
udp.c (Ch_AS4\lwIP\core) line 571 :  * @return lwIP error code.
udp.c (Ch_AS4\lwIP\core) line 572 :  * - ERR_OK. Successful. No error occured.
udp.c (Ch_AS4\lwIP\core) line 670 :  * @return lwIP error code
vj_uncompress_tcp in vj.c (Ch_AS4\lwIP\netif\ppp) line 500 :      * had a line error since the last time we got an
vjstat in vj.h (Ch_AS4\lwIP\netif\ppp) line 126 :   unsigned long vjs_tossed;         /* inbound packets tossed because of error */
---- aspirateSample Matches (16 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1157 : int aspirateSample(const VIAL_POS_t *pVial, float vol, uint32_t speed)
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1256 : dfp("<<<aspirateSample --- goZ_Encoder(POS_Z_TOP, ACT_XY_POS)>>>!!\n");															
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1263 : 				dfp("<<<aspirateSample --- error = %d \n",error);																			
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1454 : 					aspirateReturn = aspirateSample(pVial, flushVolume, syringeSpeed);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1526 : 					aspirateReturn = aspirateSample(pVial, sampleVolume, syringeSpeed);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1788 : 					aspirateReturn = aspirateSample(pVial, flushVolume, syringeSpeed);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1852 : //					aspirateReturn = aspirateSample(pVial, runSetup.injectionVolume + PARTIAL_LOOP_EXTRA_SAMPLE_VOL, syringeSpeed);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1853 : 					aspirateReturn = aspirateSample(pVial, sampleVolume, syringeSpeed);
LcasAction_task.c (Ch_AS4\apps_layer) line 2104 : 	7.Syringe dispenser : aspirates -> (Sample Volume)	: aspirateSample()
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2211 : 					aspirateReturn = aspirateSample(&transVial, transportVolume, syringeSpeed);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2212 : //					aspirateReturn = aspirateSample(&transVialPos, sampleVolume, syringeSpeed);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2281 : 					aspirateReturn = aspirateSample(pVial, sampleVolume, syringeSpeed);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3341 : 					aspirateReturn = aspirateSample(pVial, addVolume,	syringeSpeed);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3441 : 					aspirateReturn = aspirateSample(pVial, -addVolume, syringeSpeed);
LcasAction_task.h (Ch_AS4\inc) line 54 : int aspirateSample(const VIAL_POS_t *pVial, float vol, uint32_t speed);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1746 : //dfp("<<<aspirateSample --- goPosVial>>>!! == devState.btMotorState[MOTOR_Z]=%x\n",devState.btMotorState[MOTOR_Z]);	
---- SAMPLE_VOLUME_FIX_PULL_LOOP Matches (3 in 2 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 1356 : //#define SAMPLE_VOLUME_FIX_PULL_LOOP			1		// 20210826
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1436 : #if SAMPLE_VOLUME_FIX_PULL_LOOP
option_AS.h (Ch_AS4\ryu_inc) line 366 : #define SAMPLE_VOLUME_FIX_PULL_LOOP			1		// 20210826
---- errorFunction Matches (103 in 9 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 19 : #define errorFunction(X)			{ iprintf( "[%s %d]",__FUNCTION__,__LINE__); errFunction(X); }
debug_inform.h (Ch_AS4\ryu_inc) line 43 : #define errorFunction(X)			{ errFunction(X); }
Def_stepCon.h (Ch_AS4\common_inc) line 353 : 	#define errorEncoder(WHO)			errorFunction(SELF_ERROR_ENCODER_COUNT + WHO)
Def_stepCon.h (Ch_AS4\common_inc) line 355 : 	#define errorEncoder_X()			errorFunction(SELF_ERROR_ENCODER_COUNT_X)
Def_stepCon.h (Ch_AS4\common_inc) line 356 : 	#define errorEncoder_Y()			errorFunction(SELF_ERROR_ENCODER_COUNT_Y)
Def_stepCon.h (Ch_AS4\common_inc) line 357 : 	#define errorEncoder_Z()			errorFunction(SELF_ERROR_ENCODER_COUNT_Z)
Def_stepCon.h (Ch_AS4\common_inc) line 358 : 	#define errorEncoder_SYR()			errorFunction(SELF_ERROR_ENCODER_COUNT_SYR)
Def_stepCon.h (Ch_AS4\common_inc) line 359 : 	#define errorEncoder_VAL()			errorFunction(SELF_ERROR_ENCODER_COUNT_VAL)
Def_stepCon.h (Ch_AS4\common_inc) line 360 : 	#define errorEncoder_INJ()			errorFunction(SELF_ERROR_ENCODER_COUNT_INJ)
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1466 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1474 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1489 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1538 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1547 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1562 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1796 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1804 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1816 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1862 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1870 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1882 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2222 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2231 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2242 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2290 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2298 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2310 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2869 : 			if(devState.connected) errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3351 : 								errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3371 : 								errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3385 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3450 : errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3457 : 								errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3466 : 								errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3649 : errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3657 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3670 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
LcasAction_task.c (Ch_AS4\apps_layer) line 3961 : //int	errorFunction(unsigned char	err)
errFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 3964 : dfpErr("errorFunction=%d\n",err);
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4083 : 				errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
LcasAction_task.c (Ch_AS4\apps_layer) line 6308 : 				errorFunction(SELF_ERROR_DOOR_OPEN);
LcasAction_task.c (Ch_AS4\apps_layer) line 6332 : 				errorFunction(SELF_ERROR_LEAK);  //					sendMsg
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6397 : 				errorFunction(SELF_ERROR_DOOR_OPEN);
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6420 : 				errorFunction(SELF_ERROR_LEAK);  //					sendMsg
LcasAction_task.h (Ch_AS4\inc) line 83 : //int errorFunction(unsigned char err);
main in main.c (Ch_AS4) line 551 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Z);
main in main.c (Ch_AS4) line 558 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_X);
main in main.c (Ch_AS4) line 564 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Y);
main in main.c (Ch_AS4) line 571 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_SYR);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1155 : 							errorFunction(SELF_ERROR_HOME_CHK_Z);
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1288 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1386 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1464 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1519 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1602 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1674 : 		errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2016 : 											errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2108 : 	      		errorFunction(SELF_ERROR_POSITION_Z);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2533 : 		errorFunction(SELF_ERROR_HOME_CHK_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2673 : 		errorFunction(SELF_ERROR_HOME_CHK_INJ);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2817 : 		errorFunction(SELF_ERROR_HOME_CHK_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2845 : 					errorFunction(SELF_ERROR_HOME_CHK_SYR);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2937 : 		errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3026 : 						errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3079 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3177 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3220 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3303 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3348 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3466 : 		errorFunction(SELF_ERROR_HOME_CHK_Y);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3549 : 						errorFunction(SELF_ERROR_HOME_CHK_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3589 : 		errorFunction(SELF_ERROR_HOME_CHK_Y);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5224 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Z);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5230 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_X);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5235 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Y);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5240 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_SYR);
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5342 : 		errorFunction(SELF_ERROR_POSITION_XY);
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 196 : 			errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
net_SystemConfig in net_AS.c (Ch_AS4\apps_layer) line 533 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 949 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 981 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 991 : 					errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 1000 : 					errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1060 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1070 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1240 : 		errorFunction(err);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1455 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1627 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1814 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2945 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3372 : 						errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3629 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3711 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3714 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3730 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3734 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3753 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3764 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3769 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3780 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3984 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
tcp_server.h (Ch_AS4\inc) line 168 : int	errorFunction(unsigned char	err);
netBoardCmd in testPrgm.c (Ch_AS4\apps_layer) line 2135 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
---- SYRINGE_ENCODER_REMOVE_WASHING Matches (8 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 419 : // #if SYRINGE_ENCODER_REMOVE_WASHING
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 233 : #if SYRINGE_ENCODER_REMOVE_WASHING
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 290 : #if SYRINGE_ENCODER_REMOVE_WASHING
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 317 : #if SYRINGE_ENCODER_REMOVE_WASHING
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 400 : #if SYRINGE_ENCODER_REMOVE_WASHING
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 428 : #if SYRINGE_ENCODER_REMOVE_WASHING
option_AS.h (Ch_AS4\ryu_inc) line 39 : // #if SYRINGE_ENCODER_REMOVE_WASHING
option_AS.h (Ch_AS4\ryu_inc) line 47 : #define SYRINGE_ENCODER_REMOVE_WASHING				1
---- SYRINGE_ENCODER_REMOVE_END Matches (7 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 421 : // #if SYRINGE_ENCODER_REMOVE_END
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 539 : #if SYRINGE_ENCODER_REMOVE_END
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1679 : #if SYRINGE_ENCODER_REMOVE_END
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 2022 : #if SYRINGE_ENCODER_REMOVE_END
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2429 : #if SYRINGE_ENCODER_REMOVE_END
option_AS.h (Ch_AS4\ryu_inc) line 42 : // SYRINGE_ENCODER_REMOVE_END
option_AS.h (Ch_AS4\ryu_inc) line 48 : #define SYRINGE_ENCODER_REMOVE_END					1
---- SYRINGE_ENCODER_REMOVE_INIT Matches (1 in 1 files) ----
option_AS.h (Ch_AS4\ryu_inc) line 49 : #define SYRINGE_ENCODER_REMOVE_INIT					1
---- Door Matches (15 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 6288 : 	static unsigned char Door = 0;
LcasAction_task.c (Ch_AS4\apps_layer) line 6294 : //				if(LcasState.state == STATE_RUN) Door++;
LcasAction_task.c (Ch_AS4\apps_layer) line 6295 : 			if(LcasState.state == STATE_RUN || LcasState.state == STATE_INITILIZE || LcasState.state == STATE_ANALYSIS) Door++;
LcasAction_task.c (Ch_AS4\apps_layer) line 6298 : 			Door = 0;
LcasAction_task.c (Ch_AS4\apps_layer) line 6301 : 		if(Door > DOOR_CHECK_TIME) {
LcasAction_task.c (Ch_AS4\apps_layer) line 6302 : 			Door = DOOR_CHECK_TIME;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6382 : 	static unsigned char Door = 0;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6388 : 			if(LcasState.state == STATE_RUN || LcasState.state == STATE_INITILIZE || LcasState.state == STATE_ANALYSIS) Door++;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6391 : 			Door = 0;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6395 : 		if(Door > DOOR_CHECK_TIME) {
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6396 : 			Door = DOOR_CHECK_TIME;
main in main.c (Ch_AS4) line 435 : 							CheckDeviceState();		// Power Button 관련 , Door , Magnetic switch , leak
testPrgm.c (Ch_AS4\apps_layer) line 211 : 	static unsigned char Door = NO;
testPrgm.c (Ch_AS4\apps_layer) line 266 : 	static unsigned char Door = NO;
testPrgm.c (Ch_AS4\apps_layer) line 1872 : 	static unsigned char Door = NO;
---- DoorError Matches (12 in 3 files) ----
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 499 : 	unsigned char DoorError;	// high = Error (Not Detect) open
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5877 : 		devState.DoorError = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5881 : 		devState.DoorError = NO;		
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5934 : 		devState.DoorError = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5938 : 		devState.DoorError = NO;		
LcasAction_task.c (Ch_AS4\apps_layer) line 6303 : 			devState.DoorError = YES;
LcasAction_task.c (Ch_AS4\apps_layer) line 6316 : 			devState.DoorError = NO;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6397 : 			devState.DoorError = YES;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6405 : 			devState.DoorError = NO;
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6499 : 	if(devState.LeakError !=	YES	&& devState.thError1	!= YES &&	devState.thError2 !=	YES	 &&	devState.DoorError != YES && ovenStt.sensorError	!= YES &&	ovenStt.bServiceErr	!= YES)	{
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4002 : 			devState.DoorError = NO;
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4006 : 			devState.DoorError = NO;
---- save_EEPROM_special Matches (5 in 3 files) ----
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 514 : 	unsigned char save_EEPROM_special;
main in main.c (Ch_AS4) line 481 : 					if(devState.save_EEPROM_special == YES) {
main in main.c (Ch_AS4) line 483 : 							devState.save_EEPROM_special = NO;
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4020 : 		devState.save_EEPROM_special = YES;
save_EEPROM_special_data in net_AS.c (Ch_AS4\apps_layer) line 4045 : 	devState.save_EEPROM_special = NO;
---- LED_onoff Matches (29 in 4 files) ----
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5854 : 			if(special.LED_onoff > ON) special.LED_onoff = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5860 : 			special.LED_onoff = ON;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5872 : 	if(special.LED_onoff == ON) {	EXT_LED_CON_ON;	}
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5892 : 	as_INFO.LED_onoff = special.LED_onoff;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5914 : 			if(special.LED_onoff > ON) special.LED_onoff = NO;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5917 : 			special.LED_onoff = ON;
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5929 : 	if(special.LED_onoff == ON) {	EXT_LED_CON_ON;	}
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3983 : 	if(	tmp.LED_onoff > ON || tmp.Door_check > ON || tmp.Leak_check > ON || tmp.Buzzer_onoff > ON ) {
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3992 : 	if(special.LED_onoff != tmp.LED_onoff || special.Door_check != tmp.Door_check
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3997 : 		if(special.LED_onoff == ON) {		EXT_LED_CON_ON;		}
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4029 : dfp("led=%d door=%d leak=%d buz=%d = NO\n",special.LED_onoff,special.Door_check,special.Leak_check,special.Buzzer_onoff);
_LCAS_SPECIAL in protocolType_AS.h (Ch_AS4\common_inc) line 993 : 	unsigned char LED_onoff;
_CHROZEN_INFORMATION_t in protocolType_AS.h (Ch_AS4\common_inc) line 1097 : 	unsigned char LED_onoff;		// AS									--- (bit 5)
protocolType_AS.h (Ch_AS4\common_inc) line 1140 : 	unsigned char LED_onoff;
sysconfig.c (Ch_AS4\apps_layer) line 781 : // =================== Special		special.LED_onoff // eepromRead_Data(SPECIAL_DATA_SAVE,(size + 1),&readBuf);
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 869 : 	if(special.LED_onoff >= ON) special.LED_onoff = ON;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 870 : 	else special.LED_onoff = OFF;
checkSpecialValue in sysconfig.c (Ch_AS4\apps_layer) line 878 : 	as_INFO.LED_onoff = special.LED_onoff;
sysconfig.c (Ch_AS4\apps_layer) line 898 : 	memcpy(&idata[4], &as_INFO.LED_onoff,4);
sysconfig.c (Ch_AS4\apps_layer) line 900 : 	idata[4] = as_INFO.LED_onoff;
sysconfig.c (Ch_AS4\apps_layer) line 918 : 	special.LED_onoff = ON;
sysconfig.c (Ch_AS4\apps_layer) line 926 : 	as_INFO.LED_onoff = special.LED_onoff;
---- initSpecial Matches (9 in 5 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 5842 : void initSpecial(unsigned char load)
LcasAction_task.c (Ch_AS4\apps_layer) line 5899 : void initSpecial(unsigned char load)
init_SpecialData in LcasAction_task.c (Ch_AS4\apps_layer) line 5974 : 	initSpecial(DATA_LOAD);
LcasAction_task.h (Ch_AS4\inc) line 137 : void initSpecial(unsigned char load);
main in main.c (Ch_AS4) line 230 : initSpecial(DATA_LOAD);
main in main.c (Ch_AS4) line 264 : initSpecial(DATA_LOAD);
commandStopFn in net_AS.c (Ch_AS4\apps_layer) line 1589 : 	initSpecial(99);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1786 : 				initSpecial(99);
init_system in sysconfig.c (Ch_AS4\apps_layer) line 339 : //	initSpecial(DATA_LOAD);
---- goY_Encoder Matches (22 in 2 files) ----
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 899 : 			encoderCount = goY_Encoder(&Vial, option);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 902 : 			encoderCount = goY_Encoder(pos, Tray, option);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1199 : 			encoderCount_Y = goY_Encoder(pVial, ACT_XY_POS);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1201 : 			encoderCount_Y = goY_Encoder(pVial->uPos.y, pVial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1512 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option) 
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1594 : int goY_Encoder(int32_t pos, uint32_t Tray, uint32_t option)
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1808 : 				encoderCount_Y = goY_Encoder(pVial, ACT_XY_POS);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1810 : 				encoderCount_Y = goY_Encoder(pVial->uPos.y, pVial->uPos.tray, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1899 : 			encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1901 : 			encoderCount_Y = goY_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1991 : 					encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1993 : 					encoderCount_Y = goY_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3851 : 		encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3853 : 		encoderCount_Y = goY_Encoder(&Vial->uPos.y, &Vial->uPos.tray, ACT_XY_POS);
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3889 : 		encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3891 : 		encoderCount_Y = goY_Encoder(&Vial->uPos.y, &Vial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3999 : 		encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 4001 : 		encoderCount_Y = goY_Encoder(&Vial->uPos.y, &Vial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 4037 : 		encoderCount_Y = goY_Encoder(&Vial, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 4039 : 		encoderCount_Y = goY_Encoder(&Vial->uPos.y, &Vial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 71 : int goY_Encoder(const VIAL_POS_t *pVial, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 74 : int goY_Encoder(int32_t pos, uint32_t Tray, uint32_t option);
---- Chk_MotorErr_X Matches (1 in 1 files) ----
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1078 : 				if(Chk_MotorErr_X()) subMenu_rcrx++;
---- envmDataAvailable Matches (12 in 4 files) ----
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 516 : 	unsigned char envmDataAvailable;
init_AdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2469 : 	if(devState.envmDataAvailable == RE_ERR) {	// eeprom --> envm
initSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5104 : 	if(devState.envmDataAvailable == RE_ERR)
init_Macaddr_Value in LcasAction_task.c (Ch_AS4\apps_layer) line 5151 : 	if(devState.envmDataAvailable == RE_ERR) {	// eeprom --> envm
initSystemConfig in LcasAction_task.c (Ch_AS4\apps_layer) line 5597 : 	if(devState.envmDataAvailable == RE_ERR) {	// eeprom --> envm
init_SpecialData in LcasAction_task.c (Ch_AS4\apps_layer) line 5973 : 	if(devState.envmDataAvailable == RE_ERR) {	// eeprom --> envm
init_usedTime in LcasAction_task.c (Ch_AS4\apps_layer) line 6150 : 	if(devState.envmDataAvailable == RE_ERR) 
initTempCalData in net_AS.c (Ch_AS4\apps_layer) line 618 : 	if(devState.envmDataAvailable == RE_ERR) {	// eeprom --> envm
init_system in sysconfig.c (Ch_AS4\apps_layer) line 329 : 	devState.envmDataAvailable = isEnvmDataAvailable();
init_system in sysconfig.c (Ch_AS4\apps_layer) line 330 : //devState.envmDataAvailable = RE_ERR; 
init_system in sysconfig.c (Ch_AS4\apps_layer) line 371 : 	if(isFirmwareUpdate() == RE_ERR || devState.envmDataAvailable == RE_ERR) {
rtcTime_Init in sysconfig.c (Ch_AS4\apps_layer) line 386 : 	if(devState.envmDataAvailable == RE_ERR) {	// eeprom --> envm
---- usedTimeSave Matches (7 in 2 files) ----
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 490 : 	unsigned char usedTimeSave;					//  현재 ready상태가 아니라서 저장을 못했을 경우 = NO;
initValue in LcasAction_task.c (Ch_AS4\apps_layer) line 5272 : 	devState.usedTimeSave = NO;
usedTimeCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6021 :  				devState.usedTimeSave	= YES;
usedTimeCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6025 : 				devState.usedTimeSave	= NO;
usedTimeCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6080 :  				devState.usedTimeSave	= YES;
usedTimeCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6084 : 				devState.usedTimeSave	= NO;
usedTimeSaveFunc in LcasAction_task.c (Ch_AS4\apps_layer) line 6127 : 			if(devState.usedTimeSave == NO) {	// 저장안되었다면 저장
---- CMD_CHK_DIR_START Matches (14 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 407 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1345 : 			CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1347 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1424 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1561 : 			CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1563 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1636 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1735 : 			CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1737 : 		dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2206 : 			CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2208 : 		printf("## MOTOR_SYR CMD_CHK_DIR_START chk_DirS=%08x cur=%f act=%f step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2106 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2110 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2114 : CMD_CHK_DIR_START(i);
---- goX_Encoder Matches (22 in 2 files) ----
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 840 : 			encoderCount = goX_Encoder(&Vial, option);
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 842 : 			encoderCount = goX_Encoder(pos, Tray, option);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1201 : 			encoderCount_X = goX_Encoder(pVial, ACT_XY_POS);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1203 : 			encoderCount_X = goX_Encoder(pVial->uPos.x, pVial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1286 : int goX_Encoder(const VIAL_POS_t *pVial, uint32_t option)
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1372 : int goX_Encoder(int32_t pos, uint32_t Tray, uint32_t option)
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1795 : 				encoderCount_X = goX_Encoder(pVial, ACT_XY_POS);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1797 : 				encoderCount_X = goX_Encoder(pVial->uPos.x, pVial->uPos.tray, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1882 : 			encoderCount_X = goX_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1884 : 			encoderCount_X = goX_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1978 : 					encoderCount_X = goX_Encoder(&Vial, ACT_XY_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1980 : 					encoderCount_X = goX_Encoder(xy_pos, TRAY_ETC, ACT_XY_POS);
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3854 : 		encoderCount_X = goX_Encoder(&Vial, ACT_XY_POS);
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3856 : 		encoderCount_X = goX_Encoder(&Vial->uPos.x, &Vial->uPos.tray, ACT_XY_POS);
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3886 : 		encoderCount_X = goX_Encoder(&Vial, ACT_XY_POS);
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3888 : 		encoderCount_X = goX_Encoder(&Vial->uPos.x, &Vial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 4002 : 		encoderCount_X = goX_Encoder(&Vial, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 4004 : 		encoderCount_X = goX_Encoder(&Vial->uPos.x, &Vial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 4034 : 		encoderCount_X = goX_Encoder(&Vial, ACT_XY_POS);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 4036 : 		encoderCount_X = goX_Encoder(&Vial->uPos.x, &Vial->uPos.tray, ACT_XY_POS);
MotorCtrl_task.h (Ch_AS4\inc) line 63 : int goX_Encoder(const VIAL_POS_t *pVial, uint32_t option);
MotorCtrl_task.h (Ch_AS4\inc) line 66 : int goX_Encoder(int32_t pos, uint32_t Tray, uint32_t option);
---- dfp Matches (364 in 9 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 10 : #define dfp(fmt,args...) iprintf( "DFP [%s %d]-" fmt, __FUNCTION__,__LINE__, ## args ) 
debug_inform.h (Ch_AS4\ryu_inc) line 11 : //#define dfp(fmt,args...) 
debug_inform.h (Ch_AS4\ryu_inc) line 34 : #define dfp(fmt,args...) 
Def_stepCon.h (Ch_AS4\common_inc) line 367 : dfp("======  X  readCount=[%d] [%d]\n", readCount , encoderCount_X); \
Def_stepCon.h (Ch_AS4\common_inc) line 375 : dfp("======  X  readCount=[%d] [%d]\n", readCount , encoderCount_X); \
Def_stepCon.h (Ch_AS4\common_inc) line 385 : dfp("======  Y  readCount=[%d] [%d]\n", readCount , encoderCount_Y); \
Def_stepCon.h (Ch_AS4\common_inc) line 393 : dfp("======  Y	readCount=[%d] [%d]\n", readCount , encoderCount_Y); \
Def_stepCon.h (Ch_AS4\common_inc) line 403 : dfp("======  Z  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 411 : dfp("======  Z  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 429 : dfp("xxxxxxxxxxxxx======  Syringe  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 438 : dfp("======  Valve  readCount=[%d]\n", readCount ); \
Def_stepCon.h (Ch_AS4\common_inc) line 448 : dfp("======  Injector  readCount=[%d] \n", readCount ); \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 190 : 		dfp("subMenu_w=%d  stateSYR=%x\n",subMenu_w,devState.btMotorState[MOTOR_SYR]);
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 498 :     dfp("subMenu_es=%d\n",subMenu_es);
sleepModeAll in LcasAction_task.c (Ch_AS4\apps_layer) line 570 : 		dfp("subMenu_sma=%d\n",subMenu_sma);
sleepModeError in LcasAction_task.c (Ch_AS4\apps_layer) line 611 : 		dfp("subMenu_sma=%d\n",subMenu_sma);
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 655 : 		dfp("subMenu_wxch=%d stateSYR=%x\n",subMenu_wxch,devState.btMotorState[MOTOR_SYR]);		
startInjectionFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 775 : dfp("if(devState.auxTime100msCnt[0] == 0) devState.curAuxEventNo = %d\n\r",devState.curAuxEventNo);
startLoadingCommand in LcasAction_task.c (Ch_AS4\apps_layer) line 840 : 	dfp("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
LcasAction_task.c (Ch_AS4\apps_layer) line 918 :   dfp("subMenu_ghcx=%d\n",subMenu_ghcx);
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 996 : dfp("sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1001 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1006 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1011 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1016 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1021 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);			
chkNextInjectionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 1028 : dfp("END sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1072 : dfp("sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1077 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1082 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1087 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1092 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1097 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);			
chkNextInjectionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 1104 : dfp("END sample.uPos (%d,%d)\n",devState.sample.uPos.x, devState.sample.uPos.y);			
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1173 :     dfp("subMenu_as=%d\n",subMenu_as);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1182 : dfp("tray[%d] pos[%d][%d]\n",pVial->uPos.tray,pVial->uPos.x,pVial->uPos.y);
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1260 : dfp("<<<aspirateSample --- goZ_Encoder(POS_Z_TOP, ACT_XY_POS)>>>!!\n");															
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1267 : 				dfp("<<<aspirateSample --- error = %d \n",error);																			
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1384 : 		dfp("subMenu_fli=%d  stateSYR=%x\n",subMenu_fli,devState.btMotorState[MOTOR_SYR]);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1505 : dfp("missing %d	\n",devState.missVialResponse);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1516 : dfp("if(runSetup.airSegment ==	YES) %d	\n",devState.missVialResponse);													
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1579 : dfp("missing %d	\n",devState.missVialResponse);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1737 : 		dfp("subMenu_pli=%d\n",subMenu_pli);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1832 : dfp("missing %d	\n",devState.missVialResponse);													
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1899 : dfp("missing %d	\n",devState.missVialResponse);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1920 : dfp(">>>>injectVial=(%d,%d) sample=(%d,%d)\n",LcasState.injectVial.uPos.x,LcasState.injectVial.uPos.y,LcasState.sample.uPos.x,LcasState.sample.uPos.y);													
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1988 : dfp(">>>>>injectVial=(%d,%d) sample=(%d,%d)\n",LcasState.injectVial.uPos.x,LcasState.injectVial.uPos.y,LcasState.sample.uPos.x,LcasState.sample.uPos.y);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2148 : 		dfp("subMenu_mpi=%d\n",subMenu_mpi);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2258 : dfp("missing %d	\n",devState.missVialResponse);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2327 : dfp("missing %d	\n",devState.missVialResponse);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2444 : //dfp("==========sampleVolume=%d  transportVolume=%d injectionVolume=%d\n",sampleVolume,(int)(transportVolume*10),(int)(injectionVolume*10));
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2845 : dfp("===================sysConfig.trayRight = %d\n",sysConfig.trayRight);
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3018 : dfp("RE_OK============\n");			
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3019 : dfp("pVial->uPos (%d,%d)\n",pVial->uPos.x, pVial->uPos.y);
nextSample in LcasAction_task.c (Ch_AS4\apps_layer) line 3023 : dfp("RE_ERR===========\n");			
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3117 : dfp("relative firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3122 : dfp("relative reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3127 : dfp("relative reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3132 : dfp("relative reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
chkNextVialMix in LcasAction_task.c (Ch_AS4\apps_layer) line 3137 : dfp("relative reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
mix_ProgramNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3187 : 					dfp("mixSet.mixTable[%d].action = %d\n",devState.mixTableNo,mixSet.mixTable[devState.mixTableNo].action);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3267 : 		dfp("===================================subMenu_map=%d\n",subMenu_map);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3347 : //dfp("===================================aspirateReturn = %d	\n",aspirateReturn);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3356 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3392 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3393 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3406 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3464 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3488 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3489 : dfp("===================================missing %d	\n",devState.missVialResponse);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3502 : dfp("MISSING_VIAL_STOP %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3557 : 		dfp("subMenu_mmp=%d\n",subMenu_mmp);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3666 : 	dfp("===================================missing %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3706 : dfp("missing %d	\n",devState.missVialResponse);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3785 : dfp("repeat\n");
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3903 : dfp("AUX_SIG_OUT_CONTACT_CLOSE\n\r");				
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3907 : dfp("AUX_SIG_OUT_CONTACT_OPEN\n\r");								
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3919 : dfp("AUX_CONTACT_OPEN devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3926 : dfp("AUX_CONTACT_CLOSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);					
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3932 : dfp("AUX_TOGGLE---AUX_CONTACT_OPEN devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);																
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3937 : dfp("AUX_TOGGLE---AUX_SIG_OUT_CONTACT_CLOSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);																						
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3944 : dfp("AUX_PULSE devState.analysisTime100msCn=%d\n\r",devState.analysisTime100msCnt);
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3950 : dfp("devState.curAuxEventNo = %d\n\r",devState.curAuxEventNo);																								
time_Event in LcasAction_task.c (Ch_AS4\apps_layer) line 3956 : dfp("time_Event end \n\r");
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4076 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4137 : dfp("====== end function : initialize\n");
actionReady in LcasAction_task.c (Ch_AS4\apps_layer) line 4148 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionMix in LcasAction_task.c (Ch_AS4\apps_layer) line 4173 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionRun in LcasAction_task.c (Ch_AS4\apps_layer) line 4251 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
LcasAction_task.c (Ch_AS4\apps_layer) line 4377 : dfp("if(devState.doNextSample == YES) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");						
LcasAction_task.c (Ch_AS4\apps_layer) line 4379 : dfp("if(devState.vialExist == NO) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");													
LcasAction_task.c (Ch_AS4\apps_layer) line 4391 : //dfp("<<<analysisTime= %d %d	isNextInjection == YES %d >>>!!\n",devState.analysisTime100msCnt,devState.analysisTime100ms,devState.isNextInjection);
LcasAction_task.c (Ch_AS4\apps_layer) line 4403 : dfp("if(devState.isNextInjection == YES) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");								
LcasAction_task.c (Ch_AS4\apps_layer) line 4417 : dfp("devState.vialExist	=	NO \n");
LcasAction_task.c (Ch_AS4\apps_layer) line 4425 : dfp("if(devState.isNextInjection	== YES)<<<analysisTime= %d %d	isNextInjection == YES %d >>>!!\n",devState.analysisTime100msCnt,devState.analysisTime100ms,devState.isNextInjection);
LcasAction_task.c (Ch_AS4\apps_layer) line 4444 : dfp("<<<SELF_END_SEQUENCE>>>	devState.vialExist = %d\n",devState.vialExist);		
actionFault in LcasAction_task.c (Ch_AS4\apps_layer) line 4458 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionStandby in LcasAction_task.c (Ch_AS4\apps_layer) line 4470 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagnostics in LcasAction_task.c (Ch_AS4\apps_layer) line 4482 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagHeaterCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 4519 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagCoolerCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 4637 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionDiagTempsenCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 4734 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 4819 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 4877 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
actionServiceWash in LcasAction_task.c (Ch_AS4\apps_layer) line 4924 : dfp("<<<AS_SERVICE_WASH_END>>>	\n");
actionStopFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 4936 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
convert_SystemConfig_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5507 : dfp("sysConfig.trayLeft= [%d] sysConfig.trayRight= [%d]\n",sysConfig.trayLeft, sysConfig.trayRight);
convert_SystemConfig_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5508 : //dfp("initSystemConfig sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
initSystemConfig_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5559 : dfp("initSystemConfig ======== not Save Data --- Init=================== %d\n");
initSpecial in LcasAction_task.c (Ch_AS4\apps_layer) line 5856 : 	dfp("led=%d door=%d leak=%d buz=%d = NO\n",special.LED_onoff,special.Door_check,special.Leak_check,special.Buzzer_onoff);
usedTimeCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6057 : dfp("\n");				
CheckPowerBtn in LcasAction_task.c (Ch_AS4\apps_layer) line 6255 : //dfp("signalIn = 0x%08x\n",signalIn);
LcasAction_task.c (Ch_AS4\apps_layer) line 6314 : dfp("SELF_ERROR_DOOR_OPEN\n");
LcasAction_task.c (Ch_AS4\apps_layer) line 6341 : dfp("SELF_ERROR_LEAK\n");
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6404 : dfp("SELF_ERROR_DOOR_OPEN\n");
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6429 : dfp("SELF_ERROR_LEAK\n");
main in main.c (Ch_AS4) line 552 : 		dfp("MOTOR_Z : DIR CHECK ERROR!!!");
main in main.c (Ch_AS4) line 559 : 		dfp("MOTOR_X : DIR CHECK ERROR!!!");
main in main.c (Ch_AS4) line 565 : 		dfp("MOTOR_Y : DIR CHECK ERROR!!!");
main in main.c (Ch_AS4) line 572 : 		dfp("MOTOR_SYR : DIR CHECK ERROR!!!");
testMain in main.c (Ch_AS4) line 664 : 	//dfp("s1[%08X] s2[%08X] m3[%08X]\n",samState.btMotorState[MOTOR_SAM1], samState.btMotorState[MOTOR_SAM2], samState.btMotorState[MOTOR_M3]);						
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 460 : dfp("Error...... MOVE_ERR_BOTH\n");
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 463 : dfp("Error...... MOVE_ERR_VIALCHK\n");
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 466 : dfp("Error...... MOVE_ERR_NDLCHK\n");							
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 469 : dfp("OK...... MOVE_CMD_OK\n");												
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 557 : dfp("Error...... MOVE_ERR_BOTH %x\n",stateZ);
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 560 : dfp("Error...... MOVE_ERR_VIALCHK %x\n",stateZ);				
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 563 : dfp("Error...... MOVE_ERR_NDLCHK %x\n",stateZ);					
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 590 : 				dfp("AccelStep = %d\n",AccelStep);
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 596 : 				dfp("DeaccStep = %d\n",DeaccStep);				
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 599 : //dfp("[%d] tot=%d Acc=%d deacc=%d min=%d max=%d\n",who,totalStep,AccelStep,DeaccStep, minSpeed, maxSpeed);		
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 615 : //dfp("who[%d] ctrlCmd[0x%x]\n",who,ctrlCmd);				
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 681 : 	dfp("Error...... MOVE_ERR_BOTH\n");
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 685 : 	dfp("Error...... MOVE_ERR_BOTH__VIAL_CHECK\n");								
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 689 : 	dfp("Error...... MOVE_ERR_BOTH__Z_AXIS_CHECK\n");								
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 716 : 				dfp("AccelStep = %d\n",AccelStep);
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 722 : 				dfp("DeaccStep = %d\n",DeaccStep);				
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 728 : dfp("[%d] total=%d  maxSpeed=%d Accel=%d Deacc=%d ctrlCmd=0x%x\n",who,totalStep, maxSpeed, AccelStep, DeaccStep, ctrlCmd);
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 745 : //dfp("who[%d] ctrlCmd[0x%x]\n",who,ctrlCmd);				
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 817 : 	    dfp("subMenu_grpx=%d\n",subMenu_grpx);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 880 : 	    dfp("subMenu_grpy=%d\n",subMenu_grpy);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 901 : dfp("encoderCount =%d\n",encoderCount);
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 944 :     dfp("subMenu_grpz=%d\n",subMenu_grpz);
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 999 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1021 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1043 : dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1062 : 	    dfp("subMenu_rcrx=%d\n",subMenu_rcrx);
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1099 : 	    dfp("subMenu_rcry=%d\n",subMenu_rcry);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1136 :     dfp("subMenu_rcrz=%d\n",subMenu_rcrz);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1160 : dfp("=============================================Count Z=%d\n",encoderCount);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1165 : dfp("encoderCount =%d\n",encoderCount);
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1188 : 	    dfp("subMenu_gpv=%d\n",subMenu_gpv);
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1243 : //dfp("curStep=%d\n",(int)devState.curStep[MOTOR_X]);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1391 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_X]);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1463 : //dfp("curStep=%d\n",(int)devState.curStep[MOTOR_Y]);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1606 : dfp("curStep=%d\n",(int)devState.curStep[MOTOR_Y]);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1772 : 	    dfp("subMenu_gpvz=%d\n",subMenu_gpvz);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1855 : 	    dfp("subMenu_gpez=%d\n",subMenu_gpez);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1955 : 	    dfp("subMenu_gpezc=%d\n",subMenu_gpezc);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2522 : 	    dfp("subMenu_ihpv=%d\n",subMenu_ihpv);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2662 : 	    dfp("subMenu_ihpi=%d\n",subMenu_ihpi);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2806 : 	    dfp("subMenu_ihps=%d\n",subMenu_ihps);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2925 :     dfp("subMenu_ihpz=%d\n",subMenu_ihpz);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3063 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3075 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3114 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3133 : //dfp("stepCount_6=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3153 : //dfp("stepCount_9=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3181 : //dfp("stepCount_12=%d\n",stepCount);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3208 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3332 :     dfp("subMenu_ihpx=%d\n",subMenu_ihpx);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3344 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3384 : //dfp("stepCount_3=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3403 : //dfp("stepCount_6=%d\n",stepCount);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3422 : //dfp("stepCount_9=%d\n",stepCount);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3454 :     dfp("subMenu_ihpy=%d\n",subMenu_ihpy);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3577 :     dfp("subMenu_ihpy=%d\n",subMenu_ihpy);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3680 :     dfp("subMenu_ihpa=%d\n",subMenu_ihpa);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3792 : dfp("====== end function! \n");
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3817 : 		dfp("subMenu_aipec=%d\n",subMenu_aipec);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3963 : 		dfp("subMenu_aipec=%d\n",subMenu_aipec);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4148 :     dfp("subMenu_ami=%d\n",subMenu_ami);
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4345 : 	    dfp("subMenu_ane=%d\n",subMenu_ane);
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4403 :     dfp("subMenu_ase=%d\n",subMenu_ase);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5136 : dfp("devState.command == COMMAND_ABORT\n");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5172 : 			dfp("########MOTOR_Z : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5183 : 				dfp("########MOTOR_X : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5194 : 				dfp("########MOTOR_Y : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5205 : 				dfp("########MOTOR_SYR : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5222 : 		dfp("MOTOR_Z : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5228 : 		dfp("MOTOR_X : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5233 : 		dfp("MOTOR_Y : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5238 : 		dfp("MOTOR_SYR : DIR CHECK ERROR!!!");
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 170 : dfp("check--ERROR--PACKCODE_LCAS_SYSTEM_INFORM (%s)\n",tmp.cModel);
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 175 : dfp("check--EQUAL--PACKCODE_LCAS_SYSTEM_INFORM (%s)\n",tmp.cModel);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 229 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 230 : dfp("tmp.cSerialNo = %s \n",tmp.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 234 : dfp("sysInform.cInstallDate.year = %d month = %d date = %d\n",sysInform.cInstallDate.year,sysInform.cInstallDate.month,sysInform.cInstallDate.date);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 246 : dfp("as_INFO.cSerialNo = %s \n",as_INFO.cSerialNO);
net_SystemConfig in net_AS.c (Ch_AS4\apps_layer) line 536 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 648 : 	dfp("Cal Temp Load !!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 652 : 	dfp("Cal Temp Load Error!!!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 674 : 	dfp("GfTempConstA = %d GfTempConstB = %d GfTempConstC = %d\n", (int)(GfTempConstA*100), (int)(GfTempConstB*100), (int)(GfTempConstC*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 675 : 	dfp("tempCalData.setTemp1 = %d setTemp2 = %d meaTemp1 = %d meaTemp2 = %d\n", (int)(tempCalData.setTemp1*100), (int)(tempCalData.setTemp2*100), (int)(tempCalData.meaTemp1*100),(int)(tempCalData.meaTemp2*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 763 : dfp("Cal Temp Load !!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 767 : dfp("Cal Temp Load Error!!!\n");					
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 788 : dfp("GfTempConstA = %d GfTempConstB = %d GfTempConstC = %d\n", (int)(GfTempConstA*100), (int)(GfTempConstB*100), (int)(GfTempConstC*100));
tempConstCalc in net_AS.c (Ch_AS4\apps_layer) line 789 : dfp("tempCalData.setTemp1 = %d setTemp2 = %d meaTemp1 = %d meaTemp2 = %d\n", (int)(tempCalData.setTemp1*100), (int)(tempCalData.setTemp2*100), (int)(tempCalData.meaTemp1*100),(int)(tempCalData.meaTemp2*100));
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1062 : dfp("tmp.useAuxTimeEvent = %d 	tmp.initAux = %d tmp.auxOutSigTim = %d\n",tmp.useAuxTimeEvent, tmp.initAux,tmp.auxOutSigTime);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1063 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1106 : //dfp("============Time Event :  devState.auxTime100msCnt[%d]=%d\n\r",i,devState.auxTime100msCnt[i]);		
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1108 : dfp("============Time Event :  devState.auxTime100msCnt[%d]=%d\n\r",0,devState.auxTime100msCnt[0]);		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1137 : dfp("ERROR1 : Mix Setup\n");		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1138 : dfp("firstDestPos.uPos rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeDestination,tmp.firstDestPos.uPos.tray,tmp.firstDestPos.uPos.etc, tmp.firstDestPos.uPos.x, tmp.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1139 : dfp("reagentPosA.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentA,tmp.reagentPosA.uPos.tray,tmp.reagentPosA.uPos.etc, tmp.reagentPosA.uPos.x, tmp.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1140 : dfp("reagentPosB.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentB,tmp.reagentPosB.uPos.tray,tmp.reagentPosB.uPos.etc, tmp.reagentPosB.uPos.x, tmp.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1141 : dfp("reagentPosC.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentC,tmp.reagentPosC.uPos.tray,tmp.reagentPosC.uPos.etc, tmp.reagentPosC.uPos.x, tmp.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1142 : dfp("reagentPosD.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentD,tmp.reagentPosD.uPos.tray,tmp.reagentPosD.uPos.etc, tmp.reagentPosD.uPos.x, tmp.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1151 : dfp(" Receive Mix Error \n");		
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1160 : dfp(" Receive Mix Error \n");				
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1169 : dfp(" Receive Mix Error \n");				
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1178 : dfp(" Receive Mix Error \n");					
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1190 : 	dfp("ERROR : Mix Setup = %d %d \n",tmp.firstDestPos.uPos.tray,tmp.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1191 : dfp("firstDestPos.uPos rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeDestination,tmp.firstDestPos.uPos.tray,tmp.firstDestPos.uPos.etc, tmp.firstDestPos.uPos.x, tmp.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1192 : dfp("reagentPosA.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentA,tmp.reagentPosA.uPos.tray,tmp.reagentPosA.uPos.etc, tmp.reagentPosA.uPos.x, tmp.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1193 : dfp("reagentPosB.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentB,tmp.reagentPosB.uPos.tray,tmp.reagentPosB.uPos.etc, tmp.reagentPosB.uPos.x, tmp.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1194 : dfp("reagentPosC.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentC,tmp.reagentPosC.uPos.tray,tmp.reagentPosC.uPos.etc, tmp.reagentPosC.uPos.x, tmp.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1195 : dfp("reagentPosD.uPos  rel=%d tray=%d etc=%d (%d,%d)\n",tmp.relativeReagentD,tmp.reagentPosD.uPos.tray,tmp.reagentPosD.uPos.etc, tmp.reagentPosD.uPos.x, tmp.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1199 : 	dfp(" Mix Setup = %d %d \n",tmp.firstDestPos.uPos.tray,tmp.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1250 : dfp("firstDestVial.pos (%x)\n",mixSet.firstDestPos.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1251 : dfp("reagentVialA.pos (%x)\n",mixSet.reagentPosA.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1252 : dfp("reagentVialB.pos (%x)\n",mixSet.reagentPosB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1253 : dfp("reagentVialC.pos (%x)\n",mixSet.reagentPosC.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1254 : dfp("reagentVialD.pos (%x)\n",mixSet.reagentPosD.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1255 : dfp("firstDestVial.uPos (%d,%d)\n",mixSet.firstDestPos.uPos.x, mixSet.firstDestPos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1256 : dfp("reagentVialA.uPos (%d,%d)\n",mixSet.reagentPosA.uPos.x, mixSet.reagentPosA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1257 : dfp("reagentVialB.uPos (%d,%d)\n",mixSet.reagentPosB.uPos.x, mixSet.reagentPosB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1258 : dfp("reagentVialC.uPos (%d,%d)\n",mixSet.reagentPosC.uPos.x, mixSet.reagentPosC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1259 : dfp("reagentVialD.uPos (%d,%d)\n",mixSet.reagentPosD.uPos.x, mixSet.reagentPosD.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1264 : dfp("sequence.firstSamplePos (%d,%d)\n",sequence.firstSamplePos.uPos.x, sequence.firstSamplePos.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1265 : dfp("firstSamplePosCnt =%d\n",firstSamplePosCnt);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1323 : dfp("cnt = %d  devState.reagentVialB.pos = %d\n",cnt,devState.reagentVialB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1344 : dfp("==============firstDestVial.pos (%x)\n",devState.firstDestVial.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1345 : dfp("reagentVialA.pos (%x)\n",devState.reagentVialA.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1346 : dfp("reagentVialB.pos (%x)\n",devState.reagentVialB.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1347 : dfp("reagentVialC.pos (%x)\n",devState.reagentVialC.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1348 : dfp("reagentVialD.pos (%x)\n",devState.reagentVialD.pos);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1349 : dfp("firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1350 : dfp("reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1351 : dfp("reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1352 : dfp("reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1353 : dfp("reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1445 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1457 : dfp("SELF_ERROR_COMMAND_UNKNOWN\n");
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1458 : dfp("tmp.firstSamplePos.pos = %x\n", tmp.firstSamplePos.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1459 : dfp("tmp.lastSamplePos.pos = %x\n", tmp.lastSamplePos.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1461 : dfp("tmp.firstSamplePos.uPos (%d,%d)\n",tmp.firstSamplePos.uPos.x, tmp.firstSamplePos.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1462 : dfp("tmp.lastSamplePos.uPos (%d,%d)\n",tmp.lastSamplePos.uPos.x, tmp.lastSamplePos.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1464 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1471 : dfp("injectionTimes = %d %x\n", tmp.injectionTimes, tmp.injectionTimes);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1473 : dfp("--PACKCODE_LCAS_SEQUENCE - net_Sequence\n");					
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1540 : dfp("==============firstDestVial.pos (%x)\n",devState.firstDestVial.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1541 : dfp("reagentVialA.pos (%x)\n",devState.reagentVialA.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1542 : dfp("reagentVialB.pos (%x)\n",devState.reagentVialB.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1543 : dfp("reagentVialC.pos (%x)\n",devState.reagentVialC.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1544 : dfp("reagentVialD.pos (%x)\n",devState.reagentVialD.pos);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1545 : dfp("firstDestVial.uPos (%d,%d)\n",devState.firstDestVial.uPos.x, devState.firstDestVial.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1546 : dfp("reagentVialA.uPos (%d,%d)\n",devState.reagentVialA.uPos.x, devState.reagentVialA.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1547 : dfp("reagentVialB.uPos (%d,%d)\n",devState.reagentVialB.uPos.x, devState.reagentVialB.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1548 : dfp("reagentVialC.uPos (%d,%d)\n",devState.reagentVialC.uPos.x, devState.reagentVialC.uPos.y);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1549 : dfp("reagentVialD.uPos (%d,%d)\n",devState.reagentVialD.uPos.x, devState.reagentVialD.uPos.y);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3130 : 				if(IS_REQUEST_PACKET(pData)) {			dfp("XXXXXXXXIS_REQUEST_PACKET--PACKCODE_LCAS_SYSTEM_INFORM\n");				
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3133 : 				else if(IS_ACK_PACKET(pData)){	dfp("ack--PACKCODE_LCAS_SYSTEM_INFORM\n");				}
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3134 : 				else {	dfp("rcv--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3154 : dfp("snd--PACKCODE_LCAS_SYSTEM_INFORM sysInform.cVersion = %s\n",sysInform.cVersion);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3157 : dfp("ack--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3160 : //dfp("rcv--PACKCODE_LCAS_SYSTEM_INFORM\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3172 : dfp("snd--PACKCODE_LCAS_ETHERNET_CONFIG ethernetConfig.cGateway = %s\n",ethernetConfig.cGateway);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3175 : dfp("ack--PACKCODE_LCAS_ETHERNET_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3178 : //dfp("rcv--PACKCODE_LCAS_ETHERNET_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3190 : dfp("snd--PACKCODE_LCAS_SYSTEM_CONFIG sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3193 : dfp("ack--PACKCODE_LCAS_SYSTEM_CONFIG\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3197 : //dfp("rcv--PACKCODE_LCAS_SYSTEM_CONFIG sysConfig.sampleLoopVol= %d\n",sysConfig.sampleLoopVol);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3209 : dfp("snd--PACKCODE_LCAS_RUN_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3212 : dfp("ack--PACKCODE_LCAS_RUN_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3219 : dfp("snd--PACKCODE_LCAS_TIME_EVENT\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3222 : dfp("ack--PACKCODE_LCAS_TIME_EVENT\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3229 : dfp("snd--PACKCODE_LCAS_MIX_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3232 : dfp("ack--PACKCODE_LCAS_MIX_SETUP\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3241 : dfp("snd--PACKCODE_LCAS_SEQUENCE\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3244 : dfp("snd--PACKCODE_LCAS_SEQUENCE\n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3288 : dfp("========================missing %d	\n",devState.missVialResponse);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3306 : dfp("========================missing %d	\n",devState.missVialResponse);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3584 : dfp("PACKCODE_LCAS_SETUP request -- \n");
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3588 : dfp("PACKCODE_LCAS_SETUP  packet \n");
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3624 : dfp("net_ServiceDiagnostics service.subCommand = %d \n",service.subCommand1);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3759 : dfp("Cal Temp - Measure temp 1 Receive!!!\n");
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3775 : dfp("Cal Temp - Measure temp 2 Receive!!!\n");
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3789 : dfp("Cal Temp - TEMP_CAL_SAVE  !!\n");
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3937 : 	dfp("heat=%d %d",usedTime.heatTime,tmp.heatTime);
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3938 : 	dfp("ff=%d %d",ff,tmp.heatTime);
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3939 : 	dfp("iff=0x%x iff=%d %d",iff,tmp.time);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 4029 : dfp("led=%d door=%d leak=%d buz=%d = NO\n",special.LED_onoff,special.Door_check,special.Leak_check,special.Buzzer_onoff);
rtcTime_Init in sysconfig.c (Ch_AS4\apps_layer) line 418 : dfp("rtcWrite_time\n");	
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 479 : dfp("rand = %x %x time=%d\n",r[i], my_mac[i], time);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 595 : dfp("rand = %x %x time=%d\n",r[i], my_mac[i], time);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 601 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 648 : dfp("[default MAC] my_mac[0]=[0x%x] [0x%x] [0x%x] [0x%x] [0x%x] [0x%x] \n\r",
loadEthernetConfig in sysconfig.c (Ch_AS4\apps_layer) line 743 : 	dfp("load === my_ip[0]=[0x%x] [0x%x] [0x%x] [0x%x] \n\r",
tcp_server_accept in tcp_server.c (Ch_AS4\apps_layer) line 202 : dfp("Client is connected \r\n");
machineTest_Function_Set in testPrgm.c (Ch_AS4\apps_layer) line 130 : 	dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 275 : 		dfp("Core_gpioInputn = 0x%08x\n",Core_gpioInput);	
testPrgm.c (Ch_AS4\apps_layer) line 290 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 296 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 302 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 308 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 322 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 328 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 334 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 340 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 353 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 359 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 365 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 371 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
machineTest_Mode_X in testPrgm.c (Ch_AS4\apps_layer) line 401 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_X in testPrgm.c (Ch_AS4\apps_layer) line 446 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_Y in testPrgm.c (Ch_AS4\apps_layer) line 461 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_Y in testPrgm.c (Ch_AS4\apps_layer) line 506 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_Z in testPrgm.c (Ch_AS4\apps_layer) line 521 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_Z in testPrgm.c (Ch_AS4\apps_layer) line 566 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_SYR in testPrgm.c (Ch_AS4\apps_layer) line 581 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_SYR in testPrgm.c (Ch_AS4\apps_layer) line 626 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_VAL in testPrgm.c (Ch_AS4\apps_layer) line 641 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_VAL in testPrgm.c (Ch_AS4\apps_layer) line 686 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
machineTest_Mode_INJ in testPrgm.c (Ch_AS4\apps_layer) line 701 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_INJ in testPrgm.c (Ch_AS4\apps_layer) line 746 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 766 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,func);
machineTest_Mode_X_Y_Z in testPrgm.c (Ch_AS4\apps_layer) line 869 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
machineTest_Mode_X_Y_Z in testPrgm.c (Ch_AS4\apps_layer) line 880 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,acting);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1180 :     dfp("M_TEST_XYZ_Z_UP_LONG=%d\n",M_TEST_XYZ_Z_UP_LONG);		      
machineTest_Mode_VAL_SYR in testPrgm.c (Ch_AS4\apps_layer) line 1306 : 		dfp("devState.actionSubmenu=%d\n",devState.actionSubmenu);
machineTest_Mode_VAL_SYR in testPrgm.c (Ch_AS4\apps_layer) line 1317 : 		dfp("keyin = 0x%08x  func= %d\n",keyin,acting);
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1463 : 						dfp("goVal - POS_VAL_NEEDLE %d \n",func);										
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1509 : 		dfp("goVal - POS_VAL_WASHING %d \n",func);						
machineTest_Mode_VAL_Home in testPrgm.c (Ch_AS4\apps_layer) line 1662 :     dfp("subMenu_mtvh=%d\n",subMenu_mtvh);
machineTest_Mode_SYR_Home in testPrgm.c (Ch_AS4\apps_layer) line 1697 :     dfp("subMenu_mtsh=%d\n",subMenu_mtsh);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1732 :     dfp("subMenu_mtvsc=%d\n",subMenu_mtvsc);
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1746 : //dfp("<<<aspirateSample --- goPosVial>>>!! == devState.btMotorState[MOTOR_Z]=%x\n",devState.btMotorState[MOTOR_Z]);	
machineTest_Mode_BOARD_ALL in testPrgm.c (Ch_AS4\apps_layer) line 1816 : 		dfp("keyin = 0x%08x  0x%08x\n",keyin,keyin1);
machineTest_Mode_BOARD_ALL in testPrgm.c (Ch_AS4\apps_layer) line 1861 : 		dfp("uiMachineTestMode = 0x%08x\n",uiMachineTestMode);
testPrgm.c (Ch_AS4\apps_layer) line 1883 : 		dfp("Core_gpioInputn = 0x%08x\n",Core_gpioInput);	
testPrgm.c (Ch_AS4\apps_layer) line 1889 : dfp("machineTest_Mode = 0x%08\n",Mode);	
testPrgm.c (Ch_AS4\apps_layer) line 1928 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1934 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1940 : 			dfp("=======HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1946 : 			dfp("=========R_HOME_DIR_X = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1960 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1966 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1972 : 			dfp("=======HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1978 : 			dfp("=========R_HOME_DIR_Y = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1991 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 1997 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 2003 : 			dfp("=======HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
testPrgm.c (Ch_AS4\apps_layer) line 2009 : 			dfp("=========R_HOME_DIR_Z = 0x%08x\n",Core_gpioInput);						
---- errorFunction Matches (103 in 9 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 19 : #define errorFunction(X)			{ iprintf( "[%s %d]",__FUNCTION__,__LINE__); errFunction(X); }
debug_inform.h (Ch_AS4\ryu_inc) line 43 : #define errorFunction(X)			{ errFunction(X); }
Def_stepCon.h (Ch_AS4\common_inc) line 353 : 	#define errorEncoder(WHO)			errorFunction(SELF_ERROR_ENCODER_COUNT + WHO)
Def_stepCon.h (Ch_AS4\common_inc) line 355 : 	#define errorEncoder_X()			errorFunction(SELF_ERROR_ENCODER_COUNT_X)
Def_stepCon.h (Ch_AS4\common_inc) line 356 : 	#define errorEncoder_Y()			errorFunction(SELF_ERROR_ENCODER_COUNT_Y)
Def_stepCon.h (Ch_AS4\common_inc) line 357 : 	#define errorEncoder_Z()			errorFunction(SELF_ERROR_ENCODER_COUNT_Z)
Def_stepCon.h (Ch_AS4\common_inc) line 358 : 	#define errorEncoder_SYR()			errorFunction(SELF_ERROR_ENCODER_COUNT_SYR)
Def_stepCon.h (Ch_AS4\common_inc) line 359 : 	#define errorEncoder_VAL()			errorFunction(SELF_ERROR_ENCODER_COUNT_VAL)
Def_stepCon.h (Ch_AS4\common_inc) line 360 : 	#define errorEncoder_INJ()			errorFunction(SELF_ERROR_ENCODER_COUNT_INJ)
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1470 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1478 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1493 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1542 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1551 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1566 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1800 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1808 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1820 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1866 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1874 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1886 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2226 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2235 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2246 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2294 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2302 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2314 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2873 : 			if(devState.connected) errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3355 : 								errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3375 : 								errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3389 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3454 : errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3461 : 								errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3470 : 								errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3653 : errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3661 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3674 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
LcasAction_task.c (Ch_AS4\apps_layer) line 3965 : //int	errorFunction(unsigned char	err)
errFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 3968 : dfpErr("errorFunction=%d\n",err);
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4087 : 				errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
LcasAction_task.c (Ch_AS4\apps_layer) line 6316 : 				errorFunction(SELF_ERROR_DOOR_OPEN);
LcasAction_task.c (Ch_AS4\apps_layer) line 6340 : 				errorFunction(SELF_ERROR_LEAK);  //					sendMsg
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6405 : 				errorFunction(SELF_ERROR_DOOR_OPEN);
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6428 : 				errorFunction(SELF_ERROR_LEAK);  //					sendMsg
LcasAction_task.h (Ch_AS4\inc) line 83 : //int errorFunction(unsigned char err);
main in main.c (Ch_AS4) line 551 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Z);
main in main.c (Ch_AS4) line 558 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_X);
main in main.c (Ch_AS4) line 564 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Y);
main in main.c (Ch_AS4) line 571 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_SYR);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1168 : 							errorFunction(SELF_ERROR_HOME_CHK_Z);
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1301 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1385 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1463 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1518 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1601 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1673 : 		errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2022 : 											errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2114 : 	      		errorFunction(SELF_ERROR_POSITION_Z);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2546 : 		errorFunction(SELF_ERROR_HOME_CHK_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2686 : 		errorFunction(SELF_ERROR_HOME_CHK_INJ);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2830 : 		errorFunction(SELF_ERROR_HOME_CHK_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2858 : 					errorFunction(SELF_ERROR_HOME_CHK_SYR);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2950 : 		errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3039 : 						errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3092 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3190 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3233 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3316 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3361 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3479 : 		errorFunction(SELF_ERROR_HOME_CHK_Y);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3562 : 						errorFunction(SELF_ERROR_HOME_CHK_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3602 : 		errorFunction(SELF_ERROR_HOME_CHK_Y);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5245 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Z);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5251 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_X);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5256 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Y);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5261 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_SYR);
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5363 : 		errorFunction(SELF_ERROR_POSITION_XY);
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 196 : 			errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
net_SystemConfig in net_AS.c (Ch_AS4\apps_layer) line 533 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 949 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 981 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 991 : 					errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 1000 : 					errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1060 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1070 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1240 : 		errorFunction(err);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1455 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1627 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1814 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2945 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3372 : 						errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3629 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3711 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3714 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3730 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3734 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3753 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3764 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3769 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3780 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3984 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
tcp_server.h (Ch_AS4\inc) line 168 : int	errorFunction(unsigned char	err);
netBoardCmd in testPrgm.c (Ch_AS4\apps_layer) line 2135 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
---- mActSet Matches (34 in 2 files) ----
_LCAS_DEV_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 366 : 	MOTOR_ACT_SET_t mActSet[STEP_MOTOR_COUNT];			// 모터동작 설정저장 - (Encoder)실패시 사용
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 848 : 			devState.mActSet[MOTOR_X].act++ ;
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 869 : 					if(devState.mActSet[MOTOR_X].act > GO_POS_RETRY_COUNT) { 
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 911 : 			devState.mActSet[MOTOR_Y].act++ ;
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 930 : 					if(devState.mActSet[MOTOR_Y].act > GO_POS_RETRY_COUNT) { 
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 975 : 			devState.mActSet[MOTOR_Z].act++ ;
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 986 : 					if(devState.mActSet[MOTOR_Z].act > GO_POS_RETRY_COUNT) { 
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1087 : 				devState.mActSet[MOTOR_X].act = 0;
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1098 : 			if(goRetryPos_X(devState.mActSet[MOTOR_X].pos,   devState.mActSet[MOTOR_X].option)) {
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1123 : 				devState.mActSet[MOTOR_Y].act = 0;
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1134 : 			if(goRetryPos_Y(devState.mActSet[MOTOR_Y].pos, devState.mActSet[MOTOR_Y].option)) {
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1160 : 				devState.mActSet[MOTOR_Z].act = 0;
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1163 : 					if(devState.mActSet[MOTOR_Z].pos == POS_Z_TOP && devState.mActSet[MOTOR_Z].option == ACT_Z_POS) {
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1182 : 			if(goRetryPos_Z(devState.mActSet[MOTOR_Z].pos, devState.mActSet[MOTOR_Z].Tray, devState.mActSet[MOTOR_Z].option)) {
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1316 : //	devState.mActSet[MOTOR_X].pos = pVial->uPos.x; //pos;	// vial 좌표 a~e (a1 .. e12)
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1317 : ///	devState.mActSet[MOTOR_X].Tray = pVial->uPos.tray; //Tray;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1318 : 	devState.mActSet[MOTOR_X].option = option;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1355 : 	devState.mActSet[MOTOR_X].pos = pVial->pos;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1402 : 	devState.mActSet[MOTOR_X].pos = pos;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1403 : 	devState.mActSet[MOTOR_X].Tray = Tray;
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1404 : 	devState.mActSet[MOTOR_X].option = option;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1536 : ///	devState.mActSet[MOTOR_Y].Tray = pVial->uPos.tray; //Tray;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1537 : 	devState.mActSet[MOTOR_Y].option = option;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1570 : 	devState.mActSet[MOTOR_Y].pos = pVial->pos;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1617 : 	devState.mActSet[MOTOR_Y].pos = pos;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1618 : 	devState.mActSet[MOTOR_Y].Tray = Tray;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1619 : 	devState.mActSet[MOTOR_Y].option = option;
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1725 : 	devState.mActSet[MOTOR_Z].pos = pos;
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1726 : 	devState.mActSet[MOTOR_Z].option = option;
---- SELF_ERROR_HOME_CHK_Z Matches (4 in 2 files) ----
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1168 : 							errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2950 : 		errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3039 : 						errorFunction(SELF_ERROR_HOME_CHK_Z);
protocolType_AS.h (Ch_AS4\common_inc) line 840 : 	#define	SELF_ERROR_HOME_CHK_Z					22
---- SELF_ERROR_HOME_CHK_SYR Matches (3 in 2 files) ----
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2830 : 		errorFunction(SELF_ERROR_HOME_CHK_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2858 : 					errorFunction(SELF_ERROR_HOME_CHK_SYR);
protocolType_AS.h (Ch_AS4\common_inc) line 841 : 	#define	SELF_ERROR_HOME_CHK_SYR					23
---- SELF_ERROR_HOME_CHK_INJ Matches (2 in 2 files) ----
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2686 : 		errorFunction(SELF_ERROR_HOME_CHK_INJ);
protocolType_AS.h (Ch_AS4\common_inc) line 843 : 	#define	SELF_ERROR_HOME_CHK_INJ					25
---- SELF_ERROR_HOME_FIND_TIME_OUT_SYR Matches (2 in 2 files) ----
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2830 : 		errorFunction(SELF_ERROR_HOME_FIND_TIME_OUT_SYR);
protocolType_AS.h (Ch_AS4\common_inc) line 878 : #define SELF_ERROR_HOME_FIND_TIME_OUT_SYR			114
---- HOME_CHECK_INIT_STEP_Z Matches (2 in 1 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 2494 : #define HOME_CHECK_INIT_STEP_Z			3200	// (3200 / 8 * 0.012192) = 4.8768mm
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2968 : //				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], HOME_CHECK_INIT_STEP_Z);
---- SELF_ERROR_HOME_CHK_X Matches (6 in 2 files) ----
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3092 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3190 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3233 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3316 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3361 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
protocolType_AS.h (Ch_AS4\common_inc) line 855 : 	#define	SELF_ERROR_HOME_CHK_X					20
---- SELF_ERROR_HOME_CHK_VAL Matches (2 in 2 files) ----
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2546 : 		errorFunction(SELF_ERROR_HOME_CHK_VAL);
protocolType_AS.h (Ch_AS4\common_inc) line 859 : 	#define	SELF_ERROR_HOME_CHK_VAL					24
---- SELF_ERROR_HOME_FIND_TIME_OUT_X Matches (1 in 1 files) ----
protocolType_AS.h (Ch_AS4\common_inc) line 876 : #define SELF_ERROR_HOME_FIND_TIME_OUT_X			111
---- SELF_ERROR_HOME_FIND_TIME_OUT_Y Matches (1 in 1 files) ----
protocolType_AS.h (Ch_AS4\common_inc) line 877 : #define SELF_ERROR_HOME_FIND_TIME_OUT_Y			112
---- SELF_ERROR_HOME_FIND_TIME_OUT_Z Matches (3 in 2 files) ----
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2950 : 		errorFunction(SELF_ERROR_HOME_FIND_TIME_OUT_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3039 : 						errorFunction(SELF_ERROR_HOME_FIND_TIME_OUT_Z);
protocolType_AS.h (Ch_AS4\common_inc) line 878 : #define SELF_ERROR_HOME_FIND_TIME_OUT_Z			113
---- SELF_ERROR_HOME_FIND_TIME_OUT_INJ Matches (2 in 2 files) ----
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2686 : 		errorFunction(SELF_ERROR_HOME_FIND_TIME_OUT_INJ);
protocolType_AS.h (Ch_AS4\common_inc) line 881 : #define SELF_ERROR_HOME_FIND_TIME_OUT_INJ			116
---- checkPosition Matches (4 in 4 files) ----
main in main.c (Ch_AS4) line 601 : 		if(devSet.posCheckEnable == YES) checkPosition();
MotorCtrl_task.c (Ch_AS4\apps_layer) line 5339 : void checkPosition()
MotorCtrl_task.h (Ch_AS4\inc) line 136 : void checkPosition();
option_AS.h (Ch_AS4\ryu_inc) line 281 : #define CHECK_POSITION_MODIFY			1		// 에러발생시 checkPosition() 재실행
---- posCheckEnable Matches (10 in 4 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 632 : 	unsigned char posCheckEnable;
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1194 : 				devSet.posCheckEnable = YES;
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1202 : 				devSet.posCheckEnable = NO;
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3623 : devSet.posCheckEnable = YES;
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3631 :       	devSet.posCheckEnable = NO;
main in main.c (Ch_AS4) line 601 : 		if(devSet.posCheckEnable == YES) checkPosition();
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2040 : 			devSet.posCheckEnable = YES;
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2049 : 				devSet.posCheckEnable = NO;		// 포지션 검사중지
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5070 : 	devSet.posCheckEnable = NO;
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5361 : 		devSet.posCheckEnable = NO;
---- posCheck2 Matches (9 in 3 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 635 : 	unsigned char posCheck2;
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1197 : 				devSet.posCheck2 = 0x20; // 니들 이동 검출 
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3626 : devSet.posCheck2 = 0x20; // 니들 이동 검출
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2043 : 			devSet.posCheck2 = 0x20; // 이동중 홈위치 벗어남        : 홈검출 안됨,니들 검출 - 이동
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5073 : //	devSet.posCheck2 = 0x20; // 니들 이동 검출 
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5075 : 	devSet.posCheck2 = 0x20; // 이동중 홈위치 벗어남        : 홈검출 안됨,니들 검출 - 이동
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5342 : 	//devSet.posCheck2 = 0x20; // 니들 이동 검출
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5353 : 	if(btMotorState != devSet.posCheck2) {
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5355 : 	if(btMotorState != devSet.posCheck1 && btMotorState != devSet.posCheck2) {
---- posCheck1 Matches (8 in 3 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 634 : 	unsigned char posCheck1;
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1196 : 				devSet.posCheck1 = 0x30; // 검출 x - 이동전 
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3625 : devSet.posCheck1 = 0x30; // 검출 x - 이동전 
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2042 : 			devSet.posCheck1 = 0x30; //       홈위치(홈센서)(니들,바이알) : 홈,니들 검출 - 이동전
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5072 : //	devSet.posCheck1 = 0x30; // 검출 x - 이동전 
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5074 : 	devSet.posCheck1 = 0x30; // 홈위치(홈센서)(니들,바이알) : 홈,니들 검출 - 이동전
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5341 : 	//devSet.posCheck1 = 0x30; // 검출 x - 이동전
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5355 : 	if(btMotorState != devSet.posCheck1 && btMotorState != devSet.posCheck2) {
---- posCheckMotor Matches (6 in 3 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 633 : 	unsigned char posCheckMotor;
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1195 : 				devSet.posCheckMotor = MOTOR_Z; 
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3624 : devSet.posCheckMotor = MOTOR_Z;
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2041 : 			devSet.posCheckMotor = MOTOR_Z;
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5071 : 	devSet.posCheckMotor = MOTOR_Z; // MOTOR_X;
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5347 : 	who = devSet.posCheckMotor;
---- errorFunction Matches (103 in 9 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 19 : #define errorFunction(X)			{ iprintf( "[%s %d]",__FUNCTION__,__LINE__); errFunction(X); }
debug_inform.h (Ch_AS4\ryu_inc) line 43 : #define errorFunction(X)			{ errFunction(X); }
Def_stepCon.h (Ch_AS4\common_inc) line 353 : 	#define errorEncoder(WHO)			errorFunction(SELF_ERROR_ENCODER_COUNT + WHO)
Def_stepCon.h (Ch_AS4\common_inc) line 355 : 	#define errorEncoder_X()			errorFunction(SELF_ERROR_ENCODER_COUNT_X)
Def_stepCon.h (Ch_AS4\common_inc) line 356 : 	#define errorEncoder_Y()			errorFunction(SELF_ERROR_ENCODER_COUNT_Y)
Def_stepCon.h (Ch_AS4\common_inc) line 357 : 	#define errorEncoder_Z()			errorFunction(SELF_ERROR_ENCODER_COUNT_Z)
Def_stepCon.h (Ch_AS4\common_inc) line 358 : 	#define errorEncoder_SYR()			errorFunction(SELF_ERROR_ENCODER_COUNT_SYR)
Def_stepCon.h (Ch_AS4\common_inc) line 359 : 	#define errorEncoder_VAL()			errorFunction(SELF_ERROR_ENCODER_COUNT_VAL)
Def_stepCon.h (Ch_AS4\common_inc) line 360 : 	#define errorEncoder_INJ()			errorFunction(SELF_ERROR_ENCODER_COUNT_INJ)
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1470 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1478 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1493 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1542 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1551 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1566 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1800 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1808 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1820 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1866 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1874 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1886 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2226 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2235 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2246 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2294 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2302 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2314 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
checkAdjustData in LcasAction_task.c (Ch_AS4\apps_layer) line 2873 : 			if(devState.connected) errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3355 : 								errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3375 : 								errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3389 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3454 : errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3461 : 								errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3470 : 								errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3653 : errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3661 : 							errorFunction(SELF_ERROR_MISSING_VIAL_SKIP);
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3674 : 							errorFunction(SELF_ERROR_MISSING_VIAL_WAIT);
LcasAction_task.c (Ch_AS4\apps_layer) line 3965 : //int	errorFunction(unsigned char	err)
errFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 3968 : dfpErr("errorFunction=%d\n",err);
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4087 : 				errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
LcasAction_task.c (Ch_AS4\apps_layer) line 6316 : 				errorFunction(SELF_ERROR_DOOR_OPEN);
LcasAction_task.c (Ch_AS4\apps_layer) line 6340 : 				errorFunction(SELF_ERROR_LEAK);  //					sendMsg
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6405 : 				errorFunction(SELF_ERROR_DOOR_OPEN);
CheckDeviceState in LcasAction_task.c (Ch_AS4\apps_layer) line 6428 : 				errorFunction(SELF_ERROR_LEAK);  //					sendMsg
LcasAction_task.h (Ch_AS4\inc) line 83 : //int errorFunction(unsigned char err);
main in main.c (Ch_AS4) line 551 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Z);
main in main.c (Ch_AS4) line 558 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_X);
main in main.c (Ch_AS4) line 564 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Y);
main in main.c (Ch_AS4) line 571 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_SYR);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1168 : 							errorFunction(SELF_ERROR_HOME_CHK_Z);
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1301 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1385 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1463 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1518 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1601 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1673 : 		errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2022 : 											errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2114 : 	      		errorFunction(SELF_ERROR_POSITION_Z);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2546 : 		errorFunction(SELF_ERROR_HOME_CHK_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2686 : 		errorFunction(SELF_ERROR_HOME_CHK_INJ);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2830 : 		errorFunction(SELF_ERROR_HOME_CHK_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2855 : 					errorFunction(SELF_ERROR_HOME_CHK_SYR);					// error
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2947 : 		errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3036 : 						errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3089 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3187 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3230 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3313 : 						errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3358 : 		errorFunction(SELF_ERROR_HOME_CHK_X);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3476 : 		errorFunction(SELF_ERROR_HOME_CHK_Y);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3559 : 						errorFunction(SELF_ERROR_HOME_CHK_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3599 : 		errorFunction(SELF_ERROR_HOME_CHK_Y);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5242 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Z);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5248 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_X);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5253 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_Y);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5258 : //		errorFunction(SELF_ERROR_CHECK_ENCODER_SYR);
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5360 : 		errorFunction(SELF_ERROR_POSITION_XY);
net_CheckModel in net_AS.c (Ch_AS4\apps_layer) line 196 : 			errorFunction(SELF_ERROR_NO_ADJUSTMENT_DATA);
net_SystemConfig in net_AS.c (Ch_AS4\apps_layer) line 533 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 949 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 981 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 991 : 					errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 1000 : 					errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1060 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1070 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1240 : 		errorFunction(err);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1455 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1627 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1814 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2945 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3372 : 						errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3629 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3711 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceDiagnostics in net_AS.c (Ch_AS4\apps_layer) line 3714 : errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3730 : 			errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3734 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3753 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3764 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3769 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3780 : 				errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3984 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
tcp_server.h (Ch_AS4\inc) line 168 : int	errorFunction(unsigned char	err);
netBoardCmd in testPrgm.c (Ch_AS4\apps_layer) line 2135 : 		errorFunction(SELF_ERROR_COMMAND_UNKNOWN);
---- SELF_ERROR_POSITION_Z Matches (10 in 3 files) ----
errFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 4039 : 		case SELF_ERROR_POSITION_Z: //						16
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1301 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1385 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1463 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1518 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1601 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1673 : 		errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2022 : 											errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2114 : 	      		errorFunction(SELF_ERROR_POSITION_Z);
protocolType_AS.h (Ch_AS4\common_inc) line 835 : 	#define SELF_ERROR_POSITION_Z						16
---- NDEBUG_DP Matches (4 in 3 files) ----
debug_inform.h (Ch_AS4\ryu_inc) line 7 : #ifndef NDEBUG_DP
define_AS.h (Ch_AS4\ryu_inc) line 28 : //	#define NDEBUG_DP
define_AS.h (Ch_AS4\ryu_inc) line 33 : //	#define NDEBUG_DP
option_AS.h (Ch_AS4\ryu_inc) line 9 : //#define NDEBUG_DP
---- CMD_CHK_DIR_START Matches (14 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 414 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0; \
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1367 : 			CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1370 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1447 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1584 : 			CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1586 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1659 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1758 : 			CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1760 : 		dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2229 : 			CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2231 : 		printf("## MOTOR_SYR CMD_CHK_DIR_START chk_DirS=%08x cur=%f act=%f step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2106 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2110 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2114 : CMD_CHK_DIR_START(i);
---- CMD_CHK_DIR_START Matches (14 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 420 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0; \
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1367 : 			CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1370 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1447 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1584 : 			CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1586 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1659 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1758 : 			CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1760 : 		dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2229 : 			CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2231 : 		printf("## MOTOR_SYR CMD_CHK_DIR_START chk_DirS=%08x cur=%f act=%f step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2106 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2110 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2114 : CMD_CHK_DIR_START(i);
---- saveSystemInform Matches (4 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 5112 : void saveSystemInform(int who)
LcasAction_task.h (Ch_AS4\inc) line 112 : void saveSystemInform(int who);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 351 : 		saveSystemInform(0);
sysconfig.h (Ch_AS4\inc) line 152 : void saveSystemInform(int who);
---- saveSystemInform Matches (4 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 5112 : void saveSystemInform(int who)
LcasAction_task.h (Ch_AS4\inc) line 112 : void saveSystemInform(int who);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 351 : 		saveSystemInform(0);
sysconfig.h (Ch_AS4\inc) line 152 : void saveSystemInform(int who);
---- AS2022072144 Matches (0 in 0 files) ----
---- cSerialNo Matches (33 in 4 files) ----
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4964 : 		memcpy(sysInform.cSerialNo, &data[1], SYSTEM_INFORM_DATA_READ_SERIAL);
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4965 : 		memcpy(as_INFO.cSerialNO, sysInform.cSerialNo, SYSTEM_INFORM_DATA_READ_SERIAL);
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5028 : //		memcpy(sysInform.cSerialNo, as_INFO.cSerialNO, SYSTEM_INFORM_DATA_READ_SERIAL);	
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5038 : //		strcpy(sysInform.cSerialNo, "AS2017171112");
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5047 : 	memcpy(sysInform.cSerialNo, as_INFO.cSerialNO, SYSTEM_INFORM_DATA_READ_SERIAL); 
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5122 : 			memcpy(&data[1], &(sysInform.cSerialNo) , SYSTEM_INFORM_DATA_READSIZE);
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5127 : 			memcpy(&data[1], &(sysInform.cSerialNo) , SYSTEM_INFORM_DATA_READ_SERIAL);
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5131 : 			memcpy(&data[1], &(sysInform.cSerialNo) , SYSTEM_INFORM_DATA_READ_SERIAL);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 224 : //strcpy(tmp.cSerialNo, "FAS-3456-170927F");
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 225 : 	if(tmp.cSerialNo[0] == 'F' && tmp.cSerialNo[13] == 'F') {
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 226 : //		strcpy(sysInform.cSerialNo, &tmp.cSerialNo[1]);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 227 : 		strncpy(sysInform.cSerialNo, &tmp.cSerialNo[1],12);	
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 228 : 		sysInform.cSerialNo[12] = '\0';
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 229 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 230 : dfp("tmp.cSerialNo = %s \n",tmp.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 242 : 	if(tmp.cSerialNo[0] == 'F' && tmp.cSerialNo[1] == 'F') {
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 243 : 		memcpy(as_INFO.cSerialNO, &tmp.cSerialNo[2], 14);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 246 : dfp("as_INFO.cSerialNo = %s \n",as_INFO.cSerialNO);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 270 : 	if(strcmp(tmp.cSerialNo, "SYSTIME")) {			// 같지 않으면 
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 340 : // cSerialNo == "AAA"일경우 cIPAddress , cPortNo 변경가능 
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 341 : 	if(strcmp(tmp.cSerialNo, "IPADDR")) {			// 같지 않으면 
_SYSTEM_INFORM_t in protocolType_AS.h (Ch_AS4\common_inc) line 50 : 	char cSerialNo[17];		// 시리얼번호 - Serial No ex) AS 2345 161031 7654 --> AS 2345 161031 1DE6
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 601 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 603 : 			strncpy(tmpMac, &sysInform.cSerialNo[4],2);	
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 607 : 			strncpy(tmpMac, &sysInform.cSerialNo[10],2);	
sysconfig.c (Ch_AS4\apps_layer) line 775 : // =================== Serial No + install Date		// sysInform // eepromRead_Data((SYSTEM_INFORM_DATA_ADDR), SYSTEM_INFORM_DATA_READSIZE, &(sysInform.cSerialNo));
---- saveSystemInform Matches (5 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 5112 : void saveSystemInform(int who)
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5135 : printf("saveSystemInform(%d)\n",who);	
LcasAction_task.h (Ch_AS4\inc) line 112 : void saveSystemInform(int who);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 351 : 		saveSystemInform(0);
sysconfig.h (Ch_AS4\inc) line 152 : void saveSystemInform(int who);
---- saveSystemInform Matches (5 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 5112 : void saveSystemInform(int who)
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5135 : printf("saveSystemInform(%d)\n",who);	
LcasAction_task.h (Ch_AS4\inc) line 112 : void saveSystemInform(int who);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 351 : 		saveSystemInform(0);
sysconfig.h (Ch_AS4\inc) line 152 : void saveSystemInform(int who);
---- cSerialNo Matches (33 in 4 files) ----
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4964 : 		memcpy(sysInform.cSerialNo, &data[1], SYSTEM_INFORM_DATA_READ_SERIAL);
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4965 : 		memcpy(as_INFO.cSerialNO, sysInform.cSerialNo, SYSTEM_INFORM_DATA_READ_SERIAL);
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5028 : //		memcpy(sysInform.cSerialNo, as_INFO.cSerialNO, SYSTEM_INFORM_DATA_READ_SERIAL);	
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5038 : //		strcpy(sysInform.cSerialNo, "AS2017171112");
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5047 : 	memcpy(sysInform.cSerialNo, as_INFO.cSerialNO, SYSTEM_INFORM_DATA_READ_SERIAL); 
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5122 : 			memcpy(&data[1], &(sysInform.cSerialNo) , SYSTEM_INFORM_DATA_READSIZE);
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5127 : 			memcpy(&data[1], &(sysInform.cSerialNo) , SYSTEM_INFORM_DATA_READ_SERIAL);
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5131 : 			memcpy(&data[1], &(sysInform.cSerialNo) , SYSTEM_INFORM_DATA_READ_SERIAL);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 224 : //strcpy(tmp.cSerialNo, "FAS-3456-170927F");
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 225 : 	if(tmp.cSerialNo[0] == 'F' && tmp.cSerialNo[13] == 'F') {
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 226 : //		strcpy(sysInform.cSerialNo, &tmp.cSerialNo[1]);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 227 : 		strncpy(sysInform.cSerialNo, &tmp.cSerialNo[1],12);	
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 228 : 		sysInform.cSerialNo[12] = '\0';
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 229 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 230 : dfp("tmp.cSerialNo = %s \n",tmp.cSerialNo);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 242 : 	if(tmp.cSerialNo[0] == 'F' && tmp.cSerialNo[1] == 'F') {
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 243 : 		memcpy(as_INFO.cSerialNO, &tmp.cSerialNo[2], 14);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 246 : dfp("as_INFO.cSerialNo = %s \n",as_INFO.cSerialNO);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 270 : 	if(strcmp(tmp.cSerialNo, "SYSTIME")) {			// 같지 않으면 
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 340 : // cSerialNo == "AAA"일경우 cIPAddress , cPortNo 변경가능 
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 341 : 	if(strcmp(tmp.cSerialNo, "IPADDR")) {			// 같지 않으면 
_SYSTEM_INFORM_t in protocolType_AS.h (Ch_AS4\common_inc) line 50 : 	char cSerialNo[17];		// 시리얼번호 - Serial No ex) AS 2345 161031 7654 --> AS 2345 161031 1DE6
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 601 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 603 : 			strncpy(tmpMac, &sysInform.cSerialNo[4],2);	
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 607 : 			strncpy(tmpMac, &sysInform.cSerialNo[10],2);	
sysconfig.c (Ch_AS4\apps_layer) line 775 : // =================== Serial No + install Date		// sysInform // eepromRead_Data((SYSTEM_INFORM_DATA_ADDR), SYSTEM_INFORM_DATA_READSIZE, &(sysInform.cSerialNo));
---- cSerialNO Matches (13 in 4 files) ----
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4965 : 		memcpy(as_INFO.cSerialNO, sysInform.cSerialNo, SYSTEM_INFORM_DATA_READ_SERIAL);
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4975 : 		NVM_write(INFO_SERIAL_NO_ENVM_ADDR, &as_INFO.cSerialNO[0], INFO_SERIAL_NO_ENVM_LEN, NVM_DO_NOT_LOCK_PAGE);
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5027 : 		memcpy(as_INFO.cSerialNO, &data[0], (INFO_SERIAL_NO_ENVM_LEN));
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5028 : //		memcpy(sysInform.cSerialNo, as_INFO.cSerialNO, SYSTEM_INFORM_DATA_READ_SERIAL);	
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5039 :  		memcpy(as_INFO.cSerialNO, "AS2021171112", (INFO_SERIAL_NO_ENVM_LEN));
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5047 : 	memcpy(sysInform.cSerialNo, as_INFO.cSerialNO, SYSTEM_INFORM_DATA_READ_SERIAL); 
save_SerialNo_InstallDate_Envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5149 : 	memcpy(&idata[0] ,&oven_INFO.cSerialNO[0], sizeof(oven_INFO.cSerialNO));
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 243 : 		memcpy(as_INFO.cSerialNO, &tmp.cSerialNo[2], 14);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 244 : 		as_INFO.cSerialNO[16] = '\0';
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 246 : dfp("as_INFO.cSerialNo = %s \n",as_INFO.cSerialNO);
_CHROZEN_INFORMATION_t in protocolType_AS.h (Ch_AS4\common_inc) line 1083 : 	unsigned char	cSerialNO[32]; //SerialNo[32];
init_system in sysconfig.c (Ch_AS4\apps_layer) line 361 : //	as_INFO.cSerialNO;
---- sysInform.cSerialNo Matches (18 in 3 files) ----
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4964 : 		memcpy(sysInform.cSerialNo, &data[1], SYSTEM_INFORM_DATA_READ_SERIAL);
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4965 : 		memcpy(as_INFO.cSerialNO, sysInform.cSerialNo, SYSTEM_INFORM_DATA_READ_SERIAL);
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5028 : //		memcpy(sysInform.cSerialNo, as_INFO.cSerialNO, SYSTEM_INFORM_DATA_READ_SERIAL);	
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5038 : //		strcpy(sysInform.cSerialNo, "AS2017171112");
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5047 : 	memcpy(sysInform.cSerialNo, as_INFO.cSerialNO, SYSTEM_INFORM_DATA_READ_SERIAL); 
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5122 : 			memcpy(&data[1], &(sysInform.cSerialNo) , SYSTEM_INFORM_DATA_READSIZE);
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5127 : 			memcpy(&data[1], &(sysInform.cSerialNo) , SYSTEM_INFORM_DATA_READ_SERIAL);
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5131 : 			memcpy(&data[1], &(sysInform.cSerialNo) , SYSTEM_INFORM_DATA_READ_SERIAL);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 226 : //		strcpy(sysInform.cSerialNo, &tmp.cSerialNo[1]);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 227 : 		strncpy(sysInform.cSerialNo, &tmp.cSerialNo[1],12);	
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 228 : 		sysInform.cSerialNo[12] = '\0';
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 229 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 601 : dfp("sysInform.cSerialNo = %s \n",sysInform.cSerialNo);
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 603 : 			strncpy(tmpMac, &sysInform.cSerialNo[4],2);	
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 607 : 			strncpy(tmpMac, &sysInform.cSerialNo[10],2);	
sysconfig.c (Ch_AS4\apps_layer) line 775 : // =================== Serial No + install Date		// sysInform // eepromRead_Data((SYSTEM_INFORM_DATA_ADDR), SYSTEM_INFORM_DATA_READSIZE, &(sysInform.cSerialNo));
---- initSystemInform_envm Matches (4 in 2 files) ----
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4978 : //	else initSystemInform_envm();
LcasAction_task.c (Ch_AS4\apps_layer) line 5011 : void initSystemInform_envm()
initSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5109 : 	initSystemInform_envm();
LcasAction_task.h (Ch_AS4\inc) line 110 : void initSystemInform_envm();
---- INFO_SERIAL_NO_ENVM_ADDR Matches (4 in 2 files) ----
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4975 : 		NVM_write(INFO_SERIAL_NO_ENVM_ADDR, &as_INFO.cSerialNO[0], INFO_SERIAL_NO_ENVM_LEN, NVM_DO_NOT_LOCK_PAGE);
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5026 : 		MSS_NVM_read( (uint8_t *)INFO_SERIAL_NO_ENVM_ADDR, data, INFO_SERIAL_NO_ENVM_LEN);
LcasAction_task.c (Ch_AS4\apps_layer) line 5151 : 	ret = NVM_write(INFO_SERIAL_NO_ENVM_ADDR, idata, INFO_SERIAL_NO_ENVM_LEN, NVM_DO_NOT_LOCK_PAGE);
sysconfig.h (Ch_AS4\inc) line 84 : #define INFO_SERIAL_NO_ENVM_ADDR				(INFO_COMMON_VER_SER_ENVM_ADDR + SERIOL_NO_STORAGE_OFFSET) 	// saveFlag : 0x3F300
---- int save_SerialNo_InstallDate_Envm() Matches (1 in 1 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 5139 : int save_SerialNo_InstallDate_Envm()
---- saveSystemInform Matches (5 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 5112 : void saveSystemInform(int who)
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5135 : printf("saveSystemInform(%d)\n",who);	
LcasAction_task.h (Ch_AS4\inc) line 112 : void saveSystemInform(int who);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 351 : 		saveSystemInform(0);
sysconfig.h (Ch_AS4\inc) line 152 : void saveSystemInform(int who);
---- STORE_INFORMATION_ENVM Matches (13 in 8 files) ----
EEPROM.c (Ch_AS4\BSP\EEPROM_Driver) line 414 : #if STORE_INFORMATION_ENVM
EEPROM.h (Ch_AS4\BSP\EEPROM_Driver) line 427 : #if STORE_INFORMATION_ENVM
LcasAction_task.c (Ch_AS4\apps_layer) line 5880 : #if	STORE_INFORMATION_ENVM
LcasAction_task.c (Ch_AS4\apps_layer) line 6018 : #if	STORE_INFORMATION_ENVM
main in main.c (Ch_AS4) line 224 : #if	STORE_INFORMATION_ENVM
save_EEPROM_sysConfig_data in net_AS.c (Ch_AS4\apps_layer) line 582 : #if STORE_INFORMATION_ENVM	
net_AS.c (Ch_AS4\apps_layer) line 626 : #if STORE_INFORMATION_ENVM
save_EEPROM_special_data in net_AS.c (Ch_AS4\apps_layer) line 4040 : #if STORE_INFORMATION_ENVM	
option_AS.h (Ch_AS4\ryu_inc) line 374 : #define STORE_INFORMATION_ENVM			1
Protocol_AS.h (Ch_AS4\common_inc) line 100 : #if STORE_INFORMATION_ENVM
init_system in sysconfig.c (Ch_AS4\apps_layer) line 333 : #if	STORE_INFORMATION_ENVM
sysconfig.c (Ch_AS4\apps_layer) line 454 : #if STORE_INFORMATION_ENVM
init_IpAddr in sysconfig.c (Ch_AS4\apps_layer) line 697 : #if STORE_INFORMATION_ENVM
---- INFORM_COMMON_STORAGE_USE Matches (5 in 3 files) ----
option_AS.h (Ch_AS4\ryu_inc) line 376 : #define INFORM_COMMON_STORAGE_USE			1			// serial / ip /mac 등 LC 공통 영역 사용
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 488 : #if INFORM_COMMON_STORAGE_USE
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 517 : #if INFORM_COMMON_STORAGE_USE
sysconfig.c (Ch_AS4\apps_layer) line 774 : #if INFORM_COMMON_STORAGE_USE
sysconfig.h (Ch_AS4\inc) line 70 : #if INFORM_COMMON_STORAGE_USE
---- saveSystemInform Matches (5 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 5112 : void saveSystemInform(int who)
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5135 : printf("saveSystemInform(%d)\n",who);	
LcasAction_task.h (Ch_AS4\inc) line 112 : void saveSystemInform(int who);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 351 : 		saveSystemInform(0);
sysconfig.h (Ch_AS4\inc) line 152 : void saveSystemInform(int who);
---- save_SerialNo_InstallDate_Envm Matches (4 in 3 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 5139 : int save_SerialNo_InstallDate_Envm()
LcasAction_task.h (Ch_AS4\inc) line 114 : int save_SerialNo_InstallDate_Envm();
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 257 : 		save_SerialNo_InstallDate_Envm();
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 352 : 		save_SerialNo_InstallDate_Envm();		
---- net_SystemInform Matches (5 in 3 files) ----
net_AS.c (Ch_AS4\apps_layer) line 202 : int net_SystemInform(char *pData)
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3156 : 			net_SystemInform(pData);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3158 : 			return net_SystemInform(pData);
net_AS.h (Ch_AS4\inc) line 34 : int net_SystemInform(char *pData);
tcp_server.h (Ch_AS4\inc) line 97 : int net_SystemInform(char *pData);
---- printf Matches (109 in 23 files) ----
ADC_reading in adc_if_AS.c (Ch_AS4\apps_layer) line 196 : //printf("ad=%08X extTemp=%08X %8.4f %8.4f %8.3f\n", ad, extAD, ext_Temp, oven_Volt, gOVEN_STATE.fTemperature);
ADC_reading in adc_if_AS.c (Ch_AS4\apps_layer) line 255 : //printf("ad=%08X extTemp=%08X %8.4f %8.4f %8.3f\n", ad, extAD, ext_Temp, oven_Volt, gOVEN_STATE.fTemperature);			
ADC_reading in adc_if_AS.c (Ch_AS4\apps_layer) line 256 : //printf("Power v33=%8.4f v50=%8.4f v12=%8.4f\n", ovenDiag.sysVolt[1], ovenDiag.sysVolt[2], ovenDiag.sysVolt[5]);
ADC_reading in adc_if_AS.c (Ch_AS4\apps_layer) line 257 : //printf("Error D_err=%8.4f L_err=%8.4f T1_err=%8.4f T2_err=%8.4f\n", errVolt[0],errVolt[1],errVolt[2],errVolt[3]);
cc.h (Ch_AS4\lwIP\arch) line 67 : #define LWIP_PLATFORM_DIAG(x) printf("%s\n", x);  
cc.h (Ch_AS4\lwIP\arch) line 68 : #define LWIP_PLATFORM_ASSERT(x) printf("%s\n", x);  
debug.h (Ch_AS4\lwIP\include\lwip) line 94 : 	                                   printf(message);\
LWIP_DEBUG_I in debug.h (Ch_AS4\lwIP\include\lwip) line 111 :                               printf(fmt, ##args);\
LWIP_DEBUG_E in debug.h (Ch_AS4\lwIP\include\lwip) line 122 :                                   printf(fmt, ##args);\
debug_inform.h (Ch_AS4\ryu_inc) line 14 : #define dprintf(fmt,args...) printf( fmt, ## args )
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 590 :   printf("dhcp_start(netif=%p) %c%c%"U16_F"\n", (void*)netif, netif->name[0], netif->name[1], (u16_t)netif->num);
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 597 : 	  printf("dhcp_start(): Cannot use this netif with DHCP: MTU is too small\n");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 603 : 	  printf("dhcp_start(): starting new DHCP client\n");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 606 :     	printf("dhcp_start(): could not allocate dhcp\n");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 611 :     printf("dhcp_start(): allocated dhcp");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 614 : 	  printf("dhcp_start(): restarting DHCP configuration\n");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 628 : 	  printf("dhcp_start(): could not obtain pcb\n");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 641 :   printf("dhcp_start(): starting DHCP configuration\n");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 670 : 	  printf("dhcp_inform(): could not allocate dhcp\n");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 675 :   printf("dhcp_inform(): allocated dhcp\n");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 678 : 	  printf("dhcp_inform(): could not obtain pcb");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 683 :   printf("dhcp_inform(): created new udp pcb\n");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 702 :     printf("dhcp_inform: INFORMING\n");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 706 : 	  printf("dhcp_inform: could not allocate DHCP request\n");
dhcp_discover in dhcp.c (Ch_AS4\lwIP\core) line 829 :   printf("dhcp_discover()\r\n");
dhcp_bind in dhcp.c (Ch_AS4\lwIP\core) line 951 :   printf("dhcp_bind(): IP: 0x%08"X32_F"\n", dhcp->offered_ip_addr.addr);
dhcp_bind in dhcp.c (Ch_AS4\lwIP\core) line 953 :   printf("dhcp_bind(): SN: 0x%08"X32_F"\n", sn_mask.addr);
dhcp_bind in dhcp.c (Ch_AS4\lwIP\core) line 955 :   printf("dhcp_bind(): GW: 0x%08"X32_F"\n", gw_addr.addr);
ethernet_input in etharp.c (Ch_AS4\lwIP\netif) line 1167 : 	  printf("ethernet_input: dest:%02x:%02x:%02x:%02x:%02x:%02x, src:%02x:%02x:%02x:%02x:%02x:%02x, type:%2xh\r\n",
lwip_init in init.c (Ch_AS4\lwIP\core) line 236 :   printf("Configuring Network, Please wait....\r\n");
Interrupt.c (Ch_AS4\apps_layer) line 94 :  * Do not use printf clause (Antony)
ip_addr.h (Ch_AS4\lwIP\include\ipv4\lwip) line 158 :  * to printf using the U16_F format from cc.h. */
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5029 : printf("####### read Serial No : [%s] [%c]\n", &data[0], data[0]);
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5135 : printf("saveSystemInform(%d)\n",who);	
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 150 : //	printf("IP address, Net mask, GW address are defined in <conf_eth.h>\r\n");
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 157 : 	printf("Static IP address  %d.%d.%d.%d\r\n", ETHERNET_CONF_IPADDR3, ETHERNET_CONF_IPADDR2, ETHERNET_CONF_IPADDR1, ETHERNET_CONF_IPADDR0);
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 163 : 	printf("Static IP address  %d.%d.%d.%d\r\n", my_ip[3], my_ip[2], my_ip[1], my_ip[0]);
netif_config in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 208 : 	printf("Static IP address  %d.%d.%d.%d\r\n", my_ip[0], my_ip[1], my_ip[2], my_ip[3]);
netif_config in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 213 : 	printf("Static IP address  %d.%d.%d.%d\r\n", ETHERNET_CONF_IPADDR0, ETHERNET_CONF_IPADDR1, ETHERNET_CONF_IPADDR2, ETHERNET_CONF_IPADDR3);
low_level_init in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 327 :     //printf("My hwaddr -> %02X:%02X:%02X:%02X:%02X:%02X\r\n",
ethernetif_input in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 664 :     //	printf("Len : %4ld, %02X %02X\r\n",pckt_length,*(uint8_t *)p->payload,*(((uint8_t *)p->payload)+1));
initStepCtrlData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2483 : printf("	initStepCtrlData()    \n");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5186 : 			printf("########MOTOR_Z : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5187 : 			printf("[Z %08x] [Y %08x] [X %08x] [S %08x]\n",devState.chk_Dir[MOTOR_Z],devState.chk_Dir[MOTOR_Y],devState.chk_Dir[MOTOR_X],devState.chk_Dir[MOTOR_SYR]); 
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5199 : 			printf("########MOTOR_X : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5200 : 			printf("[Z %08x] [Y %08x] [X %08x] [S %08x]\n" ,devState.chk_Dir[MOTOR_Z],devState.chk_Dir[MOTOR_Y],devState.chk_Dir[MOTOR_X],devState.chk_Dir[MOTOR_SYR]);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5212 : 			printf("########MOTOR_Y : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5213 : 			printf("[Z %08x] [Y %08x] [X %08x] [S %08x]\n" ,devState.chk_Dir[MOTOR_Z],devState.chk_Dir[MOTOR_Y],devState.chk_Dir[MOTOR_X],devState.chk_Dir[MOTOR_SYR]);		
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5225 : 			printf("########MOTOR_SYR : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5226 : 			printf("[Z %08x] [Y %08x] [X %08x] [S %08x]\n" ,devState.chk_Dir[MOTOR_Z],devState.chk_Dir[MOTOR_Y],devState.chk_Dir[MOTOR_X],devState.chk_Dir[MOTOR_SYR]);	
LwIP_Periodic_Handle in netconf.c (Ch_AS4\apps_layer) line 117 : 		//printf("tcp_tmr\r\n");
LwIP_DHCP_Process_Handle in netconf.c (Ch_AS4\apps_layer) line 198 :             printf("IP address assigned by a DHCP server\r\n");
LwIP_DHCP_Process_Handle in netconf.c (Ch_AS4\apps_layer) line 199 :             printf("%d.%d.%d.%d\r\n", iptab[3], iptab[2], iptab[1], iptab[0]);
LwIP_DHCP_Process_Handle in netconf.c (Ch_AS4\apps_layer) line 225 :                 printf("DHCP timeout\r\n");
LwIP_DHCP_Process_Handle in netconf.c (Ch_AS4\apps_layer) line 226 :                 printf("Static IP address\r\n");
LwIP_DHCP_Process_Handle in netconf.c (Ch_AS4\apps_layer) line 227 :                 printf("%d.%d.%d.%d\r\n", iptab[3], iptab[2], iptab[1], iptab[0]);
netif_set_addr in netif.c (Ch_AS4\lwIP\core) line 190 : 	//printf("[netif_set_ipaddr()]\r\n");
netif_set_addr in netif.c (Ch_AS4\lwIP\core) line 192 : 	//printf("[netif_set_netmask()]\r\n");
netif_set_addr in netif.c (Ch_AS4\lwIP\core) line 194 : 	//printf("[netif_set_gw()]\r\n");
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 293 :     //printf("netif_set_ipaddr: netif address being changed\r\n");
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 294 : 	  //printf("Active pcb : tcp_active_pcbs\r\n");
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 301 :         printf("netif_set_ipaddr: aborting TCP pcb %p\n", (void *)pcb);
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 326 : 	//printf("netif: IP address of interface %02X%02X set to %d.%d.%d.%d\r\n",
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 340 : 		//printf("IP address setting completed !!\r\n");
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 341 : 		printf("Requested IP address : %d.%d.%d.%d\r\n",addr1,addr2,addr3,addr4);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 249 : //printf("as_INFO.cSerialNo = %s \n",as_INFO.cSerialNO);
newlib_stubs.c (Ch_AS4\firmware\CMSIS\startup_gcc) line 18 :  * A default implementation for the redirection of the output of printf() to a
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 323 : //	printf("[%01d] t=[%04d] L0=[%04d] LS=[%04d] LF=[%04d]",ctrl,time,timeL0,timeLS,timeLF);
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 568 : //	printf("[%01d] t=[%04d] L0=[%04d] LS=[%04d] LF=[%04d]",ctrl,time,timeL0,timeLS,timeLF);
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1154 : //	printf("===PID_FREE_COOLING_CONT==[%1d] act = [%8.4f] timeL0 = [%8.4f]\n",ctrl,actValue,timeL0) ;
pppdebug.h (Ch_AS4\lwIP\netif\ppp) line 58 :  * ppp_trace - a form of printf to send tracing information to stderr
pppoe_find_softc_by_hunique in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 363 :     printf("%c%c%"U16_F": host unique tag found, but it belongs to a connection in state %d\n",
pppoe_find_softc_by_hunique in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 368 :     printf("%c%c%"U16_F": wrong interface, not accepting host unique\n",
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 423 :     printf("pppoe: packet too short: %d\n", pb->len);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 429 :     printf("pppoe: unknown version/type packet: 0x%x\n", ph->vertype);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 437 :     printf("pppoe: packet content does not fit: data available = %d, packet size = %u\n",
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 452 :       printf("pppoe: tag 0x%x len 0x%x is too long\n", tag, len);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 504 :         printf("%s: %s: %s\n", devname, err_msg, error);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 507 :         printf("%s: %s\n", devname, err_msg);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 539 :         /* printf("pppoe: free passive interface is not found\n"); */
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 565 :         printf("pppoe: received PADR but not includes ac_cookie\n");
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 572 :           printf("pppoe: received PADR but could not find request for it\n");
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 577 :         printf("%c%c%"U16_F": received unexpected PADR\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 603 :           printf("pppoe: received PADO but could not find request for it\n");
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 608 :         printf("%c%c%"U16_F": received unexpected PADO\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 649 :         printf("%c%c%"U16_F": unknown code (0x%04x) session = 0x%04x\n",
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 653 :         printf("pppoe: unknown code (0x%04x) session = 0x%04x\n", ph->code, session);
pppoe_data_input in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 697 :     printf("pppoe (data): dropping too short packet: %d bytes\n", pb->len);
pppoe_data_input in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 702 :     printf("pppoe_data_input: could not get PPPoE header\n");
pppoe_data_input in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 708 :     printf("pppoe (data): unknown version/type packet: 0x%x\n", ph->vertype);
pppoe_data_input in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 719 :     printf("pppoe: input for unknown session 0x%x, sending PADT\n", session);
pppoe_abort_connect in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 982 :   printf("%c%c%"U16_F": could not establish connection\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num);
ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 1190 :       printf("%c%c%"U16_F": ethernet interface detached, going down\n",
InterruptEnable_Main in sysconfig.c (Ch_AS4\apps_layer) line 164 : // 우선순위 5 : 패킷을 놓치는 경우가 생긴다.  - printf 문을 제거하니 증상 사라짐. - orignal
InterruptEnable_Main in sysconfig.c (Ch_AS4\apps_layer) line 171 : 	NVIC_SetPriority(EthernetMAC_IRQn, 5u);		// 패킷을 놓치는 경우가 생긴다.  - printf 문을 제거하니 증상 사라짐.
rtcTime_Init in sysconfig.c (Ch_AS4\apps_layer) line 449 : 		printf("rtc_time = "); for(i=0 ; i<7; i++) {	printf("%x : ",rtc_time[i]);	} printf("\n");
tcp_recved in tcp.c (Ch_AS4\lwIP\core) line 464 :   //printf("tcp_recved()\r\n");
PrintLine in util.c (Ch_AS4\apps_layer) line 84 :   printf("-----------------------------------------------------\r\n");
PrintFabricVersion in util.c (Ch_AS4\apps_layer) line 159 : //		printf("PrintFabricVersion()\r\n");
PrintFabricVersion in util.c (Ch_AS4\apps_layer) line 162 : 		printf("Fabric Ver : %lX (Rs422 Slave)\r\n", ver);
PrintFabricVersion in util.c (Ch_AS4\apps_layer) line 168 : 		printf("Fabric Ver : %lX (Slave)\r\n", ver);
PrintFabricVersion in util.c (Ch_AS4\apps_layer) line 173 : 		printf("Fabric Ver : %lX (Master)\r\n", ver);
Intro in util.c (Ch_AS4\apps_layer) line 190 : //    printf("Build   Time : %s %s\r\n",__DATE__,__TIME__);
util.h (Ch_AS4\inc) line 58 : #define DEBUG_I(T,fmt,args...) printf("INFO. %s",__func__); printf(fmt, ##args);
util.h (Ch_AS4\inc) line 59 : #define DEBUG_E(fmt,args...)	printf("ERROR. %s",__func__); printf(fmt, ##args);
---- MAC Matches (299 in 15 files) ----
conf_eth.h (Ch_AS4\port_config) line 73 : /*! MAC address definition.  The MAC address must be unique on the network. */
etharp.c (Ch_AS4\lwIP\netif) line 423 :  * @params src the source MAC address to be copied into the ethernet header
etharp.c (Ch_AS4\lwIP\netif) line 424 :  * @params dst the destination MAC address to be copied into the ethernet header
etharp.c (Ch_AS4\lwIP\netif) line 448 :  * Update (or insert) a IP/MAC address pair in the ARP cache.
etharp_output in etharp.c (Ch_AS4\lwIP\netif) line 828 :     /* Hash IP multicast address to MAC address.*/
etharp.c (Ch_AS4\lwIP\netif) line 1034 :  * @param ethsrc_addr the source MAC address for the ethernet header
etharp.c (Ch_AS4\lwIP\netif) line 1035 :  * @param ethdst_addr the destination MAC address for the ethernet header
etharp.c (Ch_AS4\lwIP\netif) line 1036 :  * @param hwsrc_addr the source MAC address for the ARP protocol header
etharp.c (Ch_AS4\lwIP\netif) line 1038 :  * @param hwdst_addr the destination MAC address for the ARP protocol header
etharp_raw in etharp.c (Ch_AS4\lwIP\netif) line 1089 :   /* Write MAC-Addresses (combined loop for both headers) */
etharp_raw in etharp.c (Ch_AS4\lwIP\netif) line 1092 :     /* Write the ARP MAC-Addresses */
etharp_raw in etharp.c (Ch_AS4\lwIP\netif) line 1095 :     /* Write the Ethernet MAC-Addresses */
ethernetif.c (Ch_AS4\lwIP\netif) line 64 :  * Keeping the ethernet address of the MAC in this struct is not necessary
ethernetif.c (Ch_AS4\lwIP\netif) line 88 :   /* set MAC hardware address length */
ethernetif.c (Ch_AS4\lwIP\netif) line 91 :   /* set MAC hardware address */
ethernetif.c (Ch_AS4\lwIP\netif) line 112 :  * @param p the MAC packet to send (e.g. IP packet including MAC addresses and type)
ethernetif.c (Ch_AS4\lwIP\netif) line 116 :  * @note Returning ERR_MEM here if a DMA queue of your MAC is full can lead to
ethernetif.c (Ch_AS4\lwIP\netif) line 157 :  * @return a pbuf filled with the received packet (including MAC header)
ethernetif.c (Ch_AS4\lwIP\netif) line 191 :        * pbufs for a DMA-enabled MAC and after receiving truncate it to the
igmp_start in igmp.c (Ch_AS4\lwIP\core\ipv4) line 158 :     /* Allow the igmp messages at the MAC level */
igmp_stop in igmp.c (Ch_AS4\lwIP\core\ipv4) line 197 :       /* disable the group at the MAC level */
igmp_joingroup in igmp.c (Ch_AS4\lwIP\core\ipv4) line 488 :           /* If first use of the group, allow the group at the MAC level */
igmp_leavegroup in igmp.c (Ch_AS4\lwIP\core\ipv4) line 563 :           /* Disable the group at the MAC level */
igmp.h (Ch_AS4\lwIP\include\ipv4\lwip) line 71 : /* MAC Filter Actions */
ip.c (Ch_AS4\lwIP\core\ipv4) line 309 :    * using link layer addressing (such as Ethernet MAC) so we must not filter on IP.
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 52 :   EthernetMAC_IRQn                = 12,       /*!< Ethernet MAC interrupt                               */
m2sxxx.h (Ch_AS4\firmware\CMSIS) line 605 : /*------------------------------ Ethernet MAC --------------------------------*/
{anonMAC_TypeDef} in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 610 :      * MAC registers (MCXMAC)
m2sxxx.h (Ch_AS4\firmware\CMSIS) line 2792 : #define MAC                     ((MAC_TypeDef *) ETHERNET_BASE)
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 94 : /* MAC configuration record */
low_level_init in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 352 :     /*-------------------------- Initialize the MAC --------------------------*/
low_level_init in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 362 :      * Get the default configuration for the Ethernet MAC and change settings
low_level_init in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 366 :      *      Specifies the interface used to connect the Ethernet MAC to the PHY.
low_level_init in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 371 :      *      Specifies the MAC address of the device. This number should be
low_level_init in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 405 :      * Initialize MAC with specified configuration. The Ethernet MAC is
low_level_init in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 413 :      * Register MAC interrupt handler listener functions. These functions will
low_level_init in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 414 :      * be called  by the MAC driver when a packet ahs been sent or received.
low_level_init in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 424 :      * a packet is received to hand back the receive buffer to the MAC driver
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 435 :  * @param p the MAC packet to send (e.g. IP packet including MAC addresses and type)
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 439 :  * @note Returning ERR_MEM here if a DMA queue of your MAC is full can lead to
low_level_output in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 532 :      * Initiate packet transmit. Keep retrying until there is room in the MAC Tx
packet_tx_complete_handler in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 598 :      * g_mac_tx_buffer has been sent by the MAC by resetting
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 691 :  * @return a pbuf filled with the received packet (including MAC header)
mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 4 :  * SmartFusion2 Microcontroller Subsystem 10/100/1000 Mbps Ethernet MAC bare
mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 81 :  * SmartFusion2 Ethernet MAC instance
mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 101 :  * MAC interrupt definitions
MSS_MAC_init in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 170 :         /* Reset MAC */
MSS_MAC_init in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 172 :         /* Clear any previously pended MAC interrupt */
MSS_MAC_init in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 174 :         /* Take MAC out of reset. */
MSS_MAC_init in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 181 :         /* Assign MAC station address */
MSS_MAC_init in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 242 :         /* Disabled MAC statistics counters are cleared after they are read.*/
MSS_MAC_init in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 248 :         /* Enable transmission at MAC level. */
MSS_MAC_init in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 249 :         set_bit_reg32(&MAC->CFG1, CFG1_TX_EN);
MSS_MAC_init in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 250 :         /* Enable reception at MAC level.    */
MSS_MAC_init in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 251 :         set_bit_reg32(&MAC->CFG1, CFG1_RX_EN);
MSS_MAC_init in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 254 :         set_bit_reg32(&MAC->DMA_IRQ_MASK, MSS_MAC_TXPKTSENT_IRQ);
MSS_MAC_init in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 256 :         set_bit_reg32(&MAC->DMA_IRQ_MASK, MSS_MAC_RXPKTRCVD_IRQ);
update_mac_cfg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 286 :         /* Reconfigure MAC based on PHY configuration. */
update_mac_cfg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 289 :             MAC->INTERFACE_CTRL |= INTERFACE_SPEED_MASK;
update_mac_cfg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 293 :             MAC->INTERFACE_CTRL &= ~INTERFACE_SPEED_MASK;
update_mac_cfg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 300 :             MAC->CFG2 &= ~(CFG2_BYTE_MASK | CFG2_NIBBLE_MASK);
update_mac_cfg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 301 :             MAC->CFG2 |= CFG2_BYTE_MASK;
update_mac_cfg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 306 :             MAC->CFG2 &= ~(CFG2_BYTE_MASK | CFG2_NIBBLE_MASK);
update_mac_cfg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 307 :             MAC->CFG2 |= CFG2_NIBBLE_MASK;
update_mac_cfg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 322 :             MAC->CFG2 &= ~CFG2_FDX_MASK;
update_mac_cfg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 323 :             MAC->FIFO_CFG5 |= FIFO_CFG5_CFGHDPLX_MASK;
update_mac_cfg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 328 :             MAC->CFG2 |= CFG2_FDX_MASK;
update_mac_cfg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 329 :             MAC->FIFO_CFG5 &= ~FIFO_CFG5_CFGHDPLX_MASK;
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 363 :          * Update MAC configuration if link characteristics changed.
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 369 :             /* Reconfigure MAC based on PHY configuration. */
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 372 :                 MAC->INTERFACE_CTRL |= INTERFACE_SPEED_MASK;
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 376 :                 MAC->INTERFACE_CTRL &= ~INTERFACE_SPEED_MASK;
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 383 :                 MAC->CFG2 &= ~(CFG2_BYTE_MASK | CFG2_NIBBLE_MASK);
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 384 :                 MAC->CFG2 |= CFG2_BYTE_MASK;
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 388 :                 MAC->CFG2 &= ~(CFG2_BYTE_MASK | CFG2_NIBBLE_MASK);
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 389 :                 MAC->CFG2 |= CFG2_NIBBLE_MASK;
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 426 :                 MAC->CFG2 &= ~CFG2_FDX_MASK;
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 427 :                 MAC->FIFO_CFG5 |= FIFO_CFG5_CFGHDPLX_MASK;
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 432 :                 MAC->CFG2 |= CFG2_FDX_MASK;
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 433 :                 MAC->FIFO_CFG5 &= ~FIFO_CFG5_CFGHDPLX_MASK;
MSS_MAC_get_link_status in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 473 :             /* Find out if link is up on SGMII link between MAC and external PHY. */
mac_reset in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 555 :     set_bit_reg32(&MAC->CFG1, CFG1_TX_RST);
mac_reset in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 558 :     set_bit_reg32(&MAC->CFG1, CFG1_RX_RST);
mac_reset in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 561 :     set_bit_reg32(&MAC->CFG1, CFG1_TXCTL_RST);
mac_reset in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 564 :     set_bit_reg32(&MAC->CFG1, CFG1_RXCTL_RST);
mac_reset in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 567 :     set_bit_reg32(&MAC->INTERFACE_CTRL, MII_INTF_RESET);
mac_reset in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 570 :     set_bit_reg32(&MAC->FIFO_CFG0, FIFO_CFG0_WMM_RST);
mac_reset in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 573 :     set_bit_reg32(&MAC->FIFO_CFG0, FIFO_CFG0_RSYS_RST);
mac_reset in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 576 :     set_bit_reg32(&MAC->FIFO_CFG0, FIFO_CFG0_RFAB_RST);
mac_reset in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 579 :     set_bit_reg32(&MAC->FIFO_CFG0, FIFO_CFG0_TSYS_RST);
mac_reset in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 582 :     set_bit_reg32(&MAC->FIFO_CFG0, FIFO_CFG0_TFAB_RST);
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 617 :      * Configure MAC FIFOs error detection and correction (EDAC)
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 646 :     MAC->MII_CONFIG = tempreg;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 651 :     /* Clear soft reset for MCXMAC, Tx function, Rx function, Tx MAC control and
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 652 :      * Rx MAC control. */
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 653 :     MAC->CFG1 &= ~(CFG1_SOFT_RST_MASK | CFG1_TXCTL_RST_MASK |
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 658 :     clear_bit_reg32(&MAC->INTERFACE_CTRL, MII_INTF_RESET);
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 661 :     MAC->FIFO_CFG0 &= ~(FIFO_CFG0_WMM_RST_MASK | FIFO_CFG0_RSYS_RST_MASK |
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 686 :     MAC->CFG1 = tempreg;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 722 :     MAC->CFG2 = tempreg;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 730 :     MAC->IFG = tempreg;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 760 :     MAC->HALF_DUPLEX = tempreg;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 762 :     MAC->MAX_FRAME_LENGTH = (uint32_t)cfg->max_frame_length;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 767 :     MAC->FIFO_CFG0 = ( FIFO_CFG0_WMM_ENABLE  | FIFO_CFG0_RSYS_ENABLE |
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 771 :     MAC->FIFO_CFG1 = FIFO_CFG1_DEFVAL;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 773 :     MAC->FIFO_CFG2 = FIFO_CFG2_DEFVAL;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 775 :     MAC->FIFO_CFG3 = FIFO_CFG3_DEFVAL;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 777 :     MAC->FIFO_CFG4 = FIFO_CFG4_DEFVAL;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 782 :     MAC->FIFO_CFG5 = FIFO_CFG5_DEFVAL_GMII;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 785 :     MAC->FIFO_CFG5 = FIFO_CFG5_DEFVAL;
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 793 :  * RGMII is implemented outside the Ethernet MAC by the CoreRGMII
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 794 :  * soft-IP core. CoreRGMII is located between the MAC and external PHY
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 795 :  * to converts from GMII to RGMII. Hence the MAC needs to be configured
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 798 :  * SGMII/1000BaseX is implemented outside the Ethernet MAC by the CoreSGMII
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 799 :  * soft-IP core. CoreSGMII is located between the MAC and external PHY
config_mac_hw in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 800 :  * to converts from GMII to SGMII. Hence the MAC needs to be configured
MSS_MAC_write_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 843 :         } while(MAC->MII_INDICATORS & MII_BUSY_INDICATOR_MASK);
MSS_MAC_write_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 846 :         MAC->MII_ADDRESS = (((uint32_t)phyaddr)<<MII_PHY_ADDR);
MSS_MAC_write_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 848 :         MAC->MII_ADDRESS |= (uint32_t)regaddr;
MSS_MAC_write_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 850 :         MAC->MII_CTRL = (uint32_t)regval ;
MSS_MAC_read_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 882 :         } while((MAC->MII_INDICATORS & MII_BUSY_INDICATOR_MASK) != 0u);
MSS_MAC_read_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 884 :         MAC->MII_ADDRESS = (((uint32_t)phyaddr) << MII_PHY_ADDR);
MSS_MAC_read_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 886 :         MAC->MII_ADDRESS |= (uint32_t)regaddr;
MSS_MAC_read_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 888 :         set_bit_reg32(&MAC->MII_COMMAND, MII_READ);
MSS_MAC_read_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 892 :             mii_not_valid = MAC->MII_INDICATORS & MII_NV_INDICATOR_MASK;
MSS_MAC_read_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 893 :             mii_busy = MAC->MII_INDICATORS & MII_BUSY_INDICATOR_MASK;
MSS_MAC_read_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 901 :             read_val = (uint16_t)MAC->MII_STATUS;
MSS_MAC_read_phy_reg in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 904 :     clear_bit_reg32(&MAC->MII_COMMAND, MII_READ);
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 921 :         &MAC->TR64,     /* FRAME_CNT_64 */        
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 922 :         &MAC->TR127,    /* FRAME_CNT_127 */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 923 :         &MAC->TR255,    /* FRAME_CNT_255 */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 924 :         &MAC->TR511,    /* FRAME_CNT_511 */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 925 :         &MAC->TR1K,     /* FRAME_CNT_1K */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 926 :         &MAC->TRMAX,    /* FRAME_CNT_MAX */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 927 :         &MAC->TRMGV,    /* FRAME_CNT_VLAN */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 928 :         &MAC->RBYT,     /* RX_BYTE_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 929 :         &MAC->PPKT,     /* RX_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 930 :         &MAC->RFCS,     /* RX_FCS_ERR_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 931 :         &MAC->RMCA,     /* RX_MULTICAST_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 932 :         &MAC->RBCA,     /* RX_BROADCAST_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 933 :         &MAC->RXCF,     /* RX_CTRL_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 934 :         &MAC->RXPF,     /* RX_PAUSE_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 935 :         &MAC->RXUO,     /* RX_UNKNOWN_OPCODE_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 936 :         &MAC->RALN,     /* RX_ALIGN_ERR_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 937 :         &MAC->RFLR,     /* RX_FRAMELENGTH_ERR_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 938 :         &MAC->RCDE,     /* RX_CODE_ERR_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 939 :         &MAC->RCSE,     /* RX_CS_ERR_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 940 :         &MAC->RUND,     /* RX_UNDERSIZE_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 941 :         &MAC->ROVR,     /* RX_OVERSIZE_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 942 :         &MAC->RFRG,     /* RX_FRAGMENT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 943 :         &MAC->RJBR,     /* RX_JABBER_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 944 :         &MAC->RDRP,     /* RX_DROP_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 945 :         &MAC->TBYT,     /* TX_BYTE_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 946 :         &MAC->TPKT,     /* TX_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 947 :         &MAC->TMCA,     /* TX_MULTICAST_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 948 :         &MAC->TBCA,     /* TX_BROADCAST_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 949 :         &MAC->TXPF,     /* TX_PAUSE_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 950 :         &MAC->TDFR,     /* TX_DEFFERAL_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 951 :         &MAC->TEDF,     /* TX_EXCS_DEFFERAL_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 952 :         &MAC->TSCL,     /* TX_SINGLE_COLL_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 953 :         &MAC->TMCL,     /* TX_MULTI_COLL_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 954 :         &MAC->TLCL,     /* TX_LATE_COLL_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 955 :         &MAC->TXCL,     /* TX_EXCSS_COLL_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 956 :         &MAC->TNCL,     /* TX_TOTAL_COLL_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 957 :         &MAC->TPFH,     /* TX_PAUSE_HONORED_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 958 :         &MAC->TDRP,     /* TX_DROP_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 959 :         &MAC->TJBR,     /* TX_JABBER_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 960 :         &MAC->TFCS,     /* TX_FCS_ERR_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 961 :         &MAC->TXCF,     /* TX_CNTRL_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 962 :         &MAC->TOVR,     /* TX_OVERSIZE_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 963 :         &MAC->TUND,     /* TX_UNDERSIZE_PKT_CNT */
MSS_MAC_read_stat in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 964 :         &MAC->TFRG      /* TX_FRAGMENT_CNT */
MSS_MAC_receive_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1027 :         if(0u == read_bit_reg32(&MAC->DMA_RX_CTRL, DMA_RXENABLE))
MSS_MAC_receive_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1031 :             MAC->DMA_RX_DESC = (uint32_t)&g_mac.rx_desc_tab[next_rx_desc_index];
MSS_MAC_receive_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1032 :             set_bit_reg32(&MAC->DMA_RX_STATUS, DMA_RXOVRFLOW);
MSS_MAC_receive_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1033 :             set_bit_reg32(&MAC->DMA_RX_CTRL, DMA_RXENABLE);
MSS_MAC_receive_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1046 :         if(0u == read_bit_reg32(&MAC->DMA_RX_STATUS, DMA_RXBUSERR))
MSS_MAC_send_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1116 :         if(DMA_TX_DISABLED == MAC->DMA_TX_CTRL)
MSS_MAC_send_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1118 :             MAC->DMA_TX_DESC = (uint32_t)p_next_tx_desc;
MSS_MAC_send_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1122 :         MAC->DMA_TX_CTRL = DMA_TX_ENABLED;
MSS_MAC_send_pkt in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1137 :         if(0u == read_bit_reg32(&MAC->DMA_TX_STATUS, DMA_TXBUSERR))
EthernetMAC_IRQHandler in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1161 :     dma_irq = MAC->DMA_IRQ;
rxpkt_handler in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1235 :         set_bit_reg32(&MAC->DMA_RX_STATUS, DMA_RXPKTRCVD);
rxpkt_handler in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1237 :         rxcnt = (MAC->DMA_RX_STATUS & DMA_PKTCOUNT_MASK) >> DMA_PKTCOUNT;
txpkt_handler in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1313 :         set_bit_reg32(&MAC->DMA_TX_STATUS, DMA_TXPKTSENT);
assign_station_addr in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1381 :         MAC->STATION_ADDRESS1 = address32;
assign_station_addr in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1384 :         MAC->STATION_ADDRESS2 = address32;
mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1425 :  * MSS MAC TBI interface
msgmii_autonegotiate in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1465 :             MAC->CFG2 &= ~CFG2_FDX_MASK;
msgmii_autonegotiate in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1470 :             MAC->CFG2 |= CFG2_FDX_MASK;
coresgmii_autonegotiate in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1578 :             MAC->CFG2 &= ~CFG2_FDX_MASK;
coresgmii_autonegotiate in mss_ethernet_mac.c (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 1583 :             MAC->CFG2 |= CFG2_FDX_MASK;
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 4 :  * SmartFusion2 Microcontroller Subsystem 10/100/1000 Mbps Ethernet MAC bare metal
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 11 :   @mainpage SmartFusion2 MSS Ethernet MAC Bare Metal Driver.
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 15 :     Mbps Ethernet MAC hardware peripheral. The MSS Ethernet MAC supports MII /
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 18 :     MAC as part of a bare metal system where no operating system is available.
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 24 :     The configuration of all features of the MSS Ethernet MAC is covered by this
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 26 :     the MAC, the size of the transmit and receive rings, PHY interface and the
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 32 :     Ethernet MAC implementation. The selected values will be used to define
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 38 :     MAC is selected using the Firmware Catalog configuration dialog window. It
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 52 :     MSS Ethernet MAC are defined as constants in the SmartFusion2 CMSIS HAL.
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 65 :    | MII         |    0           |    MSS MAC operates in MII mode and Interfaces  |
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 68 :    | GMII        |    1           |    MSS MAC operates in GMII mode and Interfaces |
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 71 :    | TBI         |    2           |    MSS MAC operates in TBI mode(Internal        |
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 76 :    | SGMII       |    3           |    MSS MAC operates in GMII mode. External      |
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 81 :    | 1000BaseX   |    4           |    MSS MAC operates in GMII mode. External      |
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 87 :    | RGMII       |    5           |    MSS MAC operates in GMII mode. External      |
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 91 :    | RMII        |    6           |    MSS MAC operates in MII mode. External       |
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 95 :     The MSS Ethernet MAC driver functions are grouped into the following
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 103 :     The SmartFusion2 Ethernet MAC driver is initialized and configured by
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 107 :     configure the Ethernet MAC. 
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 108 :     The Ethernet MAC driver provides the MSS_MAC_cfg_struct_def_init() function
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 112 :     PHY address, allowed link speeds, link duplex mode and MAC address.
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 120 :     The SmartFusion2 Ethernet MAC driver transmit operations are interrupt
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 123 :     will be called by the Ethernet MAC driver every time a packet has been sent.
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 128 :     MAC driver only requires a pointer to the buffer containing the packet and
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 129 :     the packet size. The Ethernet MAC driver will call the transmit call-back
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 139 :     The SmartFusion2 Ethernet MAC driver receive operations are interrupt
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 142 :     allocate receive buffers to the Ethernet MAC driver by calling the
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 144 :     to allocate more than one receive buffer. The Ethernet MAC driver will then
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 147 :     packet processing. This buffer will not be reused by the Ethernet MAC driver
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 154 :     The Ethernet MAC driver provides the following functions to retrieve the
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 192 :  * Broadcast MAC address 
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 197 :  * Maximum MAC frame size (packet size)
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 385 :   function. It retrieves the default MAC configuration and modifies it to
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 387 :   This example also demonstrates how to assign the device's MAC address and
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 413 :   The MSS_MAC_init() function initializes the Ethernet MAC hardware and driver
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 417 :   configure the Ethernet MAC. The MSS_MAC_init() function initializes the
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 421 :   interface used to connect the Ethernet MAC and Ethernet PHY as well as the PHY
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 436 :    the devices MAC address. 
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 465 :   called by the Ethernet MAC driver when a packet has been sent.
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 469 :     packet is sent by the Ethernet MAC.
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 482 :   called by the Ethernet MAC driver when a packet is received.
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 486 :     packet is received by Ethernet MAC.
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 491 :   register the rx_callback() receive callback function with the Ethernet MAC
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 493 :   rx_buffer to an Ethernet MAC descriptor for packet reception. The rx_callback
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 494 :   function will be called by the Ethernet MAC driver once a packet has been
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 532 :   immediately without waiting for the packet to be sent. The Ethernet MAC driver
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 545 :     application manage memory allocated to store packets. The Ethernet MAC
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 546 :     driver does not make use of this pointer. The Ethernet MAC driver will pass
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 557 :   function with the Ethernet MAC driver by a call to
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 563 :   to tx_packet as the p_user_data parameter. The Ethernet MAC driver call
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 620 :     is left to the application. The Ethernet MAC driver does not make use of
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 621 :     this pointer. The Ethernet MAC driver will pass this pointer back to the
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 634 :   receive callback function with the Ethernet MAC driver. The
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 636 :   rx_buffer_2 to Ethernet MAC descriptors for packet reception. The rx_callback
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 637 :   function will be called by the Ethernet MAC driver once a packet has been
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 645 :   reassignment to the Ethernet MAC as part of the rx_callback() function. This
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 723 :   the Ethernet MAC. This function can be used to read one of 17 receiver
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 765 :   alongside the Ethernet MAC driver. You only need to use this function if
mss_ethernet_mac.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 803 :   provided alongside the Ethernet MAC driver. You only need to use this function
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 4 :  * Register bit offsets and masks definitions for G4Main MAC.
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 17 :  * G4M MAC Configuration system register 
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 26 :  * G4M MAC Error detection and correction enable system register 
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 33 :  * G4M MAC Error detection and correction interrupt enable system register 
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 42 :  * G4M MAC Error detection and correction counter system registers
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 52 :  * G4M MAC Error detection and correction address system registers
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 62 :  * G4M MAC Error detection and correction status system registers
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 71 :  * G4M MAC Error detection and correction counter clear system registers
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 81 :  * MAC Configuration register 1
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 105 :  * MAC Configuration register 2
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 124 :  * MAC IPG/IFG register
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 131 :  * MAC half-duplex register
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 144 :  * MAC MII Management configuration register
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 152 :  * MAC MII Management address register
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 159 :  * MAC MII Management command register
mss_ethernet_mac_regs.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 165 :  * MAC MII Management indicators register
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 4 :  * This file contains type definitions used throughout SmartFusion2 Ethernet MAC
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 26 :  * MAC interface speed
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 27 :  * This type definition provides various interface speeds supported by MAC hardware.
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 38 :   SmartFusion2 Ethernet MAC Configuration Structure.
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 40 :   SmartFusion2 Ethernet MAC.You need to create a record of this type to hold the 
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 41 :   configuration of the MAC. The MSS_MAC_cfg_struct_def_init() API should be used
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 62 :     MAC address of the Ethernet MAC.
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 98 :     transmitted and received. When disabled, the MAC limits the length of frames
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 108 :     check. When enabled, the MAC checks the frames length field to ensure it
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 118 :     When enabled, the MAC pads all the short frames and appends a CRC to every
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 120 :     to the MAC, have a valid length and contain a CRC. The allowed values for
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 129 :     enabled, the MAC appends a CRC to all the frames. When disabled, frames
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 130 :     presented to the MAC, have a valid length and contain a valid CRC. The
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 139 :     enabled, the MAC operates in full duplex mode. When disabled, the MAC
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 149 :     enabled, the MAC transmit outputs to be looped back to its receiving inputs.
mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 158 :     When enabled, the MAC detects and acts on PAUSE flow control frames. When
{anonmss_mac_cfg_t} in mss_ethernet_mac_types.h (Ch_AS4\firmware\drivers\mss_ethernet_mac) line 323 :     uint8_t mac_addr[6];                /* Station's MAC address */
netif in netif.h (Ch_AS4\lwIP\include\lwip) line 164 :   /* This function could be called to add or delete a entry in the multicast filter table of the ethernet MAC.*/
opt.h (Ch_AS4\lwIP\include\lwip) line 343 :  * ARP_TABLE_SIZE: Number of active MAC-IP address pairs cached.
opt.h (Ch_AS4\lwIP\include\lwip) line 359 :  * updated with the source MAC and IP addresses supplied in the packet.
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 485 : iprintf("[New MAC] my_mac[0]=[0x%x] [0x%x] [0x%x] [0x%x] [0x%x] [0x%x] \n\r",
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 542 : dp("[ENVM : default MAC] = [%02x:%02x:%02x:%02x:%02x:%02x]\n\r",
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 566 : dp("[ENVM : default MAC] = [%02x:%02x:%02x:%02x:%02x:%02x]\n\r",
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 611 : iprintf("[New MAC] my_mac[0]=[0x%x] [0x%x] [0x%x] [0x%x] [0x%x] [0x%x] \n\r",
make_MACADDR in sysconfig.c (Ch_AS4\apps_layer) line 648 : dfp("[default MAC] my_mac[0]=[0x%x] [0x%x] [0x%x] [0x%x] [0x%x] [0x%x] \n\r",
---- SELF_ERROR_POSITION_Z Matches (10 in 3 files) ----
errFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 4039 : 		case SELF_ERROR_POSITION_Z: //						16
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1301 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1385 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1463 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1518 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1601 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1673 : 		errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2022 : 											errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2114 : 	      		errorFunction(SELF_ERROR_POSITION_Z);
protocolType_AS.h (Ch_AS4\common_inc) line 835 : 	#define SELF_ERROR_POSITION_Z						16
---- MOVE_STEP_SPEED_FUNCTION_CHANGE Matches (3 in 2 files) ----
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2624 : #if MOVE_STEP_SPEED_FUNCTION_CHANGE
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2765 : #if MOVE_STEP_SPEED_FUNCTION_CHANGE
option_AS.h (Ch_AS4\ryu_inc) line 417 : #define MOVE_STEP_SPEED_FUNCTION_CHANGE		1
---- READY_CHECK_RETRY_FPGA Matches (1 in 1 files) ----
option_AS.h (Ch_AS4\ryu_inc) line 427 : #define READY_CHECK_RETRY_FPGA			1
---- CHECK_DIR_MOVING_STATE Matches (2 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 409 : 	#if CHECK_DIR_MOVING_STATE
option_AS.h (Ch_AS4\ryu_inc) line 439 : #define CHECK_DIR_MOVING_STATE		1
---- DEVSTATE_MOVING Matches (9 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 410 : 		#define DEVSTATE_MOVING(WHO,X)	devState.moving[WHO] = X;
define_AS.h (Ch_AS4\ryu_inc) line 412 : 		#define DEVSTATE_MOVING(WHO,X)
CMD_CHK_DIR_START in define_AS.h (Ch_AS4\ryu_inc) line 421 : 		DEVSTATE_MOVING(WHO,ON)
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 864 : DEVSTATE_MOVING(MOTOR_X,OFF);				
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 925 : DEVSTATE_MOVING(MOTOR_Y,OFF);								
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 981 : DEVSTATE_MOVING(MOTOR_Z,OFF);				
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1086 : DEVSTATE_MOVING(MOTOR_X,OFF);
readyChkRetry_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1122 : DEVSTATE_MOVING(MOTOR_Y,OFF);				
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1159 : DEVSTATE_MOVING(MOTOR_Z,OFF);
---- MOVE_STEP_SPEED_ERROR_2_STEP_FIX Matches (4 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 397 : #if MOVE_STEP_SPEED_ERROR_2_STEP_FIX
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 427 : //#if MOVE_STEP_SPEED_ERROR_2_STEP_FIX
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 554 : //#if MOVE_STEP_SPEED_ERROR_2_STEP_FIX
option_AS.h (Ch_AS4\ryu_inc) line 440 : #define MOVE_STEP_SPEED_ERROR_2_STEP_FIX		1
---- MOVE_STEP_SPEED_ERROR_2_STEP_FIX Matches (4 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 397 : #if MOVE_STEP_SPEED_ERROR_2_STEP_FIX
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 427 : //#if MOVE_STEP_SPEED_ERROR_2_STEP_FIX
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 554 : //#if MOVE_STEP_SPEED_ERROR_2_STEP_FIX
option_AS.h (Ch_AS4\ryu_inc) line 440 : #define MOVE_STEP_SPEED_ERROR_2_STEP_FIX		1
---- TOTAL_STEP_LIMIT Matches (8 in 1 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 398 : #define TOTAL_STEP_LIMIT	2
MotorCtrl_task.c (Ch_AS4\apps_layer) line 400 : #define TOTAL_STEP_LIMIT	0
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 428 : 	if(tStep > TOTAL_STEP_LIMIT) {	// 반대홈
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 439 : 	else if(tStep < -TOTAL_STEP_LIMIT) {
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 555 : if(totalStep > TOTAL_STEP_LIMIT) {} // 반대홈
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 556 : else if(totalStep < -TOTAL_STEP_LIMIT) {}
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 657 : 	if(tStep > TOTAL_STEP_LIMIT) { // 반대홈
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 670 : 	else if(tStep < -TOTAL_STEP_LIMIT) {
---- SYRINGE_ENCODER_REMOVE_WASHING Matches (9 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 419 : // #if SYRINGE_ENCODER_REMOVE_WASHING
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 233 : #if SYRINGE_ENCODER_REMOVE_WASHING
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 290 : #if SYRINGE_ENCODER_REMOVE_WASHING
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 317 : #if SYRINGE_ENCODER_REMOVE_WASHING
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 401 : #if SYRINGE_ENCODER_REMOVE_WASHING
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 430 : #if SYRINGE_ENCODER_REMOVE_WASHING
option_AS.h (Ch_AS4\ryu_inc) line 39 : // #if SYRINGE_ENCODER_REMOVE_WASHING
option_AS.h (Ch_AS4\ryu_inc) line 47 : #define SYRINGE_ENCODER_REMOVE_WASHING				1
option_AS.h (Ch_AS4\ryu_inc) line 439 : //#define SYRINGE_ENCODER_REMOVE_WASHING
---- CHECK_DIR_MOVING_STATE Matches (2 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 409 : 	#if CHECK_DIR_MOVING_STATE
option_AS.h (Ch_AS4\ryu_inc) line 442 : #define CHECK_DIR_MOVING_STATE		1
---- moveStepSpeed Matches (32 in 4 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 380 : // moveStepSpeed 명령에서 입력된 것이 적용된다. -- 아래 CMD_CHK_DIR_STATE_DIR_Z은 사용하지 않음.
define_AS.h (Ch_AS4\ryu_inc) line 425 : // moveStepSpeed 명령에서 입력된 것이 적용된다. -- 아래 CMD_CHK_DIR_STATE_DIR_Z은 사용하지 않음.
MotorCtrl_task.c (Ch_AS4\apps_layer) line 637 : int moveStepSpeed(uint32_t who, uint32_t minSpeed, uint32_t maxSpeed, int32_t tStep)
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1295 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1359 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1443 : 	ret = moveStepSpeed(MOTOR_X, devSet.minSpeed[MOTOR_X], devSet.maxSpeed[MOTOR_X], step);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1512 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1576 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1655 : 	ret = moveStepSpeed(MOTOR_Y, devSet.minSpeed[MOTOR_Y], devSet.maxSpeed[MOTOR_Y], step);
goZ in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1709 : 	ret = moveStepSpeed(MOTOR_Z, devSet.minSpeed[MOTOR_Z], devSet.maxSpeed[MOTOR_Z], step);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1749 : 	ret = moveStepSpeed(MOTOR_Z, devSet.minSpeed[MOTOR_Z], devSet.maxSpeed[MOTOR_Z], step);
goSyr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2176 : 	ret = moveStepSpeed(MOTOR_SYR, minSpeed, maxSpeed, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2221 : 	ret = moveStepSpeed(MOTOR_SYR, minSpeed, maxSpeed, step);
goVal in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2277 : 		return moveStepSpeed(MOTOR_VAL, minSpeed, maxSpeed, step);
goVal_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2314 : 		moveStepSpeed(MOTOR_VAL, minSpeed, maxSpeed, step);
goInj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2351 : 		return moveStepSpeed(MOTOR_INJ, minSpeed, maxSpeed, step);
goInj_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2388 : 		moveStepSpeed(MOTOR_INJ, minSpeed, maxSpeed, step);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2628 : 					moveStepSpeed(MOTOR_VAL, devSet.chkHomeSpeedMin[MOTOR_VAL], devSet.chkHomeSpeed[MOTOR_VAL], devSet.adjust.value[MOTOR_VAL] * ADJUST_STEP_UNIT_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2769 : 					moveStepSpeed(MOTOR_INJ, devSet.chkHomeSpeedMin[MOTOR_INJ], devSet.chkHomeSpeed[MOTOR_INJ], devSet.adjust.value[MOTOR_INJ] * ADJUST_STEP_UNIT_INJ);		
MotorCtrl_task.h (Ch_AS4\inc) line 53 : int moveStepSpeed(uint32_t who, uint32_t minSpeed, uint32_t maxSpeed, int32_t tStep);
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1456 : 						moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, -(UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1480 : 						moveStepSpeed(MOTOR_VAL, 0, ADJUST_SPEED_VAL, -ADJUST_STEP_UNIT_VAL);			
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1503 : 						moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, (UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));				
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1527 : 						moveStepSpeed(MOTOR_VAL, 0, ADJUST_SPEED_VAL, ADJUST_STEP_UNIT_VAL);						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1549 : 						moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_UP_SPEED, -(SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1570 : 						moveStepSpeed(MOTOR_SYR, 0, ADJUST_SPEED_SYL, -M_TEST_SYRINGE_STEP_VALUE);						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1591 : 						moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_DOWN_SPEED, (SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1612 : 						moveStepSpeed(MOTOR_SYR, 0, ADJUST_SPEED_SYL, M_TEST_SYRINGE_STEP_VALUE);						
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1748 : 				moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, (UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));		//	wash port ccw
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1759 : 				moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_DOWN_SPEED, (SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1776 : 				moveStepSpeed(MOTOR_VAL, 0, ACT_SPEED_MAX_VAL, -(UNIT_STEP_VAL * (int)(MICRO_STEP_VAL)));		//	inj port	cw		
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1786 : 				moveStepSpeed(MOTOR_SYR, 0, M_TEST_SYRINGE_UP_SPEED, -(SYR_PULSE_PER_VOL_500_FLOAT * M_TEST_SYRINGE_INJ_VOLUME) );						
---- ChkEncoder_X Matches (4 in 2 files) ----
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 865 : 				if(ChkEncoder_X(encoderCount)) { // ok
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1007 : int ChkEncoder_X(int encoderCount)
readyChkRetry_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1088 : 				if(ChkEncoder_X(encoderCount)) {
MotorCtrl_task.h (Ch_AS4\inc) line 138 : int ChkEncoder_X(int encoderCount);
---- CMD_CHK_DIR_START Matches (14 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 420 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0; \
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1364 : 			CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1367 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1444 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1581 : 			CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1583 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1656 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1755 : 			CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1757 : 		dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2226 : 			CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2228 : 		dprintf("## MOTOR_SYR CMD_CHK_DIR_START chk_DirS=%08x cur=%f act=%f step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2106 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2110 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2114 : CMD_CHK_DIR_START(i);
---- CMD_CHK_DIR_START Matches (14 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 420 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0; \
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1364 : 			CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1367 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1444 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1581 : 			CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1583 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1656 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1755 : 			CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1757 : 		dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2226 : 			CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2228 : 		dprintf("## MOTOR_SYR CMD_CHK_DIR_START chk_DirS=%08x cur=%f act=%f step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2106 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2110 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2114 : CMD_CHK_DIR_START(i);
---- CMD_CHK_DIR_START Matches (14 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 420 : 	#define CMD_CHK_DIR_START(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_START_Addr[WHO])) = 0x0; \
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1364 : 			CMD_CHK_DIR_START(MOTOR_X);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1367 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirX=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_X], cur, act, step);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1444 : 		CMD_CHK_DIR_START(MOTOR_X);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1581 : 			CMD_CHK_DIR_START(MOTOR_Y);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1583 : 	//	dprintf("## CMD_CHK_DIR_START chk_DirY=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Y], cur, act, step);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1656 : 			CMD_CHK_DIR_START(MOTOR_Y);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1755 : 			CMD_CHK_DIR_START(MOTOR_Z);
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1757 : //		dprintf("## CMD_CHK_DIR_START chk_DirZ=%08x cur=%d act=%d step=%d\n",devState.chk_Dir[MOTOR_Z], cur, act, step);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2226 : 			CMD_CHK_DIR_START(MOTOR_SYR);
goSyr_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2228 : 		dprintf("## MOTOR_SYR CMD_CHK_DIR_START chk_DirS=%08x cur=%f act=%f step=%d\n",devState.chk_Dir[MOTOR_SYR], cur, act, step);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2106 : //CMD_CHK_DIR_START(i);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2110 : dprintf("## CMD_CHK_DIR_START chk_Dir=%08x\n",devState.chk_Dir[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2114 : CMD_CHK_DIR_START(i);
---- CMD_CHK_DIR_RESET Matches (11 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 416 : 	#define CMD_CHK_DIR_RESET(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_RESET_Addr[WHO])) = 0x0; \
CMD_CHK_DIR_RESET in define_AS.h (Ch_AS4\ryu_inc) line 417 : 	dprintf("===CMD_CHK_DIR_RESET   [%d]\n",(WHO))
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2837 : CMD_CHK_DIR_RESET(MOTOR_SYR);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2955 : 			CMD_CHK_DIR_RESET(MOTOR_Z);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3097 : CMD_CHK_DIR_RESET(MOTOR_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3238 : CMD_CHK_DIR_RESET(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3366 : CMD_CHK_DIR_RESET(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3368 : dprintf("##CMD_CHK_DIR_RESET(MOTOR_X)=%08x\n",devState.chk_Dir[MOTOR_X]);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3484 : CMD_CHK_DIR_RESET(MOTOR_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3607 : 			CMD_CHK_DIR_RESET(MOTOR_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3609 : dprintf("##CMD_CHK_DIR_RESET(MOTOR_Y)=%08x\n",devState.chk_Dir[MOTOR_Y]);
---- CMD_CHK_DIR_RESET Matches (10 in 2 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 416 : 	#define CMD_CHK_DIR_RESET(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_RESET_Addr[WHO])) = 0x0; 
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2837 : CMD_CHK_DIR_RESET(MOTOR_SYR);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2955 : 			CMD_CHK_DIR_RESET(MOTOR_Z);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3097 : CMD_CHK_DIR_RESET(MOTOR_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3238 : CMD_CHK_DIR_RESET(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3366 : CMD_CHK_DIR_RESET(MOTOR_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3368 : dprintf("##CMD_CHK_DIR_RESET(MOTOR_X)=%08x\n",devState.chk_Dir[MOTOR_X]);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3484 : CMD_CHK_DIR_RESET(MOTOR_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3607 : 			CMD_CHK_DIR_RESET(MOTOR_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3609 : dprintf("##CMD_CHK_DIR_RESET(MOTOR_Y)=%08x\n",devState.chk_Dir[MOTOR_Y]);
---- readCount Matches (118 in 4 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 342 : //	#define ENCODER_CHECK					(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT)
Def_stepCon.h (Ch_AS4\common_inc) line 344 : 	#define ENCODER_CHECK_Z				(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_Z)
Def_stepCon.h (Ch_AS4\common_inc) line 345 : 	#define ENCODER_CHECK_X				(encoderCountCheck(encoderCount_X,readCount) > ERR_ENCODER_COUNT_X)
Def_stepCon.h (Ch_AS4\common_inc) line 346 : 	#define ENCODER_CHECK_Y				(encoderCountCheck(encoderCount_Y,readCount) > ERR_ENCODER_COUNT_Y)		
Def_stepCon.h (Ch_AS4\common_inc) line 348 : 	#define ENCODER_CHECK_SYR			(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_SYR)
Def_stepCon.h (Ch_AS4\common_inc) line 350 : //		#define ENCODER_CHECK_VAL			(readCount < ERR_ENCODER_COUNT_VAL)	
Def_stepCon.h (Ch_AS4\common_inc) line 351 : //		#define ENCODER_CHECK_INJ			(readCount < ERR_ENCODER_COUNT_INJ)
Def_stepCon.h (Ch_AS4\common_inc) line 365 : 			readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_X_Z)); \
Def_stepCon.h (Ch_AS4\common_inc) line 366 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 367 : dfp("======  X  readCount=[%d] [%d]\n", readCount , encoderCount_X); \
Def_stepCon.h (Ch_AS4\common_inc) line 373 : 		readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_X_Z)); \
Def_stepCon.h (Ch_AS4\common_inc) line 374 : 		readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 375 : dfp("======  X  readCount=[%d] [%d]\n", readCount , encoderCount_X); \
Def_stepCon.h (Ch_AS4\common_inc) line 377 : 		if(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_X) {	errorEncoder(MOTOR_X); } \
Def_stepCon.h (Ch_AS4\common_inc) line 383 : 			readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_Y_SYR)); \
Def_stepCon.h (Ch_AS4\common_inc) line 384 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 385 : dfp("======  Y  readCount=[%d] [%d]\n", readCount , encoderCount_Y); \
Def_stepCon.h (Ch_AS4\common_inc) line 391 : 		readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_Y_SYR)); \
Def_stepCon.h (Ch_AS4\common_inc) line 392 : 		readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 393 : dfp("======  Y	readCount=[%d] [%d]\n", readCount , encoderCount_Y); \
Def_stepCon.h (Ch_AS4\common_inc) line 395 : 		if(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_Y) {	errorEncoder(MOTOR_Y); } \							
Def_stepCon.h (Ch_AS4\common_inc) line 401 : 			readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_X_Z)); \
Def_stepCon.h (Ch_AS4\common_inc) line 402 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 403 : dfp("======  Z  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 409 : 		readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_X_Z)); \
Def_stepCon.h (Ch_AS4\common_inc) line 410 : 		readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 411 : dfp("======  Z  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 413 : 		if(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_Z) {	errorEncoder(MOTOR_Z); } \				
Def_stepCon.h (Ch_AS4\common_inc) line 427 : 			readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_Y_SYR)); \
Def_stepCon.h (Ch_AS4\common_inc) line 428 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 429 : dfp("xxxxxxxxxxxxx======  Syringe  readCount=[%d] [%d]\n", readCount , encoderCount); \
Def_stepCon.h (Ch_AS4\common_inc) line 436 : 			readCount	= *((uint32_t volatile *)(BASEADDR_MOTOR_VAL_INJ)); \
Def_stepCon.h (Ch_AS4\common_inc) line 437 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 438 : dfp("======  Valve  readCount=[%d]\n", readCount ); \
Def_stepCon.h (Ch_AS4\common_inc) line 440 : 			if(readCount < ERR_ENCODER_COUNT_VAL)	{	errorEncoder(MOTOR_VAL);} \
Def_stepCon.h (Ch_AS4\common_inc) line 446 : 			readCount	= *((uint32_t volatile *)(BASEADDR_MOTOR_VAL_INJ)); \
Def_stepCon.h (Ch_AS4\common_inc) line 447 : 			readCount = (readCount >> 8) & 0x3ff; \
Def_stepCon.h (Ch_AS4\common_inc) line 448 : dfp("======  Injector  readCount=[%d] \n", readCount ); \
Def_stepCon.h (Ch_AS4\common_inc) line 450 : 			if(readCount < ERR_ENCODER_COUNT_INJ) {	errorEncoder(MOTOR_INJ);} \
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 182 : 	int32_t	readCount=0;
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 271 : //dp("xxxx   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 274 : 			readCount	= *((uint32_t volatile *)(BASEADDR_MOTOR_VAL_INJ)); 
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 275 : 			//readCount = (readCount >> 8) & 0x3ff; 
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 276 : 			readCount = (readCount >> 8);//  & 0x3ff; 
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 277 : 			//dfpErr("======  Valve  readCount=[0x%0x]\n", readCount ); 
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 294 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 321 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 405 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 418 : //dp("xxxx-   Valve readCount=[%d]\n", readCount);
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 434 : dp("xxxxxxxxx   syr readCount=[%d] [%d]\n", readCount , encoderCount);
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 491 : 	int32_t	readCount=0;
aspirateSample in LcasAction_task.c (Ch_AS4\apps_layer) line 1163 : 	int32_t	readCount=0;
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1369 : 	int32_t	readCount=0;
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1722 : 	int32_t	readCount=0;
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2128 : 	int32_t	readCount=0;
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3250 : 	int32_t	readCount=0;
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3537 : 	int32_t	readCount=0;
LcasAction_task.c (Ch_AS4\apps_layer) line 6196 : int encoderCountCheck(int encoderCount, int readCount) 
encoderCountCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6198 : 	if(encoderCount > readCount) {
encoderCountCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6199 : 		return (encoderCount - readCount);
encoderCountCheck in LcasAction_task.c (Ch_AS4\apps_layer) line 6202 : 		return (readCount - encoderCount);
LcasAction_task.h (Ch_AS4\inc) line 150 : int encoderCountCheck(int encoderCount, int readCount);
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 824 : 	int32_t	readCount=0;
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 887 : 	int32_t	readCount=0;
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 950 : 	int32_t	readCount=0;
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1007 : 	int32_t	readCount=0;
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1009 : 	readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_X_Z));
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1010 : 	readCount = (readCount >> 8) & 0x3ff;
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1012 : //dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1016 : 	count = encoderCount - readCount;
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1029 : 	int32_t	readCount=0;
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1031 : 	readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_Y_SYR));
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1032 : 	readCount = (readCount >> 8) & 0x3ff;
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1034 : //dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1038 : 	count = encoderCount - readCount;
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1051 : 	int32_t	readCount=0;
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1053 : 	readCount = *((uint32_t volatile *)(BASEADDR_MOTOR_X_Z));
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1054 : 	readCount = (readCount >> 8) & 0x3ff;
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1056 : //dfp("read=[%d] Target=[%d]\n", readCount , encoderCount);
ChkEncoder_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1060 : 	count = encoderCount - readCount;
goPosVial in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1194 : 	int32_t	readCount=0;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1529 : 	int32_t	readCount=0;
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1611 : 	int32_t	readCount=0;
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1777 : 	int32_t	readCount=0;
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1860 : 	int32_t	readCount=0;
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1960 : 	int32_t	readCount=0;
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3814 : 	int32_t	readCount=0;
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3960 : 	int32_t	readCount=0;
---- initHomePos_All Matches (7 in 3 files) ----
actionInitialize in LcasAction_task.c (Ch_AS4\apps_layer) line 4091 : 			if(initHomePos_All())	{
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 4826 : 			if(initHomePos_All())	{
actionAdjust in LcasAction_task.c (Ch_AS4\apps_layer) line 4862 : 			if(initHomePos_All())	{
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3685 : int initHomePos_All()
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4368 : 			if(initHomePos_All())	{
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4426 : 			if(initHomePos_All())	{
MotorCtrl_task.h (Ch_AS4\inc) line 114 : int initHomePos_All();
---- LED Matches (14 in 7 files) ----
_LCAS_BOARD_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 51 : //	gpio-out 8: LED S1
_LCAS_BOARD_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 52 : //	gpio-out 9: LED S2
_LCAS_BOARD_STATE_t in ComType_AS.h (Ch_AS4\common_inc) line 53 : //	gpio-out 10: LED S3
_LCAS_BOARD_CONTROL_t in ComType_AS.h (Ch_AS4\common_inc) line 92 : //	gpio-out 8: LED S1
_LCAS_BOARD_CONTROL_t in ComType_AS.h (Ch_AS4\common_inc) line 93 : //	gpio-out 9: LED S2
_LCAS_BOARD_CONTROL_t in ComType_AS.h (Ch_AS4\common_inc) line 94 : //	gpio-out 10: LED S3
define_AS.h (Ch_AS4\ryu_inc) line 44 : // 20210125				// ChroZen AS : RGB LED 적용
define_AS.h (Ch_AS4\ryu_inc) line 46 : // 20210429				// ChroZen AS : RGB LED 적용 - 출고용
startInjectionFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 812 : 	// LED
led_task.c (Ch_AS4\apps_layer) line 160 : // LED 설정
InitialLED in led_task.c (Ch_AS4\apps_layer) line 190 : // LED 설정
led_task.h (Ch_AS4\inc) line 8 : // LED Control
option_AS.h (Ch_AS4\ryu_inc) line 97 : // RGB LED Control
init_Control_port in sysconfig.c (Ch_AS4\apps_layer) line 276 : // LED 설정
---- InitialLED Matches (4 in 3 files) ----
led_task.c (Ch_AS4\apps_layer) line 157 : void InitialLED(void)
led_task.c (Ch_AS4\apps_layer) line 188 : void InitialLED(void)
led_task.h (Ch_AS4\inc) line 264 : void InitialLED(void);
init_Control_port in sysconfig.c (Ch_AS4\apps_layer) line 277 : 		InitialLED();
---- LED_Act_Ready Matches (5 in 3 files) ----
led_Control in led_task.c (Ch_AS4\apps_layer) line 95 : 					LED_Act_Ready();		// 분석중일 때 led 
led_Control in led_task.c (Ch_AS4\apps_layer) line 99 : 			if(menuChg) LED_Act_Ready();
led_task.c (Ch_AS4\apps_layer) line 229 : void LED_Act_Ready()
led_task.h (Ch_AS4\inc) line 269 : void LED_Act_Ready();
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1661 : 			LED_Act_Ready();
---- LED_Act_Ready Matches (5 in 3 files) ----
led_Control in led_task.c (Ch_AS4\apps_layer) line 95 : 					LED_Act_Ready();		// 분석중일 때 led 
led_Control in led_task.c (Ch_AS4\apps_layer) line 99 : 			if(menuChg) LED_Act_Ready();
led_task.c (Ch_AS4\apps_layer) line 229 : void LED_Act_Ready()
led_task.h (Ch_AS4\inc) line 269 : void LED_Act_Ready();
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1661 : 			LED_Act_Ready();
---- led_Control Matches (6 in 4 files) ----
LcasAction_task.c (Ch_AS4\apps_layer) line 6315 : 	pLed_Control_Fn = led_Control;
led_task.c (Ch_AS4\apps_layer) line 49 : void led_Control()
led_task.h (Ch_AS4\inc) line 260 : void led_Control();
main in main.c (Ch_AS4) line 284 : //	pLed_Control_Fn = led_Control;
main in main.c (Ch_AS4) line 315 : //	pLed_Control_Fn = led_Control;
main in main.c (Ch_AS4) line 321 : 	pLed_Control_Fn = led_Control;
---- goPosETC_Z_check Matches (6 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 66 : // goPosETC_Z_check() 수정 - error_16
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1957 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos)
MotorCtrl_task.h (Ch_AS4\inc) line 30 : #define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 31 : #define goPosWastePort()		goPosETC_Z_check(POS_XY_WASTE, POS_Z_WASTE, POS_Z_WASTE_DETECT, POS_Z_WASTE_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 35 : #define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 90 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos);
---- adjustInitPosition Matches (5 in 2 files) ----
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2932 : 			ackPacket = adjustInitPosition(part);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2941 : 			ackPacket = adjustInitPosition(part);
net_AS.c (Ch_AS4\apps_layer) line 2965 : int adjustInitPosition(unsigned char part)
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 2983 : dp("======================================================================adjustInitPosition  == ADJUST_ACT_NOT_READ\n");
net_AS.h (Ch_AS4\inc) line 64 : int adjustInitPosition(unsigned char part);
---- POS_XY_EXCHANGE Matches (11 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 547 : #define POS_XY_EXCHANGE			3		
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4176 : //					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_INJECTOR_TOP)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4177 : 					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_NEEDLE_DEPTH_ADJUST)) {
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4234 : 					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_VIAL_HEIGHT_ADJUST)) {					
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4376 : 				goX(POS_XY_EXCHANGE, TRAY_ETC, ACT_XY_POS);
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4377 : 				goY(POS_XY_EXCHANGE, TRAY_ETC, ACT_XY_POS);
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4487 : 	xyzCoord.etcStep_X[POS_XY_EXCHANGE] 			= (int)(COORD_X_EXCHANGE / MM_PER_STEP_X + 0.5) * (int)(MICRO_STEP_X);
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4488 : 		xyzCoord.etcStep_X[POS_XY_EXCHANGE] += devSet.adjust.value[ADJUST_INJ_PORT_VALUE_X] * ADJUST_STEP_UNIT_X;
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4501 : 	xyzCoord.etcStep_Y[POS_XY_EXCHANGE] 			= (int)(COORD_Y_EXCHANGE / MM_PER_STEP_Y + 0.5) * (int)(MICRO_STEP_Y);
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4502 : 		xyzCoord.etcStep_Y[POS_XY_EXCHANGE] += devSet.adjust.value[ADJUST_INJ_PORT_VALUE_Y] * ADJUST_STEP_UNIT_Y;
_U_VIAL_POS_t in protocolType_AS.h (Ch_AS4\common_inc) line 419 : 															#define POS_XY_EXCHANGE			3
---- ADJUST_STEP_UNIT_Z Matches (26 in 4 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 740 : #define ADJUST_STEP_UNIT_Z			(MICRO_STEP_Z * 4)
initSystemConfig_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5576 : //	devSet.left_z_bottom = COORD_Z_VIAL_40_BOTTOM + (devSet.adjust.value[ADJUST_INJ_PORT_VALUE_Z] * (ADJUST_STEP_UNIT_Z / MICRO_STEP_Z) * MM_PER_STEP_Z);
initSystemConfig_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5578 : 	devSet.left_z_bottom = COORD_Z_VIAL_60_BOTTOM + (devSet.adjust.value[ADJUST_INJ_PORT_VALUE_Z] * (ADJUST_STEP_UNIT_Z / MICRO_STEP_Z) * MM_PER_STEP_Z);					
initSystemConfig_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5581 : 	devSet.right_z_bottom = COORD_Z_VIAL_60_BOTTOM + (devSet.adjust.value[ADJUST_INJ_PORT_VALUE_Z] * (ADJUST_STEP_UNIT_Z / MICRO_STEP_Z) * MM_PER_STEP_Z);					
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4540 : 	AdjustInjectionStep_Z = devSet.adjust.value[ADJUST_INJ_PORT_VALUE_Z] * ADJUST_STEP_UNIT_Z;
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4542 : 	AdjustVialHeight_Z = devSet.adjust.vialHeight * ADJUST_STEP_UNIT_Z;
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2172 : 					goZ((-ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2179 : 					goZ((-ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2198 : 					goZ((-ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2206 : 					goZ((-ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2213 : //						goZ((-ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2221 : 					goZ((-ADJUST_STEP_UNIT_Z) * ADJUST_STEP_UNIT_SCALE_Z, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2228 : 					goZ((-ADJUST_STEP_UNIT_Z) * ADJUST_STEP_UNIT_SCALE_Z, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2247 : 					goZ((-ADJUST_STEP_UNIT_Z) * ADJUST_STEP_UNIT_SCALE_Z, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2255 : 					goZ((-ADJUST_STEP_UNIT_Z) * ADJUST_STEP_UNIT_SCALE_Z, ACT_MOVE_STEP_RELATE);	
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2266 : //						goZ((-ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);										
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2275 : 					goZ((ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);									
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2282 : 					goZ((ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2301 : 					goZ((ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2309 : 					goZ((ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);			
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2317 : 			//						goZ((-ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);										
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2327 : 					goZ((ADJUST_STEP_UNIT_Z) * ADJUST_STEP_UNIT_SCALE_Z, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2334 : 					goZ((ADJUST_STEP_UNIT_Z) * ADJUST_STEP_UNIT_SCALE_Z, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2353 : 					goZ((ADJUST_STEP_UNIT_Z) * ADJUST_STEP_UNIT_SCALE_Z, ACT_MOVE_STEP_RELATE);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2361 : 					goZ((ADJUST_STEP_UNIT_Z) * ADJUST_STEP_UNIT_SCALE_Z, ACT_MOVE_STEP_RELATE);	
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2372 : 			//						goZ((-ADJUST_STEP_UNIT_Z), ACT_MOVE_STEP_RELATE);										
---- SELF_COMMAND_REJECT Matches (111 in 4 files) ----
remoteControl in LcasAction_task.c (Ch_AS4\apps_layer) line 6234 : 				//				send_SelfMessage(SELF_COMMAND_REJECT,devState.command);	// 실행할 수 없음.
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4265 : 						send_SelfMessage(SELF_COMMAND_REJECT,0);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 209 : 		send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_EthernetConfig in net_AS.c (Ch_AS4\apps_layer) line 382 : 		send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_SystemConfig in net_AS.c (Ch_AS4\apps_layer) line 516 : 		send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_runSetup in net_AS.c (Ch_AS4\apps_layer) line 927 : 		send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_TimeEvent in net_AS.c (Ch_AS4\apps_layer) line 1056 : 		send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_MixSetup in net_AS.c (Ch_AS4\apps_layer) line 1129 : 		send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1442 : 		send_SelfMessage(SELF_COMMAND_REJECT,0);
net_Sequence in net_AS.c (Ch_AS4\apps_layer) line 1447 : 		send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1646 : 				send_SelfMessage(SELF_COMMAND_REJECT,devState.command);	// 실행할 수 없음.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1671 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1689 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1708 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1719 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1746 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1806 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_Command in net_AS.c (Ch_AS4\apps_layer) line 1814 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1872 : 							send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1885 : 							send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1893 : 							send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1901 : 							send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1909 : 							send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1917 : 							send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1925 : 							send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1936 : 							send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1948 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1960 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1968 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1976 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1984 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 1992 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2000 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2011 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2023 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2035 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2043 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2051 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2059 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2067 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2075 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2086 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2098 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2110 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2118 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2126 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2134 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2142 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2150 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2161 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2176 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2184 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2195 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2210 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_1);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2225 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2233 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2244 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2259 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_1);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2279 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2287 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2298 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2313 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_1);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2331 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2339 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2350 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2365 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_1);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2382 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2397 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2405 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2413 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2421 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2432 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2444 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2459 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2467 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2475 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2483 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2494 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2506 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2521 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2529 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2537 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2545 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2556 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2568 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2584 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2592 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2600 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2608 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
net_ServiceAdjust in net_AS.c (Ch_AS4\apps_layer) line 2619 : 						send_SelfMessage(SELF_COMMAND_REJECT,ADJUST_VALUE_ERROR_0);
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 2972 : 			send_SelfMessage(SELF_COMMAND_REJECT,0);
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 2978 : 			send_SelfMessage(SELF_COMMAND_REJECT,0);
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 3007 : 			send_SelfMessage(SELF_COMMAND_REJECT,0);
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 3013 : 			send_SelfMessage(SELF_COMMAND_REJECT,0);
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 3019 : dp("devSet.adjustAct = %d send_SelfMessage(SELF_COMMAND_REJECT,0)\n",devSet.adjustAct);
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 3020 : 			send_SelfMessage(SELF_COMMAND_REJECT,0);
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 3039 : dp("devSet.adjustAct = %d send_SelfMessage(SELF_COMMAND_REJECT,0)\n",devSet.adjustAct);
adjustInitPosition in net_AS.c (Ch_AS4\apps_layer) line 3040 : 			send_SelfMessage(SELF_COMMAND_REJECT,0);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3324 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3385 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3398 : //				send_SelfMessage(SELF_COMMAND_REJECT,0);
PacketParse in net_AS.c (Ch_AS4\apps_layer) line 3411 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3792 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3802 : //				send_SelfMessage(SELF_COMMAND_REJECT,0);
net_ServiceTempCal in net_AS.c (Ch_AS4\apps_layer) line 3808 : 				send_SelfMessage(SELF_COMMAND_REJECT,0);
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3934 : 		send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
net_UsedTime in net_AS.c (Ch_AS4\apps_layer) line 3974 : 		send_SelfMessage(SELF_COMMAND_REJECT,0);
net_Special in net_AS.c (Ch_AS4\apps_layer) line 3984 : 		send_SelfMessage(SELF_COMMAND_REJECT,0);	// 실행할 수 없음.
protocolType_AS.h (Ch_AS4\common_inc) line 15 : // 1. run중에는 설정값을 수정할 수 없음. - selfMessage 전송 (SELF_COMMAND_REJECT)
protocolType_AS.h (Ch_AS4\common_inc) line 528 : 							//  Start	 : STATE_READY 상태에서만 실행가능 - 불가능 상태일 때는 send_SelfMessage(SELF_COMMAND_REJECT,0);
protocolType_AS.h (Ch_AS4\common_inc) line 903 : #define SELF_COMMAND_REJECT		7		// 전송 명령 거부 ,전송된 명령을 실행할 수 없는 상태일 전송됨.
---- SELF_ERROR_HOME_CHK_Z Matches (4 in 2 files) ----
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1165 : 							errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2944 : 		errorFunction(SELF_ERROR_HOME_CHK_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3033 : 						errorFunction(SELF_ERROR_HOME_CHK_Z);
protocolType_AS.h (Ch_AS4\common_inc) line 857 : 	#define	SELF_ERROR_HOME_CHK_Z					22
---- SELF_ERROR_POSITION_XY Matches (3 in 3 files) ----
errFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 4034 : 		case SELF_ERROR_POSITION_XY: //					15
checkPosition in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5394 : 		errorFunction(SELF_ERROR_POSITION_XY);
protocolType_AS.h (Ch_AS4\common_inc) line 834 : 	#define SELF_ERROR_POSITION_XY					15
---- SELF_ERROR_POSITION_Z Matches (10 in 3 files) ----
errFunction in LcasAction_task.c (Ch_AS4\apps_layer) line 4039 : 		case SELF_ERROR_POSITION_Z: //						16
goX in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1298 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1382 : 		errorFunction(SELF_ERROR_POSITION_Z);
goX_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1460 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1515 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1598 : 		errorFunction(SELF_ERROR_POSITION_Z);
goY_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1670 : 		errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2019 : 											errorFunction(SELF_ERROR_POSITION_Z);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2111 : 	      		errorFunction(SELF_ERROR_POSITION_Z);
protocolType_AS.h (Ch_AS4\common_inc) line 835 : 	#define SELF_ERROR_POSITION_Z						16
---- SELF_ERROR_ENCODER_COUNT Matches (2 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 353 : 	#define errorEncoder(WHO)			errorFunction(SELF_ERROR_ENCODER_COUNT + WHO)
protocolType_AS.h (Ch_AS4\common_inc) line 839 : 	#define	SELF_ERROR_ENCODER_COUNT					30
---- errorEncoder Matches (14 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 353 : 	#define errorEncoder(WHO)			errorFunction(SELF_ERROR_ENCODER_COUNT + WHO)
Def_stepCon.h (Ch_AS4\common_inc) line 368 : 		if(ENCODER_CHECK_X) {	errorEncoder(MOTOR_X); } \
Def_stepCon.h (Ch_AS4\common_inc) line 376 : 		if(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_X) {	errorEncoder(MOTOR_X); } \
Def_stepCon.h (Ch_AS4\common_inc) line 385 : 		if(ENCODER_CHECK_Y) {	errorEncoder(MOTOR_Y); } \
Def_stepCon.h (Ch_AS4\common_inc) line 393 : 		if(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_Y) {	errorEncoder(MOTOR_Y); } \
Def_stepCon.h (Ch_AS4\common_inc) line 403 : 		if(ENCODER_CHECK_Z) {	errorEncoder(MOTOR_Z); } \
Def_stepCon.h (Ch_AS4\common_inc) line 411 : 		if(encoderCountCheck(encoderCount,readCount) > ERR_ENCODER_COUNT_Z) {	errorEncoder(MOTOR_Z); } \				
Def_stepCon.h (Ch_AS4\common_inc) line 429 : 			if(ENCODER_CHECK_SYR) {	errorEncoder(MOTOR_SYR); } \
Def_stepCon.h (Ch_AS4\common_inc) line 437 : 			if(readCount < ERR_ENCODER_COUNT_VAL)	{	errorEncoder(MOTOR_VAL);} \
Def_stepCon.h (Ch_AS4\common_inc) line 448 : 			if(readCount < ERR_ENCODER_COUNT_INJ) {	errorEncoder(MOTOR_INJ);} \
goRetryPos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 867 : 						errorEncoder(MOTOR_X);
goRetryPos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 928 : 						errorEncoder(MOTOR_Y);
goRetryPos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 984 : 						errorEncoder(MOTOR_Z);
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1164 : //							errorEncoder(MOTOR_Z);
---- MOVE_ERR_BOTH__VIAL_AND_Z_AXIS Matches (2 in 2 files) ----
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 699 : 			send_SelfMessage(SELF_ERROR, MOVE_ERR_BOTH__VIAL_AND_Z_AXIS);	
protocolType_AS.h (Ch_AS4\common_inc) line 846 : 	#define MOVE_ERR_BOTH__VIAL_AND_Z_AXIS			70
---- MOVE_ERR__VIAL_CHECK Matches (2 in 2 files) ----
moveStepSpeed in MotorCtrl_task.c (Ch_AS4\apps_layer) line 703 : 			send_SelfMessage(SELF_ERROR, MOVE_ERR__VIAL_CHECK);	
protocolType_AS.h (Ch_AS4\common_inc) line 847 : 	#define MOVE_ERR__VIAL_CHECK						71
---- motorReadyCmd Matches (62 in 5 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 315 : 	#define motorReadyCmd(WHO)	{CMD_SEL_MOTOR(WHO);	*((uint32_t volatile *)(devSet.ctrlPortAddr[WHO])) = (devState.curDir[WHO] | CMD_WAKEUP); }
Def_stepCon.h (Ch_AS4\common_inc) line 317 : //	#define motorWakeupCmd(WHO)			motorReadyCmd(WHO)
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 198 : 			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 200 : 			if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
endSequence in LcasAction_task.c (Ch_AS4\apps_layer) line 520 : 			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 662 : 			if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 669 : 			if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 676 : 			if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}
wakeup_XYZ_checkHome in LcasAction_task.c (Ch_AS4\apps_layer) line 683 : 			if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1391 : 						if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1392 : 						if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1744 : 						if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1745 : 						if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2155 : 					if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2156 : 					if(sleepChkVal(MOTOR_INJ)) { motorReadyCmd(MOTOR_INJ);}
mix_addPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3283 : 					 if(sleepChkVal(MOTOR_VAL))	{	motorReadyCmd(MOTOR_VAL);}
mix_mixPrgmNew in LcasAction_task.c (Ch_AS4\apps_layer) line 3573 : 			if(sleepChkVal(MOTOR_VAL)) { motorReadyCmd(MOTOR_VAL);}
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2548 : 			if(sleepChkVal(MOTOR_VAL)) {motorReadyCmd(MOTOR_VAL);}
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2611 : 				motorReadyCmd(MOTOR_VAL);		
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2688 : 			if(sleepChkVal(MOTOR_INJ)) {motorReadyCmd(MOTOR_INJ);}
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2752 : 				motorReadyCmd(MOTOR_INJ);		
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2880 : 				motorReadyCmd(MOTOR_SYR);		
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3057 : // 2. 홈위치찾은후 - motorReadyCmd() : Reset
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3060 : // 4. motorReadyCmd() : motor초기화 Reset
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3698 : 				motorReadyCmd(MOTOR_VAL);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3701 : 				motorReadyCmd(MOTOR_INJ);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3724 : 				motorReadyCmd(MOTOR_Z);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3742 : 				motorReadyCmd(MOTOR_X);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3759 : 				motorReadyCmd(MOTOR_Y);
initHomePos_All in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3782 : 				motorReadyCmd(MOTOR_SYR);
AS_INIT_Position_Encoder_Check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3834 : //		if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);
MotorCtrl_task.c (Ch_AS4\apps_layer) line 3980 : //		if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4188 : 						motorReadyCmd(MOTOR_VAL);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4194 : 						motorReadyCmd(MOTOR_INJ);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4315 : 				motorReadyCmd(MOTOR_VAL);
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4322 : 					motorReadyCmd(MOTOR_INJ);
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4432 : 				motorReadyCmd(MOTOR_VAL);
option_AS.h (Ch_AS4\ryu_inc) line 24 : //		#define FPGA_VERSION_TRIM_BREAK			1				// motorResetCmd   or   motorReadyCmd
testPrgm.c (Ch_AS4\apps_layer) line 792 : 						motorReadyCmd(MOTOR_VAL);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1003 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1025 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1047 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1068 : 					if(sleepChk(MOTOR_X)) { motorReadyCmd(MOTOR_X);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1090 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1111 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1132 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1153 : 					if(sleepChk(MOTOR_Y)) { motorReadyCmd(MOTOR_Y);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1175 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1197 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1218 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1239 : 					if(sleepChk(MOTOR_Z)) { motorReadyCmd(MOTOR_Z);}					
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1450 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1474 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1497 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1521 : 						motorReadyCmd(MOTOR_VAL);		
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1544 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1565 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1586 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
mTest_VAL_SYR_Act in testPrgm.c (Ch_AS4\apps_layer) line 1607 : 					if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1741 : 				motorReadyCmd(MOTOR_VAL);		
machineTest_Mode_VAL_SYR_1Cycle in testPrgm.c (Ch_AS4\apps_layer) line 1764 : 			if(sleepChk(MOTOR_SYR)) { motorReadyCmd(MOTOR_SYR);}
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2096 : 			motorReadyCmd(i);
---- stepControl Matches (95 in 3 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 539 : int stepControl(uint32_t who, uint32_t ctrlCmd, uint32_t Speed, uint32_t totalStep)
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 777 : 			moveErr = stepControl(who, HOME_DIR_X | CMD_START, speed, totalStep);
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 784 : 			moveErr = stepControl(who, HOME_DIR_Y | CMD_START, speed, totalStep);
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 791 : 			stepControl(who, HOME_DIR_Z | CMD_START, speed, totalStep);
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 795 : 			stepControl(who, HOME_DIR_SYR | CMD_START, speed, totalStep);
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 800 : 			stepControl(who, HOME_DIR_VAL | CMD_START, rpm, totalStep);
goSensorHome in MotorCtrl_task.c (Ch_AS4\apps_layer) line 811 : 			stepControl(who, HOME_DIR_INJ | CMD_START, rpm, totalStep);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2561 : 				stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], HOME_CHECK_INIT_STEP_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2579 : 				stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], STEP_VAL_DEGREE_18);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2585 : 				stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], HOME_CHECK_INIT_STEP_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2603 : 				stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], STEP_VAL_DEGREE_18);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2628 : 					if(devSet.adjust.value[MOTOR_VAL] > 0) stepControl(MOTOR_VAL, R_HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], devSet.adjust.value[MOTOR_VAL] * ADJUST_STEP_UNIT_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2629 : 					else if(devSet.adjust.value[MOTOR_VAL] < 0) stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], -devSet.adjust.value[MOTOR_VAL] * ADJUST_STEP_UNIT_VAL);
initHomePos_Val in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2636 : 					stepControl(MOTOR_VAL, HOME_DIR_VAL | CMD_START, devSet.chkHomeSpeed[MOTOR_VAL], FIND_HOME_UNIT_STEP_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2701 : 				stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], HOME_CHECK_INIT_STEP_INJ);				
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2719 : 				stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], STEP_INJ_DEGREE_18);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2726 : 				stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], HOME_CHECK_INIT_STEP_INJ);				
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2744 : 				stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], STEP_INJ_DEGREE_18);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2769 : 					if(devSet.adjust.value[MOTOR_INJ] > 0) stepControl(MOTOR_INJ, R_HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], devSet.adjust.value[MOTOR_INJ] * ADJUST_STEP_UNIT_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2770 : 					else if(devSet.adjust.value[MOTOR_INJ] < 0) stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], -devSet.adjust.value[MOTOR_INJ] * ADJUST_STEP_UNIT_VAL);
initHomePos_Inj in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2777 : 					stepControl(MOTOR_INJ, HOME_DIR_INJ | CMD_START, devSet.chkHomeSpeed[MOTOR_INJ], FIND_HOME_UNIT_STEP_INJ);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2851 : 				stepControl(MOTOR_SYR, R_HOME_DIR_SYR| CMD_START, devSet.chkHomeSpeed[MOTOR_SYR], HOME_CHECK_INIT_STEP_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2874 : 			stepControl(MOTOR_SYR, R_HOME_DIR_SYR| CMD_START, devSet.chkHomeSpeed[MOTOR_SYR], HOME_CHECK_STEP_SYR);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2900 : 						stepControl(MOTOR_SYR, R_HOME_DIR_SYR | CMD_START, devSet.chkHomeSpeed[MOTOR_SYR], homeStep);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2903 : 						stepControl(MOTOR_SYR, HOME_DIR_SYR | CMD_START, devSet.chkHomeSpeed[MOTOR_SYR], -homeStep);
initHomePos_Syr in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2908 : 					stepControl(MOTOR_SYR, HOME_DIR_SYR | CMD_START, devSet.chkHomeSpeed[MOTOR_SYR], FIND_HOME_UNIT_STEP_SYR);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2968 : //				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], HOME_CHECK_INIT_STEP_Z);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2971 : 				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], 3200);	// 4.88mm
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2973 : 				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], devSet.chkHomeStepCnt[MOTOR_Z]);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3000 : 			stepControl(MOTOR_Z, HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], STEP_MORE_HOME_Z);			
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3006 : 				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], 3200); // 4.88mm
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3008 : 				stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], devSet.chkHomeStepCnt[MOTOR_Z]);
initHomePos_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3028 : 			stepControl(MOTOR_Z, HOME_DIR_Z | CMD_START, devSet.chkHomeSpeed[MOTOR_Z], STEP_MORE_HOME_Z);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3113 : 				stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600); 
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3141 : 			stepControl(MOTOR_X, HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], STEP_MORE_HOME_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3158 : 			stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600); 
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3159 : //			stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 32); 			
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3180 : 			stepControl(MOTOR_X, HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], STEP_MORE_HOME_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3251 : 				stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600); 
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3274 : 			stepControl(MOTOR_X, HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], STEP_MORE_HOME_X);
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3288 : 			stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600); 
initHomePos_X in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3306 : 			stepControl(MOTOR_X, HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], STEP_MORE_HOME_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3383 : 				stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3411 : 			stepControl(MOTOR_X, HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], STEP_MORE_HOME_X);
initHomePos_X1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3428 : 			stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, devSet.chkHomeSpeed[MOTOR_X], 1600); 
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3497 : 				stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], 1600);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3520 : 			stepControl(MOTOR_Y, HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], STEP_MORE_HOME_Y);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3533 : 			stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], 1600);
initHomePos_Y in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3551 : 			stepControl(MOTOR_Y, HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], STEP_MORE_HOME_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3621 : 				stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], 1600);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3644 : 			stepControl(MOTOR_Y, HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], STEP_MORE_HOME_Y);
initHomePos_Y1 in MotorCtrl_task.c (Ch_AS4\apps_layer) line 3657 : 			stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, devSet.chkHomeSpeed[MOTOR_Y], 1600);
MotorCtrl_task.h (Ch_AS4\inc) line 51 : int stepControl(uint32_t who, uint32_t ctrlCmd, uint32_t Speed, uint32_t totalStep);
testPrgm.c (Ch_AS4\apps_layer) line 289 : 					stepControl(who , HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);		
testPrgm.c (Ch_AS4\apps_layer) line 295 : 					stepControl(who, R_HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);
testPrgm.c (Ch_AS4\apps_layer) line 301 : 					stepControl(who , HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 307 : 					stepControl(who, R_HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 321 : 					stepControl(who , HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);		
testPrgm.c (Ch_AS4\apps_layer) line 327 : 					stepControl(who, R_HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);
testPrgm.c (Ch_AS4\apps_layer) line 333 : 					stepControl(who , HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 339 : 					stepControl(who, R_HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 352 : 					stepControl(who , HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 50);		
testPrgm.c (Ch_AS4\apps_layer) line 358 : 					stepControl(who, R_HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 50);
testPrgm.c (Ch_AS4\apps_layer) line 364 : 					stepControl(who , HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 2400);		
testPrgm.c (Ch_AS4\apps_layer) line 370 : 					stepControl(who, R_HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 2400);		
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1008 : //						stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_X * 1600	);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1009 : 						stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, M_TEST_XYZ_SPEED_X, M_TEST_XYZ_LONG_STEP_X);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1030 : //						stepControl(MOTOR_X, HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_X * 1600);					
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1031 : 						stepControl(MOTOR_X, HOME_DIR_X | CMD_START, M_TEST_XYZ_SPEED_X, M_TEST_XYZ_LONG_STEP_X);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1052 : 						stepControl(MOTOR_X, R_HOME_DIR_X | CMD_START, M_TEST_XYZ_SPEED_X, M_TEST_XYZ_SHORT_STEP_X);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1073 : 						stepControl(MOTOR_X, HOME_DIR_X | CMD_START, M_TEST_XYZ_SPEED_X, M_TEST_XYZ_SHORT_STEP_X);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1095 : 						stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, M_TEST_XYZ_SPEED_Y, M_TEST_XYZ_LONG_STEP_Y);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1116 : 						stepControl(MOTOR_Y, HOME_DIR_Y | CMD_START, M_TEST_XYZ_SPEED_Y, M_TEST_XYZ_LONG_STEP_Y);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1137 : 						stepControl(MOTOR_Y, R_HOME_DIR_Y | CMD_START, M_TEST_XYZ_SPEED_Y, M_TEST_XYZ_SHORT_STEP_Y);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1158 : 						stepControl(MOTOR_Y, HOME_DIR_Y | CMD_START, M_TEST_XYZ_SPEED_Y, M_TEST_XYZ_SHORT_STEP_Y);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1181 : 						stepControl(MOTOR_Z, HOME_DIR_Z | CMD_START, M_TEST_XYZ_SPEED_Z, M_TEST_XYZ_LONG_STEP_Z);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1202 : 						stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, M_TEST_XYZ_SPEED_Z, M_TEST_XYZ_LONG_STEP_Z);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1223 : 						stepControl(MOTOR_Z, HOME_DIR_Z | CMD_START, M_TEST_XYZ_SPEED_Z, M_TEST_XYZ_SHORT_STEP_Z);
mTest_X_Y_Z_Act in testPrgm.c (Ch_AS4\apps_layer) line 1244 : 						stepControl(MOTOR_Z, R_HOME_DIR_Z | CMD_START, M_TEST_XYZ_SPEED_Z, M_TEST_XYZ_SHORT_STEP_Z);
testPrgm.c (Ch_AS4\apps_layer) line 1927 : 					stepControl(who , HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);		
testPrgm.c (Ch_AS4\apps_layer) line 1933 : 					stepControl(who, R_HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);
testPrgm.c (Ch_AS4\apps_layer) line 1939 : 					stepControl(who , HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 1945 : 					stepControl(who, R_HOME_DIR_X | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 1959 : 					stepControl(who , HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);		
testPrgm.c (Ch_AS4\apps_layer) line 1965 : 					stepControl(who, R_HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 40);
testPrgm.c (Ch_AS4\apps_layer) line 1971 : 					stepControl(who , HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 1977 : 					stepControl(who, R_HOME_DIR_Y | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 1600);		
testPrgm.c (Ch_AS4\apps_layer) line 1990 : 					stepControl(who , HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 50);		
testPrgm.c (Ch_AS4\apps_layer) line 1996 : 					stepControl(who, R_HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 50);
testPrgm.c (Ch_AS4\apps_layer) line 2002 : 					stepControl(who , HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 2400);		
testPrgm.c (Ch_AS4\apps_layer) line 2008 : 					stepControl(who, R_HOME_DIR_Z | CMD_START, 149, FIND_HOME_UNIT_STEP_Z * 2400);		
testPrgm.c (Ch_AS4\apps_layer) line 2079 : 				stepControl(i, MotorCtrlSet.bDir[i] | CMD_START | MotorCtrlSet.bInfinite[i], MotorCtrlSet.nSpeedMax[i] | MotorCtrlSet.nSpeedMin[i] << 8, MotorCtrlSet.nStep[i]);
testPrgm.c (Ch_AS4\apps_layer) line 2080 : //				stepControl(i, MotorCtrlSet.bDir[i] | CMD_START | MotorCtrlSet.bInfinite[i], MotorCtrlSet.nSpeedMax[i] | MotorCtrlSet.nSpeedMin[i], MotorCtrlSet.nStep[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2111 : 				stepControl(i, MotorCtrlSet.bDir[i] | CMD_START | MotorCtrlSet.bInfinite[i], MotorCtrlSet.nSpeedMax[i] | MotorCtrlSet.nSpeedMin[i] << 8, MotorCtrlSet.nStep[i]);
motorControlFn in testPrgm.c (Ch_AS4\apps_layer) line 2118 : dprintf("## stepControl       chk_Dir=%08x\n",devState.chk_Dir[i]);
---- FPGA Matches (31 in 10 files) ----
adc_if_AS.c (Ch_AS4\apps_layer) line 4 : // FPGA : 16.471Mhz
NVIC_set_handler in cortex_nvic.c (Ch_AS4\firmware\hal\CortexM3) line 50 :      * handle interrupts from peripherals implemeted in the SmartFusion2 FPGA
initDiagData in LcasAction_task.c (Ch_AS4\apps_layer) line 5850 : 	diagData.V1_5Dcheck = DIAG_RESULT_NONE;		// FPGA Core +1.5V
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 74 :   FabricIrq0_IRQn                 = 34,       /*!< FPGA fabric interrupt 0                              */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 75 :   FabricIrq1_IRQn                 = 35,       /*!< FPGA fabric interrupt 1                              */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 76 :   FabricIrq2_IRQn                 = 36,       /*!< FPGA fabric interrupt 2                              */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 77 :   FabricIrq3_IRQn                 = 37,       /*!< FPGA fabric interrupt 3                              */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 78 :   FabricIrq4_IRQn                 = 38,       /*!< FPGA fabric interrupt 4                              */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 79 :   FabricIrq5_IRQn                 = 39,       /*!< FPGA fabric interrupt 5                              */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 80 :   FabricIrq6_IRQn                 = 40,       /*!< FPGA fabric interrupt 6                              */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 81 :   FabricIrq7_IRQn                 = 41,       /*!< FPGA fabric interrupt 7                              */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 82 :   FabricIrq8_IRQn                 = 42,       /*!< FPGA fabric interrupt 8                              */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 83 :   FabricIrq9_IRQn                 = 43,       /*!< FPGA fabric interrupt 9                              */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 84 :   FabricIrq10_IRQn                = 44,       /*!< FPGA fabric interrupt 10                             */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 85 :   FabricIrq11_IRQn                = 45,       /*!< FPGA fabric interrupt 11                             */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 86 :   FabricIrq12_IRQn                = 46,       /*!< FPGA fabric interrupt 12                             */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 87 :   FabricIrq13_IRQn                = 47,       /*!< FPGA fabric interrupt 13                             */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 88 :   FabricIrq14_IRQn                = 48,       /*!< FPGA fabric interrupt 14                             */
IRQn in m2sxxx.h (Ch_AS4\firmware\CMSIS) line 89 :   FabricIrq15_IRQn                = 49,       /*!< FPGA fabric interrupt 15                             */  
m2sxxx.h (Ch_AS4\firmware\CMSIS) line 986 : /*--------------------- FPGA Fabric Interrupt Controller ---------------------*/
mss_nvm.h (Ch_AS4\firmware\drivers\mss_nvm) line 115 :       This could be due to the FPGA logic or the system controller programming
_LCAS_DIAG_DATA in protocolType_AS.h (Ch_AS4\common_inc) line 951 : 	unsigned char V1_5Dcheck;		// FPGA Core +1.5V		[5]
sysconfig.c (Ch_AS4\apps_layer) line 794 : //	  Ver 저장 : app Ver, FPGA Ver
system_m2sxxx.c (Ch_AS4\firmware\CMSIS) line 76 : uint32_t g_FrequencyFIC0 = MSS_SYS_FIC_0_CLK_FREQ;      /*!< Clock frequecny of FPGA fabric interface controller 1. */
system_m2sxxx.c (Ch_AS4\firmware\CMSIS) line 77 : uint32_t g_FrequencyFIC1 = MSS_SYS_FIC_1_CLK_FREQ;      /*!< Clock frequecny of FPGA fabric inteface controller 2. */
system_m2sxxx.c (Ch_AS4\firmware\CMSIS) line 78 : uint32_t g_FrequencyFIC64 = MSS_SYS_FIC64_CLK_FREQ;     /*!< Clock frequecny of 64-bit FPGA fabric interface controller. */
SystemInit in system_m2sxxx.c (Ch_AS4\firmware\CMSIS) line 522 :      * reset would result in the FPGA fabric being held in reset and getting
system_m2sxxx.h (Ch_AS4\firmware\CMSIS) line 24 : extern uint32_t g_FrequencyFIC0;    /*!< Clock frequecny of FPGA fabric interface controller 1. */
system_m2sxxx.h (Ch_AS4\firmware\CMSIS) line 25 : extern uint32_t g_FrequencyFIC1;    /*!< Clock frequecny of FPGA fabric inteface controller 2. */
system_m2sxxx.h (Ch_AS4\firmware\CMSIS) line 26 : extern uint32_t g_FrequencyFIC64;   /*!< Clock frequecny of 64-bit FPGA fabric interface controller. */
util.c (Ch_AS4\apps_layer) line 149 : 0 번지의  FPGA 버전 값을 통해 구분하였다. 
---- PrintFabricVersion Matches (4 in 2 files) ----
util.c (Ch_AS4\apps_layer) line 153 : uint8_t PrintFabricVersion(void)
PrintFabricVersion in util.c (Ch_AS4\apps_layer) line 159 : //		printf("PrintFabricVersion()\r\n");
Intro in util.c (Ch_AS4\apps_layer) line 196 : 	MasterSlave = PrintFabricVersion();
util.h (Ch_AS4\inc) line 35 : uint8_t PrintFabricVersion(void);
---- FPGAVer Matches (4 in 4 files) ----
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5021 : 	as_INFO.FPGAVer = FPGA_READ_WORD(R0_FPGA_VER);
_CHROZEN_INFORMATION_t in protocolType_AS.h (Ch_AS4\common_inc) line 1079 : 	unsigned int	FPGAVer;
init_system in sysconfig.c (Ch_AS4\apps_layer) line 360 : //	as_INFO.FPGAVer = FPGA_READ_WORD(R0_FPGA_VER);
{anonSTORAGE_SYS_INFO_T} in sysconfig.h (Ch_AS4\inc) line 41 : 	unsigned int	FPGAVer;
---- initSystemInform_envm Matches (4 in 2 files) ----
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4978 : //	else initSystemInform_envm();
LcasAction_task.c (Ch_AS4\apps_layer) line 5011 : void initSystemInform_envm()
initSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5109 : 	initSystemInform_envm();
LcasAction_task.h (Ch_AS4\inc) line 110 : void initSystemInform_envm();
---- initSystemInform_envm Matches (4 in 2 files) ----
convert_SystemInform_eeprom2envm in LcasAction_task.c (Ch_AS4\apps_layer) line 4978 : //	else initSystemInform_envm();
LcasAction_task.c (Ch_AS4\apps_layer) line 5011 : void initSystemInform_envm()
initSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5109 : 	initSystemInform_envm();
LcasAction_task.h (Ch_AS4\inc) line 110 : void initSystemInform_envm();
---- FPGA_VER_STORAGE_OFFSET Matches (1 in 1 files) ----
sysconfig.h (Ch_AS4\inc) line 62 : 	#define FPGA_VER_STORAGE_OFFSET		12	
---- INFO_COMMON_VER_SER_ENVM_ADDR Matches (10 in 2 files) ----
isEnvmDataAvailable in sysconfig.c (Ch_AS4\apps_layer) line 807 : 	addr = INFO_COMMON_VER_SER_ENVM_ADDR + USED_ENVM_STORAGE_OFFSET;
isFirmwareUpdate in sysconfig.c (Ch_AS4\apps_layer) line 831 : 	addr = INFO_COMMON_VER_SER_ENVM_ADDR + APP_VER_STORAGE_OFFSET;
save_Storage_INFO_Ver_Envm in sysconfig.c (Ch_AS4\apps_layer) line 942 : 	addr = INFO_COMMON_VER_SER_ENVM_ADDR + APP_VER_STORAGE_OFFSET;
save_Storage_INFO_Ver_Envm in sysconfig.c (Ch_AS4\apps_layer) line 947 : 	addr = INFO_COMMON_VER_SER_ENVM_ADDR + MODEL_STORAGE_OFFSET;
save_Storage_INFO_Ver_Envm in sysconfig.c (Ch_AS4\apps_layer) line 952 : 	addr = INFO_COMMON_VER_SER_ENVM_ADDR + USED_ENVM_STORAGE_OFFSET;
sysconfig.h (Ch_AS4\inc) line 54 : #define INFO_COMMON_VER_SER_ENVM_ADDR				0x3F000 	// ChroZen-LC 공통부분 
sysconfig.h (Ch_AS4\inc) line 84 : #define INFO_SERIAL_NO_ENVM_ADDR				(INFO_COMMON_VER_SER_ENVM_ADDR + SERIOL_NO_STORAGE_OFFSET) 	// saveFlag : 0x3F300
sysconfig.h (Ch_AS4\inc) line 86 : #define INFO_INSTALL_DATE_ENVM_ADDR			(INFO_COMMON_VER_SER_ENVM_ADDR + INSTALL_DATE_STORAGE_OFFSET) 	// saveFlag : 0x3F300	
sysconfig.h (Ch_AS4\inc) line 89 : #define INFO_IP_ADDR_ENVM_ADDR					(INFO_COMMON_VER_SER_ENVM_ADDR + IP_ADDR_STORAGE_OFFSET)		// saveFlag : 0x3F301
sysconfig.h (Ch_AS4\inc) line 91 : #define INFO_MACADDR_ENVM_ADDR					(INFO_COMMON_VER_SER_ENVM_ADDR + MAC_ADDR_STORAGE_OFFSET)		// saveFlag : 0x3F302
---- MOVE_STEP_SPEED_ERROR_2_STEP_FIX Matches (4 in 2 files) ----
MotorCtrl_task.c (Ch_AS4\apps_layer) line 397 : #if MOVE_STEP_SPEED_ERROR_2_STEP_FIX
moveStep in MotorCtrl_task.c (Ch_AS4\apps_layer) line 427 : //#if MOVE_STEP_SPEED_ERROR_2_STEP_FIX
stepControl in MotorCtrl_task.c (Ch_AS4\apps_layer) line 556 : //#if MOVE_STEP_SPEED_ERROR_2_STEP_FIX
option_AS.h (Ch_AS4\ryu_inc) line 398 : #define MOVE_STEP_SPEED_ERROR_2_STEP_FIX		1
---- cmdChkDir_RESET_Addr Matches (8 in 3 files) ----
_LCAS_DEV_SET_t in ComType_AS.h (Ch_AS4\common_inc) line 592 : 	unsigned int cmdChkDir_RESET_Addr[STEP_MOTOR_COUNT];
define_AS.h (Ch_AS4\ryu_inc) line 422 : 	#define CMD_CHK_DIR_RESET(WHO)		*((uint32_t volatile *)(devSet.cmdChkDir_RESET_Addr[WHO])) = 0x0; 
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4972 : 	devSet.cmdChkDir_RESET_Addr[MOTOR_X] = BASEADDR_MOTOR_X_Z + (0x30C << 2);
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4973 : 	devSet.cmdChkDir_RESET_Addr[MOTOR_Y] = BASEADDR_MOTOR_Y_SYR + (0x308 << 2);
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4974 : 	devSet.cmdChkDir_RESET_Addr[MOTOR_Z] = BASEADDR_MOTOR_X_Z + (0x308 << 2);
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4975 : 	devSet.cmdChkDir_RESET_Addr[MOTOR_SYR] = BASEADDR_MOTOR_Y_SYR + (0x30C << 2);
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4976 : 	//devSet.cmdChkDir_RESET_Addr[MOTOR_VAL] = BASEADDR_MOTOR_X_Z + (0x30C << 2);
initStepCtrlValue in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4977 : 	//devSet.cmdChkDir_RESET_Addr[MOTOR_INJ] = BASEADDR_MOTOR_X_Z + (0x30C << 2);
---- goPosETC_Z_check Matches (6 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 66 : // goPosETC_Z_check() 수정 - error_16
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1963 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos)
MotorCtrl_task.h (Ch_AS4\inc) line 30 : #define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 31 : #define goPosWastePort()		goPosETC_Z_check(POS_XY_WASTE, POS_Z_WASTE, POS_Z_WASTE_DETECT, POS_Z_WASTE_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 35 : #define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 90 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos);
---- POS_Z_WASH_DETECT Matches (4 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 597 : #define POS_Z_WASH_DETECT			18		
Def_stepCon.h (Ch_AS4\common_inc) line 717 : //#define POS_Z_WASH_DETECT			18		
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4604 : 	xyzCoord.step_Z[POS_Z_WASH_DETECT] = xyzCoord.step_Z[POS_Z_WASH_TOP] + portDetectDepthStep;
MotorCtrl_task.h (Ch_AS4\inc) line 30 : #define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
---- POS_Z_VIAL_HEIGHT_ADJUST Matches (5 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 605 : #define POS_Z_VIAL_HEIGHT_ADJUST	23		// 바이알 체크 - injector top
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4239 : //					if(goPosETC_Z(POS_XY_INJECTOR, POS_Z_VIAL_HEIGHT_ADJUST)) {					
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4240 : 					if(goPosETC_Z(POS_XY_EXCHANGE, POS_Z_VIAL_HEIGHT_ADJUST)) {					
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4572 : 	xyzCoord.step_Z[POS_Z_VIAL_HEIGHT_ADJUST] = (int)(COORD_Z_INJECTOR_TOP / MM_PER_STEP_Z + 0.5) * (int)(MICRO_STEP_Z);
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4573 : 			xyzCoord.step_Z[POS_Z_VIAL_HEIGHT_ADJUST] +=	AdjustVialHeight_Z;
---- POS_Z_INJECTION_PORT_UPPER_DETECT Matches (4 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 601 : #define POS_Z_INJECTION_PORT_UPPER_DETECT		21		
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4600 : 	xyzCoord.step_Z[POS_Z_INJECTION_PORT_UPPER_DETECT] = (int)((COORD_Z_INJECTOR_TOP - 1) / MM_PER_STEP_Z + 0.5) * (int)(MICRO_STEP_Z);
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4601 : 		xyzCoord.step_Z[POS_Z_INJECTION_PORT_UPPER_DETECT] += AdjustVialHeight_Z;				
MotorCtrl_task.h (Ch_AS4\inc) line 35 : #define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
---- POS_Z_WASTE_UPPER_DETECT Matches (3 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 602 : #define POS_Z_WASTE_UPPER_DETECT		22 // 23		
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4611 : xyzCoord.step_Z[POS_Z_WASTE_UPPER_DETECT] = xyzCoord.step_Z[POS_Z_WASH_TOP];
MotorCtrl_task.h (Ch_AS4\inc) line 31 : #define goPosWastePort()		goPosETC_Z_check(POS_XY_WASTE, POS_Z_WASTE, POS_Z_WASTE_DETECT, POS_Z_WASTE_UPPER_DETECT)
---- goPosETC_Z_check Matches (6 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 66 : // goPosETC_Z_check() 수정 - error_16
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1963 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos)
MotorCtrl_task.h (Ch_AS4\inc) line 30 : #define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 31 : #define goPosWastePort()		goPosETC_Z_check(POS_XY_WASTE, POS_Z_WASTE, POS_Z_WASTE_DETECT, POS_Z_WASTE_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 35 : #define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 90 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos);
---- POS_Z_INJECTION_PORT_UPPER_DETECT Matches (4 in 3 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 601 : #define POS_Z_INJECTION_PORT_UPPER_DETECT		21		
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4600 : 	xyzCoord.step_Z[POS_Z_INJECTION_PORT_UPPER_DETECT] = (int)((COORD_Z_INJECTOR_TOP - 1) / MM_PER_STEP_Z + 0.5) * (int)(MICRO_STEP_Z);
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4601 : 		xyzCoord.step_Z[POS_Z_INJECTION_PORT_UPPER_DETECT] += AdjustVialHeight_Z;				
MotorCtrl_task.h (Ch_AS4\inc) line 35 : #define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
---- POS_Z_WASH_TOP Matches (7 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 589 : #define POS_Z_WASH_TOP			14		
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4586 : 	xyzCoord.step_Z[POS_Z_WASH_TOP] = (int)(COORD_Z_WASH_TOP / MM_PER_STEP_Z + 0.5) * (int)(MICRO_STEP_Z);
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4587 : 		xyzCoord.step_Z[POS_Z_WASH_TOP] += AdjustVialHeight_Z;				
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4604 : 	xyzCoord.step_Z[POS_Z_WASH_DETECT] = xyzCoord.step_Z[POS_Z_WASH_TOP] + portDetectDepthStep;
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4606 : xyzCoord.step_Z[POS_Z_WASH_UPPER_DETECT] = xyzCoord.step_Z[POS_Z_WASH_TOP];	
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4609 : 	xyzCoord.step_Z[POS_Z_WASTE_DETECT] = xyzCoord.step_Z[POS_Z_WASH_TOP] + portDetectDepthStep;
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4611 : xyzCoord.step_Z[POS_Z_WASTE_UPPER_DETECT] = xyzCoord.step_Z[POS_Z_WASH_TOP];
---- ACT_Z_POS Matches (18 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 541 : #define ACT_Z_POS										0 // 좌표입력 , mm / uL ... (z 좌표입력)
readyChkRetry_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1166 : 					if(devState.mActSet[MOTOR_Z].pos == POS_Z_TOP && devState.mActSet[MOTOR_Z].option == ACT_Z_POS) {
goZ in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1695 : 		case ACT_Z_POS:			
goZ_Encoder in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1735 : 		case ACT_Z_POS:
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1813 : 			encoderCount = goZ_Encoder(POS_Z_TOP,ACT_Z_POS);
goPosVial_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1843 :      			encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1897 : 			encoderCount = goZ_Encoder(POS_Z_TOP,ACT_Z_POS);
goPosETC_Z in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1934 : 		  	encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 1994 : 				encoderCount = goZ_Encoder(POS_Z_TOP,ACT_Z_POS);	// CMD_CHK_DIR_START_Z
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2042 : 			encoderCount = goZ_Encoder(z_chk_upper_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2053 : 				encoderCount = goZ_Encoder(z_chk_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2060 : 					encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2070 : 						encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2083 : 				encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
goPosETC_Z_check in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2104 : 					encoderCount = goZ_Encoder(z_pos, ACT_Z_POS);
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4377 : 			goZ(POS_Z_TOP,ACT_Z_POS);
adjustNeedleExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4389 : 				goZ(POS_Z_NEEDLE_EXCHANGE, ACT_Z_POS);
adjustSyringeExchange in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4433 : 			goZ(POS_Z_TOP,ACT_Z_POS);
---- goPosETC_Z_check Matches (6 in 3 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 66 : // goPosETC_Z_check() 수정 - error_16
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1963 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos)
MotorCtrl_task.h (Ch_AS4\inc) line 30 : #define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 31 : #define goPosWastePort()		goPosETC_Z_check(POS_XY_WASTE, POS_Z_WASTE, POS_Z_WASTE_DETECT, POS_Z_WASTE_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 35 : #define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 90 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos);
---- POS_Z_WASH_TOP Matches (9 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 589 : #define POS_Z_WASH_TOP			14		
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4586 : 	xyzCoord.step_Z[POS_Z_WASH_TOP] = (int)(COORD_Z_WASH_TOP / MM_PER_STEP_Z + 0.5) * (int)(MICRO_STEP_Z);
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4587 : 		xyzCoord.step_Z[POS_Z_WASH_TOP] += AdjustVialHeight_Z;		
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4588 : dprintf("xyzCoord.step_Z[POS_Z_WASH_TOP] = [%d] AdjustVialHeight_Z= [%d]\n",xyzCoord.step_Z[POS_Z_WASH_TOP], AdjustVialHeight_Z);
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4606 : 	xyzCoord.step_Z[POS_Z_WASH_DETECT] = xyzCoord.step_Z[POS_Z_WASH_TOP] + portDetectDepthStep;
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4608 : xyzCoord.step_Z[POS_Z_WASH_UPPER_DETECT] = xyzCoord.step_Z[POS_Z_WASH_TOP];	
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4611 : 	xyzCoord.step_Z[POS_Z_WASTE_DETECT] = xyzCoord.step_Z[POS_Z_WASH_TOP] + portDetectDepthStep;
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4613 : xyzCoord.step_Z[POS_Z_WASTE_UPPER_DETECT] = xyzCoord.step_Z[POS_Z_WASH_TOP];
---- POS_Z_WASH Matches (6 in 4 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 573 : #define POS_Z_WASH					4		// WASH Port 세척위치(내부) 
Def_stepCon.h (Ch_AS4\common_inc) line 687 : //#define POS_Z_WASH					4		// WASH Port 세척위치 
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4565 : 	xyzCoord.step_Z[POS_Z_WASH] 			= (int)(COORD_Z_WASH 		/ MM_PER_STEP_Z + 0.5) * (int)(MICRO_STEP_Z);
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4566 : 		xyzCoord.step_Z[POS_Z_WASH] +=	AdjustVialHeight_Z;
MotorCtrl_task.h (Ch_AS4\inc) line 30 : #define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
option_AS.h (Ch_AS4\ryu_inc) line 456 : //#define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
---- POS_Z_INJECTOR_TOP_ADJUST Matches (5 in 2 files) ----
Def_stepCon.h (Ch_AS4\common_inc) line 587 : #define POS_Z_INJECTOR_TOP_ADJUST	13		// POS_Z_INJECTOR_TOP 1mm위
Def_stepCon.h (Ch_AS4\common_inc) line 706 : //#define POS_Z_INJECTOR_TOP_ADJUST	13		// POS_Z_INJECTOR_TOP 1mm위
adjustMotorInit in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4177 : 					if(goPosETC_Z(POS_XY_INJECTOR, POS_Z_INJECTOR_TOP_ADJUST)) {	// 맨처음 제품					
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4582 : 	xyzCoord.step_Z[POS_Z_INJECTOR_TOP_ADJUST] = (int)(COORD_Z_INJECTOR_TOP_ADJUST / MM_PER_STEP_Z + 0.5) * (int)(MICRO_STEP_Z);
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4583 : 		xyzCoord.step_Z[POS_Z_INJECTOR_TOP_ADJUST] +=	AdjustInjectionStep_Z;
---- INIT_COORDINATE_FIX Matches (2 in 2 files) ----
initCoordinate in MotorCtrl_task.c (Ch_AS4\apps_layer) line 4487 : #if INIT_COORDINATE_FIX		
option_AS.h (Ch_AS4\ryu_inc) line 427 : //#define INIT_COORDINATE_FIX					1
---- Change Dir Matches (4 in 1 files) ----
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5241 : printf("[Change Dir] MOTOR_Z --");	
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5255 : printf("[Change Dir] MOTOR_X --");	
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5269 : printf("[Change Dir] MOTOR_Y --");	
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5283 : printf("[Change Dir] MOTOR_SYR --");	
---- READY_CHECK_RETRY_FPGA Matches (1 in 1 files) ----
option_AS.h (Ch_AS4\ryu_inc) line 432 : #define READY_CHECK_RETRY_FPGA			1
---- printf Matches (107 in 23 files) ----
ADC_reading in adc_if_AS.c (Ch_AS4\apps_layer) line 196 : //printf("ad=%08X extTemp=%08X %8.4f %8.4f %8.3f\n", ad, extAD, ext_Temp, oven_Volt, gOVEN_STATE.fTemperature);
ADC_reading in adc_if_AS.c (Ch_AS4\apps_layer) line 255 : //printf("ad=%08X extTemp=%08X %8.4f %8.4f %8.3f\n", ad, extAD, ext_Temp, oven_Volt, gOVEN_STATE.fTemperature);			
ADC_reading in adc_if_AS.c (Ch_AS4\apps_layer) line 256 : //printf("Power v33=%8.4f v50=%8.4f v12=%8.4f\n", ovenDiag.sysVolt[1], ovenDiag.sysVolt[2], ovenDiag.sysVolt[5]);
ADC_reading in adc_if_AS.c (Ch_AS4\apps_layer) line 257 : //printf("Error D_err=%8.4f L_err=%8.4f T1_err=%8.4f T2_err=%8.4f\n", errVolt[0],errVolt[1],errVolt[2],errVolt[3]);
cc.h (Ch_AS4\lwIP\arch) line 67 : #define LWIP_PLATFORM_DIAG(x) printf("%s\n", x);  
cc.h (Ch_AS4\lwIP\arch) line 68 : #define LWIP_PLATFORM_ASSERT(x) printf("%s\n", x);  
debug.h (Ch_AS4\lwIP\include\lwip) line 94 : 	                                   printf(message);\
LWIP_DEBUG_I in debug.h (Ch_AS4\lwIP\include\lwip) line 111 :                               printf(fmt, ##args);\
LWIP_DEBUG_E in debug.h (Ch_AS4\lwIP\include\lwip) line 122 :                                   printf(fmt, ##args);\
debug_inform.h (Ch_AS4\ryu_inc) line 16 : #define dprintf(fmt,args...) printf( fmt, ## args )
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 590 :   printf("dhcp_start(netif=%p) %c%c%"U16_F"\n", (void*)netif, netif->name[0], netif->name[1], (u16_t)netif->num);
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 597 : 	  printf("dhcp_start(): Cannot use this netif with DHCP: MTU is too small\n");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 603 : 	  printf("dhcp_start(): starting new DHCP client\n");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 606 :     	printf("dhcp_start(): could not allocate dhcp\n");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 611 :     printf("dhcp_start(): allocated dhcp");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 614 : 	  printf("dhcp_start(): restarting DHCP configuration\n");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 628 : 	  printf("dhcp_start(): could not obtain pcb\n");
dhcp_start in dhcp.c (Ch_AS4\lwIP\core) line 641 :   printf("dhcp_start(): starting DHCP configuration\n");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 670 : 	  printf("dhcp_inform(): could not allocate dhcp\n");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 675 :   printf("dhcp_inform(): allocated dhcp\n");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 678 : 	  printf("dhcp_inform(): could not obtain pcb");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 683 :   printf("dhcp_inform(): created new udp pcb\n");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 702 :     printf("dhcp_inform: INFORMING\n");
dhcp_inform in dhcp.c (Ch_AS4\lwIP\core) line 706 : 	  printf("dhcp_inform: could not allocate DHCP request\n");
dhcp_discover in dhcp.c (Ch_AS4\lwIP\core) line 829 :   printf("dhcp_discover()\r\n");
dhcp_bind in dhcp.c (Ch_AS4\lwIP\core) line 951 :   printf("dhcp_bind(): IP: 0x%08"X32_F"\n", dhcp->offered_ip_addr.addr);
dhcp_bind in dhcp.c (Ch_AS4\lwIP\core) line 953 :   printf("dhcp_bind(): SN: 0x%08"X32_F"\n", sn_mask.addr);
dhcp_bind in dhcp.c (Ch_AS4\lwIP\core) line 955 :   printf("dhcp_bind(): GW: 0x%08"X32_F"\n", gw_addr.addr);
ethernet_input in etharp.c (Ch_AS4\lwIP\netif) line 1167 : 	  printf("ethernet_input: dest:%02x:%02x:%02x:%02x:%02x:%02x, src:%02x:%02x:%02x:%02x:%02x:%02x, type:%2xh\r\n",
lwip_init in init.c (Ch_AS4\lwIP\core) line 236 :   printf("Configuring Network, Please wait....\r\n");
Interrupt.c (Ch_AS4\apps_layer) line 94 :  * Do not use printf clause (Antony)
ip_addr.h (Ch_AS4\lwIP\include\ipv4\lwip) line 158 :  * to printf using the U16_F format from cc.h. */
initSystemInform_envm in LcasAction_task.c (Ch_AS4\apps_layer) line 5029 : printf("####### read Serial No : [%s] [%c]\n", &data[0], data[0]);
saveSystemInform in LcasAction_task.c (Ch_AS4\apps_layer) line 5135 : //printf("saveSystemInform(%d)\n",who);	
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 150 : //	printf("IP address, Net mask, GW address are defined in <conf_eth.h>\r\n");
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 157 : 	printf("Static IP address  %d.%d.%d.%d\r\n", ETHERNET_CONF_IPADDR3, ETHERNET_CONF_IPADDR2, ETHERNET_CONF_IPADDR1, ETHERNET_CONF_IPADDR0);
m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 163 : 	printf("Static IP address  %d.%d.%d.%d\r\n", my_ip[3], my_ip[2], my_ip[1], my_ip[0]);
netif_config in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 208 : 	printf("Static IP address  %d.%d.%d.%d\r\n", my_ip[0], my_ip[1], my_ip[2], my_ip[3]);
netif_config in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 213 : 	printf("Static IP address  %d.%d.%d.%d\r\n", ETHERNET_CONF_IPADDR0, ETHERNET_CONF_IPADDR1, ETHERNET_CONF_IPADDR2, ETHERNET_CONF_IPADDR3);
low_level_init in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 327 :     //printf("My hwaddr -> %02X:%02X:%02X:%02X:%02X:%02X\r\n",
ethernetif_input in m2sxxx_ethernetif.c (Ch_AS4\lwIP\netif) line 664 :     //	printf("Len : %4ld, %02X %02X\r\n",pckt_length,*(uint8_t *)p->payload,*(((uint8_t *)p->payload)+1));
initStepCtrlData in MotorCtrl_task.c (Ch_AS4\apps_layer) line 2486 : printf("	initStepCtrlData()    \n");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5245 : 				printf("########MOTOR_Z : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5246 : 				printf("[Z %08x] [Y %08x] [X %08x] [S %08x]",devState.chk_Dir[MOTOR_Z],devState.chk_Dir[MOTOR_Y],devState.chk_Dir[MOTOR_X],devState.chk_Dir[MOTOR_SYR]); 
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5259 : 				printf("########MOTOR_X : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5260 : 				printf("[Z %08x] [Y %08x] [X %08x] [S %08x]" ,devState.chk_Dir[MOTOR_Z],devState.chk_Dir[MOTOR_Y],devState.chk_Dir[MOTOR_X],devState.chk_Dir[MOTOR_SYR]);
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5273 : 				printf("########MOTOR_Y : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5274 : 				printf("[Z %08x] [Y %08x] [X %08x] [S %08x]" ,devState.chk_Dir[MOTOR_Z],devState.chk_Dir[MOTOR_Y],devState.chk_Dir[MOTOR_X],devState.chk_Dir[MOTOR_SYR]);		
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5287 : 				printf("########MOTOR_SYR : DIR CHECK ERROR!!!");
readMotorState in MotorCtrl_task.c (Ch_AS4\apps_layer) line 5288 : 				printf("[Z %08x] [Y %08x] [X %08x] [S %08x]" ,devState.chk_Dir[MOTOR_Z],devState.chk_Dir[MOTOR_Y],devState.chk_Dir[MOTOR_X],devState.chk_Dir[MOTOR_SYR]);	
LwIP_Periodic_Handle in netconf.c (Ch_AS4\apps_layer) line 117 : 		//printf("tcp_tmr\r\n");
LwIP_DHCP_Process_Handle in netconf.c (Ch_AS4\apps_layer) line 198 :             printf("IP address assigned by a DHCP server\r\n");
LwIP_DHCP_Process_Handle in netconf.c (Ch_AS4\apps_layer) line 199 :             printf("%d.%d.%d.%d\r\n", iptab[3], iptab[2], iptab[1], iptab[0]);
LwIP_DHCP_Process_Handle in netconf.c (Ch_AS4\apps_layer) line 225 :                 printf("DHCP timeout\r\n");
LwIP_DHCP_Process_Handle in netconf.c (Ch_AS4\apps_layer) line 226 :                 printf("Static IP address\r\n");
LwIP_DHCP_Process_Handle in netconf.c (Ch_AS4\apps_layer) line 227 :                 printf("%d.%d.%d.%d\r\n", iptab[3], iptab[2], iptab[1], iptab[0]);
netif_set_addr in netif.c (Ch_AS4\lwIP\core) line 190 : 	//printf("[netif_set_ipaddr()]\r\n");
netif_set_addr in netif.c (Ch_AS4\lwIP\core) line 192 : 	//printf("[netif_set_netmask()]\r\n");
netif_set_addr in netif.c (Ch_AS4\lwIP\core) line 194 : 	//printf("[netif_set_gw()]\r\n");
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 293 :     //printf("netif_set_ipaddr: netif address being changed\r\n");
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 294 : 	  //printf("Active pcb : tcp_active_pcbs\r\n");
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 301 :         printf("netif_set_ipaddr: aborting TCP pcb %p\n", (void *)pcb);
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 326 : 	//printf("netif: IP address of interface %02X%02X set to %d.%d.%d.%d\r\n",
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 340 : 		//printf("IP address setting completed !!\r\n");
netif_set_ipaddr in netif.c (Ch_AS4\lwIP\core) line 341 : 		printf("Requested IP address : %d.%d.%d.%d\r\n",addr1,addr2,addr3,addr4);
net_SystemInform in net_AS.c (Ch_AS4\apps_layer) line 249 : //printf("as_INFO.cSerialNo = %s \n",as_INFO.cSerialNO);
newlib_stubs.c (Ch_AS4\firmware\CMSIS\startup_gcc) line 18 :  * A default implementation for the redirection of the output of printf() to a
pidAutoTunnCooling in PID_Control_AS.c (Ch_AS4\apps_layer) line 323 : //	printf("[%01d] t=[%04d] L0=[%04d] LS=[%04d] LF=[%04d]",ctrl,time,timeL0,timeLS,timeLF);
pidAutoTunning in PID_Control_AS.c (Ch_AS4\apps_layer) line 568 : //	printf("[%01d] t=[%04d] L0=[%04d] LS=[%04d] LF=[%04d]",ctrl,time,timeL0,timeLS,timeLF);
PID_Control in PID_Control_AS.c (Ch_AS4\apps_layer) line 1154 : //	printf("===PID_FREE_COOLING_CONT==[%1d] act = [%8.4f] timeL0 = [%8.4f]\n",ctrl,actValue,timeL0) ;
pppdebug.h (Ch_AS4\lwIP\netif\ppp) line 58 :  * ppp_trace - a form of printf to send tracing information to stderr
pppoe_find_softc_by_hunique in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 363 :     printf("%c%c%"U16_F": host unique tag found, but it belongs to a connection in state %d\n",
pppoe_find_softc_by_hunique in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 368 :     printf("%c%c%"U16_F": wrong interface, not accepting host unique\n",
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 423 :     printf("pppoe: packet too short: %d\n", pb->len);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 429 :     printf("pppoe: unknown version/type packet: 0x%x\n", ph->vertype);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 437 :     printf("pppoe: packet content does not fit: data available = %d, packet size = %u\n",
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 452 :       printf("pppoe: tag 0x%x len 0x%x is too long\n", tag, len);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 504 :         printf("%s: %s: %s\n", devname, err_msg, error);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 507 :         printf("%s: %s\n", devname, err_msg);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 539 :         /* printf("pppoe: free passive interface is not found\n"); */
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 565 :         printf("pppoe: received PADR but not includes ac_cookie\n");
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 572 :           printf("pppoe: received PADR but could not find request for it\n");
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 577 :         printf("%c%c%"U16_F": received unexpected PADR\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 603 :           printf("pppoe: received PADO but could not find request for it\n");
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 608 :         printf("%c%c%"U16_F": received unexpected PADO\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num);
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 649 :         printf("%c%c%"U16_F": unknown code (0x%04x) session = 0x%04x\n",
pppoe_dispatch_disc_pkt in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 653 :         printf("pppoe: unknown code (0x%04x) session = 0x%04x\n", ph->code, session);
pppoe_data_input in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 697 :     printf("pppoe (data): dropping too short packet: %d bytes\n", pb->len);
pppoe_data_input in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 702 :     printf("pppoe_data_input: could not get PPPoE header\n");
pppoe_data_input in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 708 :     printf("pppoe (data): unknown version/type packet: 0x%x\n", ph->vertype);
pppoe_data_input in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 719 :     printf("pppoe: input for unknown session 0x%x, sending PADT\n", session);
pppoe_abort_connect in ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 982 :   printf("%c%c%"U16_F": could not establish connection\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num);
ppp_oe.c (Ch_AS4\lwIP\netif\ppp) line 1190 :       printf("%c%c%"U16_F": ethernet interface detached, going down\n",
InterruptEnable_Main in sysconfig.c (Ch_AS4\apps_layer) line 164 : // 우선순위 5 : 패킷을 놓치는 경우가 생긴다.  - printf 문을 제거하니 증상 사라짐. - orignal
InterruptEnable_Main in sysconfig.c (Ch_AS4\apps_layer) line 171 : 	NVIC_SetPriority(EthernetMAC_IRQn, 5u);		// 패킷을 놓치는 경우가 생긴다.  - printf 문을 제거하니 증상 사라짐.
rtcTime_Init in sysconfig.c (Ch_AS4\apps_layer) line 449 : 		printf("rtc_time = "); for(i=0 ; i<7; i++) {	printf("%x : ",rtc_time[i]);	} printf("\n");
tcp_recved in tcp.c (Ch_AS4\lwIP\core) line 464 :   //printf("tcp_recved()\r\n");
PrintLine in util.c (Ch_AS4\apps_layer) line 84 :   printf("-----------------------------------------------------\r\n");
PrintFabricVersion in util.c (Ch_AS4\apps_layer) line 160 : 		printf("          Fabric Ver (Rs422 Slave) : [%lX] \r\n", ver);		
PrintFabricVersion in util.c (Ch_AS4\apps_layer) line 166 : 		printf("          Fabric Ver (Slave)       : [%lX] \r\n", ver);		
PrintFabricVersion in util.c (Ch_AS4\apps_layer) line 171 : 		printf("          Fabric Ver (Master)      : [%lX] \r\n", ver);		
util.h (Ch_AS4\inc) line 58 : #define DEBUG_I(T,fmt,args...) printf("INFO. %s",__func__); printf(fmt, ##args);
util.h (Ch_AS4\inc) line 59 : #define DEBUG_E(fmt,args...)	printf("ERROR. %s",__func__); printf(fmt, ##args);
---- goPosETC_Z_check Matches (9 in 4 files) ----
define_AS.h (Ch_AS4\ryu_inc) line 66 : // goPosETC_Z_check() 수정 - error_16
MotorCtrl_task.c (Ch_AS4\apps_layer) line 1963 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos)
MotorCtrl_task.h (Ch_AS4\inc) line 30 : #define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 31 : #define goPosWastePort()		goPosETC_Z_check(POS_XY_WASTE, POS_Z_WASTE, POS_Z_WASTE_DETECT, POS_Z_WASTE_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 35 : #define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 90 : int goPosETC_Z_check(int32_t xy_pos, int32_t z_pos, int32_t z_chk_pos, int32_t z_chk_upper_pos);
option_AS.h (Ch_AS4\ryu_inc) line 460 : //#define goPosWashingPort()		goPosETC_Z_check(POS_XY_WASH, POS_Z_WASH, POS_Z_WASH_DETECT, POS_Z_WASH_UPPER_DETECT)
option_AS.h (Ch_AS4\ryu_inc) line 461 : //#define goPosWastePort()		goPosETC_Z_check(POS_XY_WASTE, POS_Z_WASTE, POS_Z_WASTE_DETECT, POS_Z_WASTE_UPPER_DETECT)
option_AS.h (Ch_AS4\ryu_inc) line 462 : //#define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
---- goPosInjection Matches (7 in 3 files) ----
Washing in LcasAction_task.c (Ch_AS4\apps_layer) line 244 : 					if(goPosInjection()) {
full_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1600 : 						if(goPosInjection()) {		
partial_LoopInjection in LcasAction_task.c (Ch_AS4\apps_layer) line 1917 : 							if(goPosInjection()) {		
micro_pick_Injection in LcasAction_task.c (Ch_AS4\apps_layer) line 2343 : 						if(goPosInjection()) {		
MotorCtrl_task.h (Ch_AS4\inc) line 34 : //#define goPosInjection()		goPosETC_Z_check_inj(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT)
MotorCtrl_task.h (Ch_AS4\inc) line 35 : #define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
option_AS.h (Ch_AS4\ryu_inc) line 462 : //#define goPosInjection()		goPosETC_Z_check(POS_XY_INJECTOR, POS_Z_INJECTION, POS_Z_INJECTION_PORT_DETECT, POS_Z_INJECTION_PORT_UPPER_DETECT)
