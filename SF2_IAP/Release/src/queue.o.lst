   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"queue.c"
  15              		.section	.text.init_queue,"ax",%progbits
  16              		.align	2
  17              		.global	init_queue
  18              		.thumb
  19              		.thumb_func
  21              	init_queue:
  22              		@ args = 0, pretend = 0, frame = 0
  23              		@ frame_needed = 0, uses_anonymous_args = 0
  24 0000 38B5     		push	{r3, r4, r5, lr}
  25 0002 084D     		ldr	r5, .L3
  26 0004 0024     		movs	r4, #0
  27 0006 4FF48060 		mov	r0, #1024
  28 000a 2C60     		str	r4, [r5]
  29 000c 6C60     		str	r4, [r5, #4]
  30 000e FFF7FEFF 		bl	malloc
  31 0012 2146     		mov	r1, r4
  32 0014 4FF48062 		mov	r2, #1024
  33 0018 A860     		str	r0, [r5, #8]
  34 001a FFF7FEFF 		bl	memset
  35 001e 2046     		mov	r0, r4
  36 0020 38BD     		pop	{r3, r4, r5, pc}
  37              	.L4:
  38 0022 00BF     		.align	2
  39              	.L3:
  40 0024 00000000 		.word	.LANCHOR0
  42              		.section	.text.deinit_queue,"ax",%progbits
  43              		.align	2
  44              		.global	deinit_queue
  45              		.thumb
  46              		.thumb_func
  48              	deinit_queue:
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51 0000 08B5     		push	{r3, lr}
  52 0002 034B     		ldr	r3, .L7
  53 0004 9868     		ldr	r0, [r3, #8]
  54 0006 FFF7FEFF 		bl	free
  55 000a 0020     		movs	r0, #0
  56 000c 08BD     		pop	{r3, pc}
  57              	.L8:
  58 000e 00BF     		.align	2
  59              	.L7:
  60 0010 00000000 		.word	.LANCHOR0
  62              		.section	.text.clear_queue,"ax",%progbits
  63              		.align	2
  64              		.global	clear_queue
  65              		.thumb
  66              		.thumb_func
  68              	clear_queue:
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72 0000 10B4     		push	{r4}
  73 0002 064B     		ldr	r3, .L11
  74 0004 0024     		movs	r4, #0
  75 0006 2146     		mov	r1, r4
  76 0008 1C60     		str	r4, [r3]
  77 000a 5C60     		str	r4, [r3, #4]
  78 000c 9868     		ldr	r0, [r3, #8]
  79 000e 4FF48062 		mov	r2, #1024
  80 0012 5DF8044B 		ldr	r4, [sp], #4
  81 0016 FFF7FEBF 		b	memset
  82              	.L12:
  83 001a 00BF     		.align	2
  84              	.L11:
  85 001c 00000000 		.word	.LANCHOR0
  87              		.section	.text.get_buffer_size,"ax",%progbits
  88              		.align	2
  89              		.global	get_buffer_size
  90              		.thumb
  91              		.thumb_func
  93              	get_buffer_size:
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 4FF48060 		mov	r0, #1024
  98 0004 7047     		bx	lr
 100 0006 00BF     		.section	.text.get_data_size,"ax",%progbits
 101              		.align	2
 102              		.global	get_data_size
 103              		.thumb
 104              		.thumb_func
 106              	get_data_size:
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109 0000 10B5     		push	{r4, lr}
 110 0002 0446     		mov	r4, r0
 111 0004 FFF7FEFF 		bl	MSS_UART0_disable_intr
 112 0008 054B     		ldr	r3, .L19
 113 000a 5868     		ldr	r0, [r3, #4]
 114 000c A042     		cmp	r0, r4
 115 000e B8BF     		it	lt
 116 0010 00F58060 		addlt	r0, r0, #1024
 117 0014 041B     		subs	r4, r0, r4
 118 0016 FFF7FEFF 		bl	MSS_UART0_enable_intr
 119 001a 2046     		mov	r0, r4
 120 001c 10BD     		pop	{r4, pc}
 121              	.L20:
 122 001e 00BF     		.align	2
 123              	.L19:
 124 0020 00000000 		.word	.LANCHOR0
 126              		.section	.text.get_available,"ax",%progbits
 127              		.align	2
 128              		.global	get_available
 129              		.thumb
 130              		.thumb_func
 132              	get_available:
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135 0000 10B5     		push	{r4, lr}
 136 0002 FFF7FEFF 		bl	MSS_UART0_disable_intr
 137 0006 064A     		ldr	r2, .L26
 138 0008 92E81800 		ldmia	r2, {r3, r4}
 139 000c A342     		cmp	r3, r4
 140 000e C8BF     		it	gt
 141 0010 04F58064 		addgt	r4, r4, #1024
 142 0014 E41A     		subs	r4, r4, r3
 143 0016 FFF7FEFF 		bl	MSS_UART0_enable_intr
 144 001a 2046     		mov	r0, r4
 145 001c 10BD     		pop	{r4, pc}
 146              	.L27:
 147 001e 00BF     		.align	2
 148              	.L26:
 149 0020 00000000 		.word	.LANCHOR0
 151              		.section	.text.get_free_size,"ax",%progbits
 152              		.align	2
 153              		.global	get_free_size
 154              		.thumb
 155              		.thumb_func
 157              	get_free_size:
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 0000 10B5     		push	{r4, lr}
 161 0002 FFF7FEFF 		bl	MSS_UART0_disable_intr
 162 0006 FFF7FEFF 		bl	get_available
 163 000a 0446     		mov	r4, r0
 164 000c FFF7FEFF 		bl	MSS_UART0_enable_intr
 165 0010 C4F58060 		rsb	r0, r4, #1024
 166 0014 10BD     		pop	{r4, pc}
 168 0016 00BF     		.section	.text.get_head,"ax",%progbits
 169              		.align	2
 170              		.global	get_head
 171              		.thumb
 172              		.thumb_func
 174              	get_head:
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177 0000 10B5     		push	{r4, lr}
 178 0002 FFF7FEFF 		bl	MSS_UART0_disable_intr
 179 0006 034B     		ldr	r3, .L32
 180 0008 1C68     		ldr	r4, [r3]
 181 000a FFF7FEFF 		bl	MSS_UART0_enable_intr
 182 000e 2046     		mov	r0, r4
 183 0010 10BD     		pop	{r4, pc}
 184              	.L33:
 185 0012 00BF     		.align	2
 186              	.L32:
 187 0014 00000000 		.word	.LANCHOR0
 189              		.section	.text.set_head,"ax",%progbits
 190              		.align	2
 191              		.global	set_head
 192              		.thumb
 193              		.thumb_func
 195              	set_head:
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 10B5     		push	{r4, lr}
 199 0002 0446     		mov	r4, r0
 200 0004 FFF7FEFF 		bl	MSS_UART0_disable_intr
 201 0008 0A4B     		ldr	r3, .L39
 202 000a 0B4A     		ldr	r2, .L39+4
 203 000c 2340     		ands	r3, r3, r4
 204 000e 002B     		cmp	r3, #0
 205 0010 04DB     		blt	.L38
 206 0012 BDE81040 		pop	{r4, lr}
 207 0016 1360     		str	r3, [r2]
 208 0018 FFF7FEBF 		b	MSS_UART0_enable_intr
 209              	.L38:
 210 001c 013B     		subs	r3, r3, #1
 211 001e 6FEA8353 		mvn	r3, r3, lsl #22
 212 0022 BDE81040 		pop	{r4, lr}
 213 0026 6FEA9353 		mvn	r3, r3, lsr #22
 214 002a 0133     		adds	r3, r3, #1
 215 002c 1360     		str	r3, [r2]
 216 002e FFF7FEBF 		b	MSS_UART0_enable_intr
 217              	.L40:
 218 0032 00BF     		.align	2
 219              	.L39:
 220 0034 FF030080 		.word	-2147482625
 221 0038 00000000 		.word	.LANCHOR0
 223              		.section	.text.get_tail,"ax",%progbits
 224              		.align	2
 225              		.global	get_tail
 226              		.thumb
 227              		.thumb_func
 229              	get_tail:
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 10B5     		push	{r4, lr}
 233 0002 FFF7FEFF 		bl	MSS_UART0_disable_intr
 234 0006 034B     		ldr	r3, .L43
 235 0008 5C68     		ldr	r4, [r3, #4]
 236 000a FFF7FEFF 		bl	MSS_UART0_enable_intr
 237 000e 2046     		mov	r0, r4
 238 0010 10BD     		pop	{r4, pc}
 239              	.L44:
 240 0012 00BF     		.align	2
 241              	.L43:
 242 0014 00000000 		.word	.LANCHOR0
 244              		.section	.text.enqueue,"ax",%progbits
 245              		.align	2
 246              		.global	enqueue
 247              		.thumb
 248              		.thumb_func
 250              	enqueue:
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 254 0004 1746     		mov	r7, r2
 255 0006 1F4C     		ldr	r4, .L54
 256 0008 8046     		mov	r8, r0
 257 000a 0D46     		mov	r5, r1
 258 000c FFF7FEFF 		bl	MSS_UART0_disable_intr
 259 0010 6068     		ldr	r0, [r4, #4]
 260 0012 C619     		adds	r6, r0, r7
 261 0014 B6F5806F 		cmp	r6, #1024
 262 0018 21DB     		blt	.L46
 263 001a D4F808A0 		ldr	r10, [r4, #8]
 264 001e C0F58069 		rsb	r9, r0, #1024
 265 0022 4A46     		mov	r2, r9
 266 0024 08EB0501 		add	r1, r8, r5
 267 0028 5044     		add	r0, r0, r10
 268 002a FFF7FEFF 		bl	memcpy
 269 002e 05EB0901 		add	r1, r5, r9
 270 0032 4144     		add	r1, r1, r8
 271 0034 5046     		mov	r0, r10
 272 0036 C9EB0702 		rsb	r2, r9, r7
 273 003a FFF7FEFF 		bl	memcpy
 274 003e 124B     		ldr	r3, .L54+4
 275 0040 3340     		ands	r3, r3, r6
 276 0042 002B     		cmp	r3, #0
 277 0044 16DB     		blt	.L53
 278              	.L48:
 279 0046 2068     		ldr	r0, [r4]
 280 0048 6360     		str	r3, [r4, #4]
 281 004a 8342     		cmp	r3, r0
 282 004c B8BF     		it	lt
 283 004e 03F58063 		addlt	r3, r3, #1024
 284 0052 1C1A     		subs	r4, r3, r0
 285 0054 FFF7FEFF 		bl	MSS_UART0_enable_intr
 286 0058 2046     		mov	r0, r4
 287 005a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 288              	.L46:
 289 005e A368     		ldr	r3, [r4, #8]
 290 0060 08EB0501 		add	r1, r8, r5
 291 0064 1844     		add	r0, r0, r3
 292 0066 3A46     		mov	r2, r7
 293 0068 FFF7FEFF 		bl	memcpy
 294 006c 064B     		ldr	r3, .L54+4
 295 006e 3340     		ands	r3, r3, r6
 296 0070 002B     		cmp	r3, #0
 297 0072 E8DA     		bge	.L48
 298              	.L53:
 299 0074 013B     		subs	r3, r3, #1
 300 0076 6FEA8353 		mvn	r3, r3, lsl #22
 301 007a 6FEA9353 		mvn	r3, r3, lsr #22
 302 007e 0133     		adds	r3, r3, #1
 303 0080 E1E7     		b	.L48
 304              	.L55:
 305 0082 00BF     		.align	2
 306              	.L54:
 307 0084 00000000 		.word	.LANCHOR0
 308 0088 FF030080 		.word	-2147482625
 310              		.section	.text.dequeue,"ax",%progbits
 311              		.align	2
 312              		.global	dequeue
 313              		.thumb
 314              		.thumb_func
 316              	dequeue:
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 320 0004 0D46     		mov	r5, r1
 321 0006 1446     		mov	r4, r2
 322 0008 0746     		mov	r7, r0
 323 000a FFF7FEFF 		bl	MSS_UART0_disable_intr
 324 000e 1F4B     		ldr	r3, .L65
 325 0010 93E80600 		ldmia	r3, {r1, r2}
 326 0014 9142     		cmp	r1, r2
 327 0016 36D0     		beq	.L61
 328 0018 0E19     		adds	r6, r1, r4
 329 001a B6F5806F 		cmp	r6, #1024
 330 001e 10DC     		bgt	.L63
 331 0020 9B68     		ldr	r3, [r3, #8]
 332 0022 2246     		mov	r2, r4
 333 0024 1944     		add	r1, r1, r3
 334 0026 7819     		adds	r0, r7, r5
 335 0028 FFF7FEFF 		bl	memcpy
 336 002c 184B     		ldr	r3, .L65+4
 337 002e 174A     		ldr	r2, .L65
 338 0030 3340     		ands	r3, r3, r6
 339 0032 002B     		cmp	r3, #0
 340 0034 1BDB     		blt	.L64
 341              	.L60:
 342 0036 1360     		str	r3, [r2]
 343 0038 FFF7FEFF 		bl	MSS_UART0_enable_intr
 344 003c 2046     		mov	r0, r4
 345 003e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 346              	.L63:
 347 0042 D3F80890 		ldr	r9, [r3, #8]
 348 0046 C1F58068 		rsb	r8, r1, #1024
 349 004a 4246     		mov	r2, r8
 350 004c 4944     		add	r1, r1, r9
 351 004e 7819     		adds	r0, r7, r5
 352 0050 FFF7FEFF 		bl	memcpy
 353 0054 05EB0800 		add	r0, r5, r8
 354 0058 C8EB0402 		rsb	r2, r8, r4
 355 005c 3844     		add	r0, r0, r7
 356 005e 4946     		mov	r1, r9
 357 0060 FFF7FEFF 		bl	memcpy
 358 0064 0A4B     		ldr	r3, .L65+4
 359 0066 094A     		ldr	r2, .L65
 360 0068 3340     		ands	r3, r3, r6
 361 006a 002B     		cmp	r3, #0
 362 006c E3DA     		bge	.L60
 363              	.L64:
 364 006e 013B     		subs	r3, r3, #1
 365 0070 6FEA8353 		mvn	r3, r3, lsl #22
 366 0074 6FEA9353 		mvn	r3, r3, lsr #22
 367 0078 0133     		adds	r3, r3, #1
 368 007a 1360     		str	r3, [r2]
 369 007c FFF7FEFF 		bl	MSS_UART0_enable_intr
 370 0080 2046     		mov	r0, r4
 371 0082 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 372              	.L61:
 373 0086 0020     		movs	r0, #0
 374 0088 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 375              	.L66:
 376              		.align	2
 377              	.L65:
 378 008c 00000000 		.word	.LANCHOR0
 379 0090 FF030080 		.word	-2147482625
 381              		.section	.text.peek,"ax",%progbits
 382              		.align	2
 383              		.global	peek
 384              		.thumb
 385              		.thumb_func
 387              	peek:
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 391 0004 0D46     		mov	r5, r1
 392 0006 1446     		mov	r4, r2
 393 0008 0646     		mov	r6, r0
 394 000a FFF7FEFF 		bl	MSS_UART0_disable_intr
 395 000e 154B     		ldr	r3, .L74
 396 0010 93E80600 		ldmia	r3, {r1, r2}
 397 0014 9142     		cmp	r1, r2
 398 0016 22D0     		beq	.L71
 399 0018 0A19     		adds	r2, r1, r4
 400 001a B2F5806F 		cmp	r2, #1024
 401 001e 0ADC     		bgt	.L73
 402 0020 9B68     		ldr	r3, [r3, #8]
 403 0022 2246     		mov	r2, r4
 404 0024 1944     		add	r1, r1, r3
 405 0026 7019     		adds	r0, r6, r5
 406 0028 FFF7FEFF 		bl	memcpy
 407 002c FFF7FEFF 		bl	MSS_UART0_enable_intr
 408 0030 2046     		mov	r0, r4
 409 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 410              	.L73:
 411 0036 D3F80880 		ldr	r8, [r3, #8]
 412 003a C1F58067 		rsb	r7, r1, #1024
 413 003e 3A46     		mov	r2, r7
 414 0040 4144     		add	r1, r1, r8
 415 0042 7019     		adds	r0, r6, r5
 416 0044 FFF7FEFF 		bl	memcpy
 417 0048 E819     		adds	r0, r5, r7
 418 004a 4146     		mov	r1, r8
 419 004c E21B     		subs	r2, r4, r7
 420 004e 3044     		add	r0, r0, r6
 421 0050 FFF7FEFF 		bl	memcpy
 422 0054 FFF7FEFF 		bl	MSS_UART0_enable_intr
 423 0058 2046     		mov	r0, r4
 424 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 425              	.L71:
 426 005e 0020     		movs	r0, #0
 427 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 428              	.L75:
 429              		.align	2
 430              	.L74:
 431 0064 00000000 		.word	.LANCHOR0
 433              		.section	.bss.g_tQueue,"aw",%nobits
 434              		.align	2
 435              		.set	.LANCHOR0,. + 0
 438              	g_tQueue:
 439 0000 00000000 		.space	12
 439      00000000 
 439      00000000 
 440              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150529 (release) [ARM/embedded-4_9-br
DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:16     .text.init_queue:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:21     .text.init_queue:00000000 init_queue
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:40     .text.init_queue:00000024 $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:43     .text.deinit_queue:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:48     .text.deinit_queue:00000000 deinit_queue
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:60     .text.deinit_queue:00000010 $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:63     .text.clear_queue:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:68     .text.clear_queue:00000000 clear_queue
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:85     .text.clear_queue:0000001c $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:88     .text.get_buffer_size:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:93     .text.get_buffer_size:00000000 get_buffer_size
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:101    .text.get_data_size:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:106    .text.get_data_size:00000000 get_data_size
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:124    .text.get_data_size:00000020 $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:127    .text.get_available:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:132    .text.get_available:00000000 get_available
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:149    .text.get_available:00000020 $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:152    .text.get_free_size:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:157    .text.get_free_size:00000000 get_free_size
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:169    .text.get_head:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:174    .text.get_head:00000000 get_head
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:187    .text.get_head:00000014 $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:190    .text.set_head:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:195    .text.set_head:00000000 set_head
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:220    .text.set_head:00000034 $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:224    .text.get_tail:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:229    .text.get_tail:00000000 get_tail
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:242    .text.get_tail:00000014 $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:245    .text.enqueue:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:250    .text.enqueue:00000000 enqueue
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:307    .text.enqueue:00000084 $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:311    .text.dequeue:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:316    .text.dequeue:00000000 dequeue
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:378    .text.dequeue:0000008c $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:382    .text.peek:00000000 $t
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:387    .text.peek:00000000 peek
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:431    .text.peek:00000064 $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:434    .bss.g_tQueue:00000000 $d
C:\Users\stein\AppData\Local\Temp\ccNji9Eb.s:438    .bss.g_tQueue:00000000 g_tQueue

UNDEFINED SYMBOLS
malloc
memset
free
MSS_UART0_disable_intr
MSS_UART0_enable_intr
memcpy
