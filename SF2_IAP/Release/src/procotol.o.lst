   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"procotol.c"
  15              		.section	.text.RecvData.part.0,"ax",%progbits
  16              		.align	2
  17              		.thumb
  18              		.thumb_func
  20              	RecvData.part.0:
  21              		@ args = 0, pretend = 0, frame = 0
  22              		@ frame_needed = 0, uses_anonymous_args = 0
  23 0000 38B5     		push	{r3, r4, r5, lr}
  24 0002 0546     		mov	r5, r0
  25 0004 0021     		movs	r1, #0
  26 0006 0622     		movs	r2, #6
  27 0008 FFF7FEFF 		bl	peek
  28 000c AC88     		ldrh	r4, [r5, #4]	@ unaligned
  29 000e FFF7FEFF 		bl	get_available
  30 0012 0834     		adds	r4, r4, #8
  31 0014 8442     		cmp	r4, r0
  32 0016 02DD     		ble	.L7
  33 0018 0024     		movs	r4, #0
  34 001a 2046     		mov	r0, r4
  35 001c 38BD     		pop	{r3, r4, r5, pc}
  36              	.L7:
  37 001e 2246     		mov	r2, r4
  38 0020 2846     		mov	r0, r5
  39 0022 0021     		movs	r1, #0
  40 0024 FFF7FEFF 		bl	dequeue
  41 0028 8442     		cmp	r4, r0
  42 002a 0CBF     		ite	eq
  43 002c 0446     		moveq	r4, r0
  44 002e 0024     		movne	r4, #0
  45 0030 2046     		mov	r0, r4
  46 0032 38BD     		pop	{r3, r4, r5, pc}
  48              		.section	.text.CheckPacket.part.1,"ax",%progbits
  49              		.align	2
  50              		.thumb
  51              		.thumb_func
  53              	CheckPacket.part.1:
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57 0000 0329     		cmp	r1, #3
  58 0002 30B4     		push	{r4, r5}
  59 0004 13DD     		ble	.L12
  60 0006 0346     		mov	r3, r0
  61 0008 CD1E     		subs	r5, r1, #3
  62 000a 0544     		add	r5, r5, r0
  63 000c 0022     		movs	r2, #0
  64              	.L10:
  65 000e 13F8014F 		ldrb	r4, [r3, #1]!	@ zero_extendqisi2
  66 0012 AB42     		cmp	r3, r5
  67 0014 2244     		add	r2, r2, r4
  68 0016 FAD1     		bne	.L10
  69 0018 5242     		negs	r2, r2
  70 001a D2B2     		uxtb	r2, r2
  71              	.L9:
  72 001c 0144     		add	r1, r1, r0
  73 001e 11F8020C 		ldrb	r0, [r1, #-2]	@ zero_extendqisi2
  74 0022 30BC     		pop	{r4, r5}
  75 0024 9042     		cmp	r0, r2
  76 0026 14BF     		ite	ne
  77 0028 2120     		movne	r0, #33
  78 002a 0020     		moveq	r0, #0
  79 002c 7047     		bx	lr
  80              	.L12:
  81 002e 0022     		movs	r2, #0
  82 0030 F4E7     		b	.L9
  84 0032 00BF     		.section	.text.uart0_rx_handler,"ax",%progbits
  85              		.align	2
  86              		.global	uart0_rx_handler
  87              		.thumb
  88              		.thumb_func
  90              	uart0_rx_handler:
  91              		@ args = 0, pretend = 0, frame = 1024
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93 0000 30B5     		push	{r4, r5, lr}
  94 0002 0546     		mov	r5, r0
  95 0004 ADF2044D 		subw	sp, sp, #1028
  96 0008 4FF48064 		mov	r4, #1024
  97 000c 2246     		mov	r2, r4
  98 000e 6846     		mov	r0, sp
  99 0010 0021     		movs	r1, #0
 100 0012 FFF7FEFF 		bl	memset
 101 0016 6946     		mov	r1, sp
 102 0018 2246     		mov	r2, r4
 103 001a 2846     		mov	r0, r5
 104 001c FFF7FEFF 		bl	MSS_UART_get_rx
 105 0020 0021     		movs	r1, #0
 106 0022 0246     		mov	r2, r0
 107 0024 6846     		mov	r0, sp
 108 0026 FFF7FEFF 		bl	enqueue
 109 002a 034B     		ldr	r3, .L18
 110 002c C3F88041 		str	r4, [r3, #384]
 111 0030 0DF2044D 		addw	sp, sp, #1028
 112              		@ sp needed
 113 0034 30BD     		pop	{r4, r5, pc}
 114              	.L19:
 115 0036 00BF     		.align	2
 116              	.L18:
 117 0038 00E100E0 		.word	-536813312
 119              		.section	.text.GenPacket,"ax",%progbits
 120              		.align	2
 121              		.global	GenPacket
 122              		.thumb
 123              		.thumb_func
 125              	GenPacket:
 126              		@ args = 4, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 129 0002 0546     		mov	r5, r0
 130 0004 069E     		ldr	r6, [sp, #24]
 131 0006 0F0A     		lsrs	r7, r1, #8
 132 0008 0224     		movs	r4, #2
 133 000a 3012     		asrs	r0, r6, #8
 134 000c 6970     		strb	r1, [r5, #1]
 135 000e AF70     		strb	r7, [r5, #2]
 136 0010 EA70     		strb	r2, [r5, #3]
 137 0012 2C70     		strb	r4, [r5]
 138 0014 2E71     		strb	r6, [r5, #4]
 139 0016 6871     		strb	r0, [r5, #5]
 140 0018 63B1     		cbz	r3, .L24
 141 001a 002E     		cmp	r6, #0
 142 001c 0ADD     		ble	.L24
 143 001e 3246     		mov	r2, r6
 144 0020 1946     		mov	r1, r3
 145 0022 A81D     		adds	r0, r5, #6
 146 0024 FFF7FEFF 		bl	memcpy
 147 0028 741D     		adds	r4, r6, #5
 148 002a B71D     		adds	r7, r6, #6
 149 002c 06F10800 		add	r0, r6, #8
 150 0030 0736     		adds	r6, r6, #7
 151 0032 03E0     		b	.L21
 152              	.L24:
 153 0034 0726     		movs	r6, #7
 154 0036 0820     		movs	r0, #8
 155 0038 0627     		movs	r7, #6
 156 003a 0524     		movs	r4, #5
 157              	.L21:
 158 003c 2B46     		mov	r3, r5
 159 003e 2C44     		add	r4, r4, r5
 160 0040 0022     		movs	r2, #0
 161              	.L22:
 162 0042 13F8011F 		ldrb	r1, [r3, #1]!	@ zero_extendqisi2
 163 0046 A342     		cmp	r3, r4
 164 0048 0A44     		add	r2, r2, r1
 165 004a FAD1     		bne	.L22
 166 004c 5242     		negs	r2, r2
 167 004e 0323     		movs	r3, #3
 168 0050 EA55     		strb	r2, [r5, r7]
 169 0052 AB55     		strb	r3, [r5, r6]
 170 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 172 0056 00BF     		.section	.text.GenHeaderPacket,"ax",%progbits
 173              		.align	2
 174              		.global	GenHeaderPacket
 175              		.thumb
 176              		.thumb_func
 178              	GenHeaderPacket:
 179              		@ args = 4, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 38B5     		push	{r3, r4, r5, lr}
 182 0002 0224     		movs	r4, #2
 183 0004 0D0A     		lsrs	r5, r1, #8
 184 0006 0470     		strb	r4, [r0]
 185 0008 4170     		strb	r1, [r0, #1]
 186 000a 8570     		strb	r5, [r0, #2]
 187 000c C270     		strb	r2, [r0, #3]
 188 000e 049C     		ldr	r4, [sp, #16]
 189 0010 0BB1     		cbz	r3, .L30
 190 0012 002C     		cmp	r4, #0
 191 0014 01DC     		bgt	.L32
 192              	.L30:
 193 0016 0420     		movs	r0, #4
 194 0018 38BD     		pop	{r3, r4, r5, pc}
 195              	.L32:
 196 001a 2212     		asrs	r2, r4, #8
 197 001c 0471     		strb	r4, [r0, #4]
 198 001e 4271     		strb	r2, [r0, #5]
 199 0020 1946     		mov	r1, r3
 200 0022 2246     		mov	r2, r4
 201 0024 0630     		adds	r0, r0, #6
 202 0026 FFF7FEFF 		bl	memcpy
 203 002a A01D     		adds	r0, r4, #6
 204 002c 38BD     		pop	{r3, r4, r5, pc}
 206 002e 00BF     		.section	.text.RecvData,"ax",%progbits
 207              		.align	2
 208              		.global	RecvData
 209              		.thumb
 210              		.thumb_func
 212              	RecvData:
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 10B5     		push	{r4, lr}
 216 0002 0446     		mov	r4, r0
 217 0004 FFF7FEFF 		bl	get_available
 218 0008 0528     		cmp	r0, #5
 219 000a 01DC     		bgt	.L36
 220 000c 0020     		movs	r0, #0
 221 000e 10BD     		pop	{r4, pc}
 222              	.L36:
 223 0010 2046     		mov	r0, r4
 224 0012 BDE81040 		pop	{r4, lr}
 225 0016 FFF7FEBF 		b	RecvData.part.0
 227 001a 00BF     		.section	.text.CalcChkSum,"ax",%progbits
 228              		.align	2
 229              		.global	CalcChkSum
 230              		.thumb
 231              		.thumb_func
 233              	CalcChkSum:
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237 0000 002A     		cmp	r2, #0
 238 0002 0BDD     		ble	.L40
 239 0004 0A44     		add	r2, r2, r1
 240 0006 0244     		add	r2, r2, r0
 241 0008 0144     		add	r1, r1, r0
 242 000a 0020     		movs	r0, #0
 243              	.L39:
 244 000c 11F8013B 		ldrb	r3, [r1], #1	@ zero_extendqisi2
 245 0010 9142     		cmp	r1, r2
 246 0012 1844     		add	r0, r0, r3
 247 0014 FAD1     		bne	.L39
 248 0016 4042     		negs	r0, r0
 249 0018 C0B2     		uxtb	r0, r0
 250 001a 7047     		bx	lr
 251              	.L40:
 252 001c 0020     		movs	r0, #0
 253 001e 7047     		bx	lr
 255              		.section	.text.CheckPacket,"ax",%progbits
 256              		.align	2
 257              		.global	CheckPacket
 258              		.thumb
 259              		.thumb_func
 261              	CheckPacket:
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 266 0002 022B     		cmp	r3, #2
 267 0004 01D0     		beq	.L44
 268 0006 2020     		movs	r0, #32
 269 0008 7047     		bx	lr
 270              	.L44:
 271 000a FFF7FEBF 		b	CheckPacket.part.1
 273 000e 00BF     		.section	.text.ParseUpdateData,"ax",%progbits
 274              		.align	2
 275              		.global	ParseUpdateData
 276              		.thumb
 277              		.thumb_func
 279              	ParseUpdateData:
 280              		@ args = 0, pretend = 0, frame = 1536
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 283 0004 0446     		mov	r4, r0
 284 0006 ADF5C16D 		sub	sp, sp, #1544
 285 000a 4FF48062 		mov	r2, #1024
 286 000e 0D46     		mov	r5, r1
 287 0010 82A8     		add	r0, sp, #520
 288 0012 0021     		movs	r1, #0
 289 0014 FFF7FEFF 		bl	memset
 290 0018 0021     		movs	r1, #0
 291 001a 4FF40072 		mov	r2, #512
 292 001e 02A8     		add	r0, sp, #8
 293 0020 FFF7FEFF 		bl	memset
 294 0024 FFF7FEFF 		bl	GetStorageInfo
 295 0028 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 296 002a 022B     		cmp	r3, #2
 297 002c 26D0     		beq	.L103
 298 002e 0023     		movs	r3, #0
 299 0030 2022     		movs	r2, #32
 300 0032 1946     		mov	r1, r3
 301 0034 1846     		mov	r0, r3
 302 0036 1546     		mov	r5, r2
 303              	.L46:
 304 0038 8DF80A10 		strb	r1, [sp, #10]
 305 003c B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 306 0040 8DF80820 		strb	r2, [sp, #8]
 307 0044 8DF80900 		strb	r0, [sp, #9]
 308 0048 8DF80B30 		strb	r3, [sp, #11]
 309              	.L80:
 310 004c 0426     		movs	r6, #4
 311 004e 1522     		movs	r2, #21
 312              	.L83:
 313 0050 02AB     		add	r3, sp, #8
 314 0052 0096     		str	r6, [sp]
 315 0054 82A8     		add	r0, sp, #520
 316 0056 FFF7FEFF 		bl	GenPacket
 317 005a 0646     		mov	r6, r0
 318 005c FFF7FEFF 		bl	get_uart
 319 0060 82A9     		add	r1, sp, #520
 320 0062 3246     		mov	r2, r6
 321 0064 FFF7FEFF 		bl	MSS_UART_polled_tx
 322 0068 B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 323              	.L48:
 324 006c B1F5E04F 		cmp	r1, #28672
 325 0070 59D0     		beq	.L104
 326 0072 2846     		mov	r0, r5
 327 0074 0DF5C16D 		add	sp, sp, #1544
 328              		@ sp needed
 329 0078 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 330              	.L103:
 331 007c 2946     		mov	r1, r5
 332 007e 2046     		mov	r0, r4
 333 0080 FFF7FEFF 		bl	CheckPacket.part.1
 334 0084 0546     		mov	r5, r0
 335 0086 0028     		cmp	r0, #0
 336 0088 40F01081 		bne	.L105
 337 008c 48F20303 		movw	r3, #32771
 338 0090 B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 339 0094 9942     		cmp	r1, r3
 340 0096 00F0DA80 		beq	.L49
 341 009a 19D9     		bls	.L106
 342 009c 48F20703 		movw	r3, #32775
 343 00a0 9942     		cmp	r1, r3
 344 00a2 00F0DA80 		beq	.L58
 345 00a6 2BD8     		bhi	.L59
 346 00a8 48F20503 		movw	r3, #32773
 347 00ac 9942     		cmp	r1, r3
 348 00ae 00F08A80 		beq	.L60
 349 00b2 66D8     		bhi	.L107
 350 00b4 824A     		ldr	r2, .L111
 351 00b6 0426     		movs	r6, #4
 352 00b8 1368     		ldr	r3, [r2]
 353 00ba 23F47F63 		bic	r3, r3, #4080
 354 00be 23F00F03 		bic	r3, r3, #15
 355              	.L99:
 356 00c2 1360     		str	r3, [r2]
 357 00c4 1068     		ldr	r0, [r2]
 358 00c6 D4F80630 		ldr	r3, [r4, #6]	@ unaligned
 359 00ca 0343     		orrs	r3, r3, r0
 360 00cc 1360     		str	r3, [r2]
 361 00ce 46E0     		b	.L97
 362              	.L106:
 363 00d0 47F20313 		movw	r3, #28931
 364 00d4 9942     		cmp	r1, r3
 365 00d6 6BD0     		beq	.L51
 366 00d8 30D9     		bls	.L108
 367 00da 48F20103 		movw	r3, #32769
 368 00de 9942     		cmp	r1, r3
 369 00e0 00F0AF80 		beq	.L55
 370 00e4 5ED8     		bhi	.L56
 371 00e6 B1F5004F 		cmp	r1, #32768
 372 00ea BFD1     		bne	.L48
 373 00ec 7548     		ldr	r0, .L111+4
 374 00ee 744A     		ldr	r2, .L111
 375 00f0 754B     		ldr	r3, .L111+8
 376 00f2 4FF0C046 		mov	r6, #1610612736
 377 00f6 0660     		str	r6, [r0]
 378 00f8 1560     		str	r5, [r2]
 379 00fa 0426     		movs	r6, #4
 380 00fc 1D60     		str	r5, [r3]
 381 00fe 2EE0     		b	.L97
 382              	.L59:
 383 0100 49F20103 		movw	r3, #36865
 384 0104 9942     		cmp	r1, r3
 385 0106 00F08780 		beq	.L63
 386 010a 49F20203 		movw	r3, #36866
 387 010e 9942     		cmp	r1, r3
 388 0110 30D0     		beq	.L64
 389 0112 B1F5104F 		cmp	r1, #36864
 390 0116 A9D1     		bne	.L48
 391 0118 02A8     		add	r0, sp, #8
 392 011a FFF7FEFF 		bl	GetSerialNo
 393 011e B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 394 0122 0646     		mov	r6, r0
 395 0124 1BE0     		b	.L97
 396              	.L104:
 397 0126 4FF47A70 		mov	r0, #1000
 398 012a FFF7FEFF 		bl	delay_ms
 399 012e FFF7FEFF 		bl	reset_system
 400 0132 2846     		mov	r0, r5
 401 0134 0DF5C16D 		add	sp, sp, #1544
 402              		@ sp needed
 403 0138 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 404              	.L108:
 405 013c B1F5E24F 		cmp	r1, #28928
 406 0140 0FD0     		beq	.L53
 407 0142 47F20113 		movw	r3, #28929
 408 0146 9942     		cmp	r1, r3
 409 0148 90D1     		bne	.L48
 410 014a A188     		ldrh	r1, [r4, #4]	@ unaligned
 411 014c A01D     		adds	r0, r4, #6
 412 014e FFF7FEFF 		bl	SetSerialNo
 413 0152 0120     		movs	r0, #1
 414 0154 FFF7FEFF 		bl	SaveStorageInfo
 415 0158 B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 416 015c 0426     		movs	r6, #4
 417              	.L97:
 418 015e 0622     		movs	r2, #6
 419 0160 76E7     		b	.L83
 420              	.L53:
 421 0162 FFF7FEFF 		bl	SaveStorageInfoALL
 422 0166 C0B2     		uxtb	r0, r0
 423 0168 0028     		cmp	r0, #0
 424 016a 7BD1     		bne	.L78
 425 016c B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 426 0170 0426     		movs	r6, #4
 427 0172 F4E7     		b	.L97
 428              	.L64:
 429 0174 02A8     		add	r0, sp, #8
 430 0176 FFF7FEFF 		bl	GetModelName
 431 017a 0646     		mov	r6, r0
 432              	.L98:
 433 017c B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 434 0180 EDE7     		b	.L97
 435              	.L107:
 436 0182 D4F80A60 		ldr	r6, [r4, #10]	@ unaligned
 437 0186 B6F5007F 		cmp	r6, #512
 438 018a 6DDD     		ble	.L109
 439 018c 2422     		movs	r2, #36
 440 018e 1546     		mov	r5, r2
 441              	.L82:
 442 0190 0023     		movs	r3, #0
 443 0192 8DF80820 		strb	r2, [sp, #8]
 444 0196 8DF80930 		strb	r3, [sp, #9]
 445 019a 8DF80A30 		strb	r3, [sp, #10]
 446 019e 8DF80B30 		strb	r3, [sp, #11]
 447 01a2 53E7     		b	.L80
 448              	.L56:
 449 01a4 D4F80620 		ldr	r2, [r4, #6]	@ unaligned
 450 01a8 454B     		ldr	r3, .L111
 451 01aa 0426     		movs	r6, #4
 452 01ac 1A60     		str	r2, [r3]
 453 01ae D6E7     		b	.L97
 454              	.L51:
 455 01b0 A188     		ldrh	r1, [r4, #4]	@ unaligned
 456 01b2 A01D     		adds	r0, r4, #6
 457 01b4 FFF7FEFF 		bl	SetModelName
 458 01b8 0120     		movs	r0, #1
 459 01ba FFF7FEFF 		bl	SaveStorageInfo
 460 01be 0426     		movs	r6, #4
 461 01c0 B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 462 01c4 CBE7     		b	.L97
 463              	.L60:
 464 01c6 414F     		ldr	r7, .L111+12
 465 01c8 3E4B     		ldr	r3, .L111+4
 466 01ca B946     		mov	r9, r7
 467 01cc DFF8F0A0 		ldr	r10, .L111
 468 01d0 1B68     		ldr	r3, [r3]
 469 01d2 DAF80020 		ldr	r2, [r10]
 470 01d6 04F10608 		add	r8, r4, #6
 471 01da 1344     		add	r3, r3, r2
 472 01dc 3B60     		str	r3, [r7]
 473 01de 0326     		movs	r6, #3
 474              	.L75:
 475 01e0 3868     		ldr	r0, [r7]
 476 01e2 4146     		mov	r1, r8
 477 01e4 A288     		ldrh	r2, [r4, #4]	@ unaligned
 478 01e6 0023     		movs	r3, #0
 479 01e8 FFF7FEFF 		bl	NVM_write
 480 01ec 0028     		cmp	r0, #0
 481 01ee 4BD0     		beq	.L69
 482 01f0 0528     		cmp	r0, #5
 483 01f2 49D0     		beq	.L69
 484 01f4 0328     		cmp	r0, #3
 485 01f6 35D1     		bne	.L78
 486 01f8 D9F80000 		ldr	r0, [r9]
 487 01fc A188     		ldrh	r1, [r4, #4]	@ unaligned
 488 01fe FFF7FEFF 		bl	NVM_unlock
 489 0202 0028     		cmp	r0, #0
 490 0204 18BF     		it	ne
 491 0206 0546     		movne	r5, r0
 492 0208 013E     		subs	r6, r6, #1
 493 020a E9D1     		bne	.L75
 494              	.L72:
 495 020c B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 496 0210 002D     		cmp	r5, #0
 497 0212 52D0     		beq	.L79
 498 0214 EAB2     		uxtb	r2, r5
 499 0216 BBE7     		b	.L82
 500              	.L63:
 501 0218 FFF7FEFF 		bl	GetBLVer
 502 021c 8146     		mov	r9, r0
 503 021e FFF7FEFF 		bl	GetIAPVer
 504 0222 8046     		mov	r8, r0
 505 0224 FFF7FEFF 		bl	GetAPPVer
 506 0228 0746     		mov	r7, r0
 507 022a FFF7FEFF 		bl	GetFPGAVer
 508 022e 1026     		movs	r6, #16
 509 0230 CDF80890 		str	r9, [sp, #8]
 510 0234 CDF80C80 		str	r8, [sp, #12]
 511 0238 0497     		str	r7, [sp, #16]
 512 023a 0590     		str	r0, [sp, #20]
 513 023c B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 514 0240 8DE7     		b	.L97
 515              	.L55:
 516 0242 D4F80620 		ldr	r2, [r4, #6]	@ unaligned
 517 0246 1F4B     		ldr	r3, .L111+4
 518 0248 0426     		movs	r6, #4
 519 024a 1A60     		str	r2, [r3]
 520 024c 87E7     		b	.L97
 521              	.L49:
 522 024e 1C4A     		ldr	r2, .L111
 523 0250 0426     		movs	r6, #4
 524 0252 1368     		ldr	r3, [r2]
 525 0254 1B0C     		lsrs	r3, r3, #16
 526 0256 1B04     		lsls	r3, r3, #16
 527 0258 33E7     		b	.L99
 528              	.L58:
 529 025a 1B4B     		ldr	r3, .L111+8
 530 025c 0122     		movs	r2, #1
 531 025e 1A60     		str	r2, [r3]
 532 0260 0426     		movs	r6, #4
 533 0262 7CE7     		b	.L97
 534              	.L78:
 535 0264 0546     		mov	r5, r0
 536 0266 D1E7     		b	.L72
 537              	.L109:
 538 0268 D4F80600 		ldr	r0, [r4, #6]	@ unaligned
 539 026c 02A9     		add	r1, sp, #8
 540 026e 00F12040 		add	r0, r0, #-1610612736
 541 0272 3246     		mov	r2, r6
 542 0274 FFF7FEFF 		bl	MSS_NVM_read
 543 0278 0028     		cmp	r0, #0
 544 027a 3FF47FAF 		beq	.L98
 545 027e 2522     		movs	r2, #37
 546 0280 1546     		mov	r5, r2
 547 0282 B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 548 0286 83E7     		b	.L82
 549              	.L69:
 550 0288 3868     		ldr	r0, [r7]
 551 028a 4146     		mov	r1, r8
 552 028c A288     		ldrh	r2, [r4, #4]	@ unaligned
 553 028e FFF7FEFF 		bl	NVM_verify
 554 0292 20B1     		cbz	r0, .L110
 555 0294 0546     		mov	r5, r0
 556 0296 B4F80110 		ldrh	r1, [r4, #1]	@ unaligned
 557 029a 0246     		mov	r2, r0
 558 029c 78E7     		b	.L82
 559              	.L110:
 560 029e DAF80030 		ldr	r3, [r10]
 561 02a2 A288     		ldrh	r2, [r4, #4]	@ unaligned
 562 02a4 1344     		add	r3, r3, r2
 563 02a6 CAF80030 		str	r3, [r10]
 564 02aa AFE7     		b	.L72
 565              	.L105:
 566 02ac C2B2     		uxtb	r2, r0
 567 02ae C5F30741 		ubfx	r1, r5, #16, #8
 568 02b2 C0F30720 		ubfx	r0, r0, #8, #8
 569 02b6 2B0E     		lsrs	r3, r5, #24
 570 02b8 BEE6     		b	.L46
 571              	.L79:
 572 02ba 0426     		movs	r6, #4
 573 02bc 4FE7     		b	.L97
 574              	.L112:
 575 02be 00BF     		.align	2
 576              	.L111:
 577 02c0 00000000 		.word	.LANCHOR1
 578 02c4 00000000 		.word	.LANCHOR0
 579 02c8 34000150 		.word	1342242868
 580 02cc 00000000 		.word	.LANCHOR2
 582              		.section	.text.processFwUpdate,"ax",%progbits
 583              		.align	2
 584              		.global	processFwUpdate
 585              		.thumb
 586              		.thumb_func
 588              	processFwUpdate:
 589              		@ args = 0, pretend = 0, frame = 1024
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 592 0002 ADF2044D 		subw	sp, sp, #1028
 593 0006 0021     		movs	r1, #0
 594 0008 4FF48062 		mov	r2, #1024
 595 000c 6846     		mov	r0, sp
 596 000e FFF7FEFF 		bl	memset
 597 0012 FFF7FEFF 		bl	get_mili_time
 598 0016 0546     		mov	r5, r0
 599 0018 104F     		ldr	r7, .L122
 600 001a 0026     		movs	r6, #0
 601              	.L114:
 602 001c FFF7FEFF 		bl	get_available
 603 0020 0528     		cmp	r0, #5
 604 0022 FBDD     		ble	.L114
 605 0024 6846     		mov	r0, sp
 606 0026 FFF7FEFF 		bl	RecvData.part.0
 607 002a 041E     		subs	r4, r0, #0
 608 002c F6DD     		ble	.L114
 609 002e 2846     		mov	r0, r5
 610 0030 FFF7FEFF 		bl	diff_mili_time
 611 0034 C728     		cmp	r0, #199
 612 0036 0AD8     		bhi	.L121
 613              	.L116:
 614 0038 2146     		mov	r1, r4
 615 003a 6846     		mov	r0, sp
 616 003c FFF7FEFF 		bl	ParseUpdateData
 617 0040 6846     		mov	r0, sp
 618 0042 0021     		movs	r1, #0
 619 0044 4FF48062 		mov	r2, #1024
 620 0048 FFF7FEFF 		bl	memset
 621 004c E6E7     		b	.L114
 622              	.L121:
 623 004e FFF7FEFF 		bl	get_mili_time
 624 0052 3E60     		str	r6, [r7]
 625 0054 0546     		mov	r5, r0
 626 0056 86F00106 		eor	r6, r6, #1
 627 005a EDE7     		b	.L116
 628              	.L123:
 629              		.align	2
 630              	.L122:
 631 005c 34000150 		.word	1342242868
 633              		.section	.text.post_update_ready,"ax",%progbits
 634              		.align	2
 635              		.global	post_update_ready
 636              		.thumb
 637              		.thumb_func
 639              	post_update_ready:
 640              		@ args = 0, pretend = 0, frame = 8
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642 0000 10B5     		push	{r4, lr}
 643 0002 0022     		movs	r2, #0
 644 0004 84B0     		sub	sp, sp, #16
 645 0006 1346     		mov	r3, r2
 646 0008 0092     		str	r2, [sp]
 647 000a 48F20211 		movw	r1, #33026
 648 000e 02A8     		add	r0, sp, #8
 649 0010 FFF7FEFF 		bl	GenPacket
 650 0014 0446     		mov	r4, r0
 651 0016 FFF7FEFF 		bl	get_uart
 652 001a 02A9     		add	r1, sp, #8
 653 001c 2246     		mov	r2, r4
 654 001e FFF7FEFF 		bl	MSS_UART_polled_tx
 655 0022 2046     		mov	r0, r4
 656 0024 04B0     		add	sp, sp, #16
 657              		@ sp needed
 658 0026 10BD     		pop	{r4, pc}
 660              		.section	.text.post_prog_run,"ax",%progbits
 661              		.align	2
 662              		.global	post_prog_run
 663              		.thumb
 664              		.thumb_func
 666              	post_prog_run:
 667              		@ args = 0, pretend = 0, frame = 80
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669 0000 10B5     		push	{r4, lr}
 670 0002 0E4A     		ldr	r2, .L128
 671 0004 96B0     		sub	sp, sp, #88
 672 0006 16AB     		add	r3, sp, #88
 673 0008 0121     		movs	r1, #1
 674 000a 2424     		movs	r4, #36
 675 000c 43F8501D 		str	r1, [r3, #-80]!
 676 0010 92E80300 		ldmia	r2, {r0, r1}
 677 0014 0094     		str	r4, [sp]
 678 0016 0390     		str	r0, [sp, #12]
 679 0018 8DF81010 		strb	r1, [sp, #16]
 680 001c 0022     		movs	r2, #0
 681 001e 4FF40141 		mov	r1, #33024
 682 0022 0BA8     		add	r0, sp, #44
 683 0024 FFF7FEFF 		bl	GenPacket
 684 0028 0446     		mov	r4, r0
 685 002a FFF7FEFF 		bl	get_uart
 686 002e 0BA9     		add	r1, sp, #44
 687 0030 2246     		mov	r2, r4
 688 0032 FFF7FEFF 		bl	MSS_UART_polled_tx
 689 0036 2046     		mov	r0, r4
 690 0038 16B0     		add	sp, sp, #88
 691              		@ sp needed
 692 003a 10BD     		pop	{r4, pc}
 693              	.L129:
 694              		.align	2
 695              	.L128:
 696 003c 00000000 		.word	.LC0
 698              		.section	.rodata.str1.4,"aMS",%progbits,1
 699              		.align	2
 700              	.LC0:
 701 0000 312E3030 		.ascii	"1.00\000"
 701      00
 702              		.section	.bss.offset.8434,"aw",%nobits
 703              		.align	2
 704              		.set	.LANCHOR1,. + 0
 707              	offset.8434:
 708 0000 00000000 		.space	4
 709              		.section	.bss.address.8432,"aw",%nobits
 710              		.align	2
 711              		.set	.LANCHOR2,. + 0
 714              	address.8432:
 715 0000 00000000 		.space	4
 716              		.section	.data.baseAddress.8433,"aw",%progbits
 717              		.align	2
 718              		.set	.LANCHOR0,. + 0
 721              	baseAddress.8433:
 722 0000 00000060 		.word	1610612736
 723              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150529 (release) [ARM/embedded-4_9-br
DEFINED SYMBOLS
                            *ABS*:00000000 procotol.c
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:16     .text.RecvData.part.0:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:20     .text.RecvData.part.0:00000000 RecvData.part.0
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:49     .text.CheckPacket.part.1:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:53     .text.CheckPacket.part.1:00000000 CheckPacket.part.1
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:85     .text.uart0_rx_handler:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:90     .text.uart0_rx_handler:00000000 uart0_rx_handler
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:117    .text.uart0_rx_handler:00000038 $d
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:120    .text.GenPacket:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:125    .text.GenPacket:00000000 GenPacket
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:173    .text.GenHeaderPacket:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:178    .text.GenHeaderPacket:00000000 GenHeaderPacket
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:207    .text.RecvData:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:212    .text.RecvData:00000000 RecvData
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:228    .text.CalcChkSum:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:233    .text.CalcChkSum:00000000 CalcChkSum
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:256    .text.CheckPacket:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:261    .text.CheckPacket:00000000 CheckPacket
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:274    .text.ParseUpdateData:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:279    .text.ParseUpdateData:00000000 ParseUpdateData
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:577    .text.ParseUpdateData:000002c0 $d
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:583    .text.processFwUpdate:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:588    .text.processFwUpdate:00000000 processFwUpdate
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:631    .text.processFwUpdate:0000005c $d
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:634    .text.post_update_ready:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:639    .text.post_update_ready:00000000 post_update_ready
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:661    .text.post_prog_run:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:666    .text.post_prog_run:00000000 post_prog_run
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:696    .text.post_prog_run:0000003c $d
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:699    .rodata.str1.4:00000000 $d
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:703    .bss.offset.8434:00000000 $d
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:707    .bss.offset.8434:00000000 offset.8434
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:710    .bss.address.8432:00000000 $d
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:714    .bss.address.8432:00000000 address.8432
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:717    .data.baseAddress.8433:00000000 $d
C:\Users\jiryu\AppData\Local\Temp\ccChJlUY.s:721    .data.baseAddress.8433:00000000 baseAddress.8433

UNDEFINED SYMBOLS
peek
get_available
dequeue
memset
MSS_UART_get_rx
enqueue
memcpy
GetStorageInfo
get_uart
MSS_UART_polled_tx
GetSerialNo
delay_ms
reset_system
SetSerialNo
SaveStorageInfo
SaveStorageInfoALL
GetModelName
SetModelName
NVM_write
NVM_unlock
GetBLVer
GetIAPVer
GetAPPVer
GetFPGAVer
MSS_NVM_read
NVM_verify
get_mili_time
diff_mili_time
