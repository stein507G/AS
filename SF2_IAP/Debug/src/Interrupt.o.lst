   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Interrupt.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.prvGetRegistersFromStack,"ax",%progbits
  19              		.align	2
  20              		.global	prvGetRegistersFromStack
  21              		.thumb
  22              		.thumb_func
  24              	prvGetRegistersFromStack:
  25              	.LFB102:
  26              		.file 1 "../src/Interrupt.c"
   1:../src/Interrupt.c **** /*
   2:../src/Interrupt.c ****  * Interrupt.c
   3:../src/Interrupt.c ****  *
   4:../src/Interrupt.c ****  *  Created on: 2015. 1. 7.
   5:../src/Interrupt.c ****  *      Author: chanii
   6:../src/Interrupt.c ****  */
   7:../src/Interrupt.c **** 
   8:../src/Interrupt.c **** #include "config.h"
   9:../src/Interrupt.c **** 
  10:../src/Interrupt.c **** //.word  Reset_Handler
  11:../src/Interrupt.c **** //.word  NMI_Handler
  12:../src/Interrupt.c **** 
  13:../src/Interrupt.c **** void prvGetRegistersFromStack(uint32_t *pulFaultStackAddress)
  14:../src/Interrupt.c **** {
  27              		.loc 1 14 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 8BB0     		sub	sp, sp, #44
  36              		.cfi_def_cfa_offset 48
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  15:../src/Interrupt.c **** 	/* These are volatile to try and prevent the compiler/linker optimising them
  16:../src/Interrupt.c **** 	 away as the variables never actually get used.  If the debugger won't show the
  17:../src/Interrupt.c **** 	 values of the variables, make them global my moving their declaration outside
  18:../src/Interrupt.c **** 	 of this function. */
  19:../src/Interrupt.c **** 
  20:../src/Interrupt.c **** 	volatile unsigned int r0;
  21:../src/Interrupt.c **** 	volatile unsigned int r1;
  22:../src/Interrupt.c **** 	volatile unsigned int r2;
  23:../src/Interrupt.c **** 	volatile unsigned int r3;
  24:../src/Interrupt.c **** 	volatile unsigned int r12;
  25:../src/Interrupt.c **** 	volatile unsigned int lr; /* Link register. */
  26:../src/Interrupt.c **** 	volatile unsigned int pc; /* Program counter. */
  27:../src/Interrupt.c **** 	volatile unsigned int psr;/* Program status register. */
  28:../src/Interrupt.c **** 
  29:../src/Interrupt.c **** 	r0 = pulFaultStackAddress[0];
  40              		.loc 1 29 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 1B68     		ldr	r3, [r3]
  43 000c 7B62     		str	r3, [r7, #36]
  30:../src/Interrupt.c **** 	r1 = pulFaultStackAddress[1];
  44              		.loc 1 30 0
  45 000e 7B68     		ldr	r3, [r7, #4]
  46 0010 0433     		adds	r3, r3, #4
  47 0012 1B68     		ldr	r3, [r3]
  48 0014 3B62     		str	r3, [r7, #32]
  31:../src/Interrupt.c **** 	r2 = pulFaultStackAddress[2];
  49              		.loc 1 31 0
  50 0016 7B68     		ldr	r3, [r7, #4]
  51 0018 0833     		adds	r3, r3, #8
  52 001a 1B68     		ldr	r3, [r3]
  53 001c FB61     		str	r3, [r7, #28]
  32:../src/Interrupt.c **** 	r3 = pulFaultStackAddress[3];
  54              		.loc 1 32 0
  55 001e 7B68     		ldr	r3, [r7, #4]
  56 0020 0C33     		adds	r3, r3, #12
  57 0022 1B68     		ldr	r3, [r3]
  58 0024 BB61     		str	r3, [r7, #24]
  33:../src/Interrupt.c **** 
  34:../src/Interrupt.c **** 	r12 = pulFaultStackAddress[4];
  59              		.loc 1 34 0
  60 0026 7B68     		ldr	r3, [r7, #4]
  61 0028 1033     		adds	r3, r3, #16
  62 002a 1B68     		ldr	r3, [r3]
  63 002c 7B61     		str	r3, [r7, #20]
  35:../src/Interrupt.c **** 	lr = pulFaultStackAddress[5];
  64              		.loc 1 35 0
  65 002e 7B68     		ldr	r3, [r7, #4]
  66 0030 1433     		adds	r3, r3, #20
  67 0032 1B68     		ldr	r3, [r3]
  68 0034 3B61     		str	r3, [r7, #16]
  36:../src/Interrupt.c **** 	pc = pulFaultStackAddress[6];
  69              		.loc 1 36 0
  70 0036 7B68     		ldr	r3, [r7, #4]
  71 0038 1833     		adds	r3, r3, #24
  72 003a 1B68     		ldr	r3, [r3]
  73 003c FB60     		str	r3, [r7, #12]
  37:../src/Interrupt.c **** 	psr = pulFaultStackAddress[7];
  74              		.loc 1 37 0
  75 003e 7B68     		ldr	r3, [r7, #4]
  76 0040 1C33     		adds	r3, r3, #28
  77 0042 1B68     		ldr	r3, [r3]
  78 0044 BB60     		str	r3, [r7, #8]
  38:../src/Interrupt.c **** 
  39:../src/Interrupt.c **** 
  40:../src/Interrupt.c **** }
  79              		.loc 1 40 0
  80 0046 2C37     		adds	r7, r7, #44
  81              		.cfi_def_cfa_offset 4
  82 0048 BD46     		mov	sp, r7
  83              		.cfi_def_cfa_register 13
  84              		@ sp needed
  85 004a 5DF8047B 		ldr	r7, [sp], #4
  86              		.cfi_restore 7
  87              		.cfi_def_cfa_offset 0
  88 004e 7047     		bx	lr
  89              		.cfi_endproc
  90              	.LFE102:
  92              		.section	.text.NMI_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	NMI_Handler
  95              		.thumb
  96              		.thumb_func
  98              	NMI_Handler:
  99              	.LFB103:
  41:../src/Interrupt.c **** 
  42:../src/Interrupt.c **** __attribute__((__interrupt__)) void NMI_Handler(void)
  43:../src/Interrupt.c **** {
 100              		.loc 1 43 0
 101              		.cfi_startproc
 102              		@ Stack Align: May be called with mis-aligned SP.
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106 0000 6846     		mov	r0, sp
 107              		.cfi_register 13, 0
 108 0002 20F00701 		bic	r1, r0, #7
 109 0006 8D46     		mov	sp, r1
 110 0008 81B4     		push	{r0, r7}
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 13, -8
 113              		.cfi_offset 7, -4
 114 000a 00AF     		add	r7, sp, #0
 115              		.cfi_def_cfa_register 7
 116              	.L3:
  44:../src/Interrupt.c **** 	//reset_system();
  45:../src/Interrupt.c **** 	while (1);
 117              		.loc 1 45 0 discriminator 1
 118 000c FEE7     		b	.L3
 119              		.cfi_endproc
 120              	.LFE103:
 122 000e 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
 123              		.align	2
 124              		.global	HardFault_Handler
 125              		.thumb
 126              		.thumb_func
 128              	HardFault_Handler:
 129              	.LFB104:
  46:../src/Interrupt.c **** }
  47:../src/Interrupt.c **** 
  48:../src/Interrupt.c **** __attribute__((__interrupt__)) void HardFault_Handler(void)
  49:../src/Interrupt.c **** {
 130              		.loc 1 49 0
 131              		.cfi_startproc
 132              		@ Stack Align: May be called with mis-aligned SP.
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 6846     		mov	r0, sp
 137              		.cfi_register 13, 0
 138 0002 20F00701 		bic	r1, r0, #7
 139 0006 8D46     		mov	sp, r1
 140 0008 81B4     		push	{r0, r7}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 13, -8
 143              		.cfi_offset 7, -4
 144 000a 00AF     		add	r7, sp, #0
 145              		.cfi_def_cfa_register 7
  50:../src/Interrupt.c **** 
  51:../src/Interrupt.c **** #if 0
  52:../src/Interrupt.c **** 	 __asm volatile
  53:../src/Interrupt.c **** 	 (
  54:../src/Interrupt.c **** 	 " tst lr, #4                                                \n"
  55:../src/Interrupt.c **** 	 " ite eq                                                    \n"
  56:../src/Interrupt.c **** 	 " mrseq r0, msp                                             \n"
  57:../src/Interrupt.c **** 	 " mrsne r0, psp                                             \n"
  58:../src/Interrupt.c **** 	 " ldr r1, [r0, #24]                                         \n"
  59:../src/Interrupt.c **** 	 " ldr r2, handler2_address_const                            \n"
  60:../src/Interrupt.c **** 	 " bx r2                                                     \n"
  61:../src/Interrupt.c **** 	 " handler2_address_const: .word prvGetRegistersFromStack    \n"
  62:../src/Interrupt.c **** 	 );
  63:../src/Interrupt.c **** #else
  64:../src/Interrupt.c **** 	__asm volatile
 146              		.loc 1 64 0
 147              	@ 64 "../src/Interrupt.c" 1
 148 000c 1EF0040F 		 tst lr, #4                                                
 149 0010 0CBF     	 ite eq                                                    
 150 0012 EFF30880 	 mrseq r0, msp                                             
 151 0016 EFF30980 	 mrsne r0, psp                                             
 152 001a FFF7FEBF 	 b prvGetRegistersFromStack                               
 153              	
 154              	@ 0 "" 2
 155              		.thumb
 156              	.L5:
  65:../src/Interrupt.c **** 	(
  66:../src/Interrupt.c **** 			" tst lr, #4                                                \n"
  67:../src/Interrupt.c **** 			" ite eq                                                    \n"
  68:../src/Interrupt.c **** 			" mrseq r0, msp                                             \n"
  69:../src/Interrupt.c **** 			" mrsne r0, psp                                             \n"
  70:../src/Interrupt.c **** 			" b prvGetRegistersFromStack                               \n"
  71:../src/Interrupt.c **** 	);
  72:../src/Interrupt.c **** #endif
  73:../src/Interrupt.c **** 	//reset_system();
  74:../src/Interrupt.c **** 	while (1);
 157              		.loc 1 74 0 discriminator 1
 158 001e FEE7     		b	.L5
 159              		.cfi_endproc
 160              	.LFE104:
 162              		.section	.text.MemManage_Handler,"ax",%progbits
 163              		.align	2
 164              		.global	MemManage_Handler
 165              		.thumb
 166              		.thumb_func
 168              	MemManage_Handler:
 169              	.LFB105:
  75:../src/Interrupt.c **** }
  76:../src/Interrupt.c **** 
  77:../src/Interrupt.c **** __attribute__((__interrupt__)) void MemManage_Handler(void)
  78:../src/Interrupt.c **** {
 170              		.loc 1 78 0
 171              		.cfi_startproc
 172              		@ Stack Align: May be called with mis-aligned SP.
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176 0000 6846     		mov	r0, sp
 177              		.cfi_register 13, 0
 178 0002 20F00701 		bic	r1, r0, #7
 179 0006 8D46     		mov	sp, r1
 180 0008 81B4     		push	{r0, r7}
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 13, -8
 183              		.cfi_offset 7, -4
 184 000a 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 186              	.L7:
  79:../src/Interrupt.c **** 	//reset_system();
  80:../src/Interrupt.c **** 	while (1);
 187              		.loc 1 80 0 discriminator 1
 188 000c FEE7     		b	.L7
 189              		.cfi_endproc
 190              	.LFE105:
 192 000e 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
 193              		.align	2
 194              		.global	BusFault_Handler
 195              		.thumb
 196              		.thumb_func
 198              	BusFault_Handler:
 199              	.LFB106:
  81:../src/Interrupt.c **** }
  82:../src/Interrupt.c **** __attribute__((__interrupt__)) void BusFault_Handler(void)
  83:../src/Interrupt.c **** {
 200              		.loc 1 83 0
 201              		.cfi_startproc
 202              		@ Stack Align: May be called with mis-aligned SP.
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206 0000 6846     		mov	r0, sp
 207              		.cfi_register 13, 0
 208 0002 20F00701 		bic	r1, r0, #7
 209 0006 8D46     		mov	sp, r1
 210 0008 81B4     		push	{r0, r7}
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 13, -8
 213              		.cfi_offset 7, -4
 214 000a 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216              	.L9:
  84:../src/Interrupt.c **** 	//reset_system();
  85:../src/Interrupt.c **** 	while (1);
 217              		.loc 1 85 0 discriminator 1
 218 000c FEE7     		b	.L9
 219              		.cfi_endproc
 220              	.LFE106:
 222 000e 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 223              		.align	2
 224              		.global	UsageFault_Handler
 225              		.thumb
 226              		.thumb_func
 228              	UsageFault_Handler:
 229              	.LFB107:
  86:../src/Interrupt.c **** }
  87:../src/Interrupt.c **** __attribute__((__interrupt__)) void UsageFault_Handler(void)
  88:../src/Interrupt.c **** {
 230              		.loc 1 88 0
 231              		.cfi_startproc
 232              		@ Stack Align: May be called with mis-aligned SP.
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236 0000 6846     		mov	r0, sp
 237              		.cfi_register 13, 0
 238 0002 20F00701 		bic	r1, r0, #7
 239 0006 8D46     		mov	sp, r1
 240 0008 81B4     		push	{r0, r7}
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 13, -8
 243              		.cfi_offset 7, -4
 244 000a 00AF     		add	r7, sp, #0
 245              		.cfi_def_cfa_register 7
 246              	.L11:
  89:../src/Interrupt.c **** 	//reset_system();
  90:../src/Interrupt.c **** 	while (1);
 247              		.loc 1 90 0 discriminator 1
 248 000c FEE7     		b	.L11
 249              		.cfi_endproc
 250              	.LFE107:
 252 000e 00BF     		.section	.text.WdogWakeup_IRQHandler,"ax",%progbits
 253              		.align	2
 254              		.global	WdogWakeup_IRQHandler
 255              		.thumb
 256              		.thumb_func
 258              	WdogWakeup_IRQHandler:
 259              	.LFB108:
  91:../src/Interrupt.c **** }
  92:../src/Interrupt.c **** 
  93:../src/Interrupt.c **** __attribute__((__interrupt__)) void WdogWakeup_IRQHandler(void)
  94:../src/Interrupt.c **** {
 260              		.loc 1 94 0
 261              		.cfi_startproc
 262              		@ Stack Align: May be called with mis-aligned SP.
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266 0000 6846     		mov	r0, sp
 267              		.cfi_register 13, 0
 268 0002 20F00701 		bic	r1, r0, #7
 269 0006 8D46     		mov	sp, r1
 270 0008 81B4     		push	{r0, r7}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 13, -8
 273              		.cfi_offset 7, -4
 274 000a 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 276              	.L13:
  95:../src/Interrupt.c **** 	//reset_system();
  96:../src/Interrupt.c **** 	while (1);
 277              		.loc 1 96 0 discriminator 1
 278 000c FEE7     		b	.L13
 279              		.cfi_endproc
 280              	.LFE108:
 282 000e 00BF     		.section	.text.CommSwitchError_IRQHandler,"ax",%progbits
 283              		.align	2
 284              		.global	CommSwitchError_IRQHandler
 285              		.thumb
 286              		.thumb_func
 288              	CommSwitchError_IRQHandler:
 289              	.LFB109:
  97:../src/Interrupt.c **** }
  98:../src/Interrupt.c **** 
  99:../src/Interrupt.c **** 
 100:../src/Interrupt.c **** __attribute__((__interrupt__)) void CommSwitchError_IRQHandler(void)
 101:../src/Interrupt.c **** {
 290              		.loc 1 101 0
 291              		.cfi_startproc
 292              		@ Stack Align: May be called with mis-aligned SP.
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296 0000 6846     		mov	r0, sp
 297              		.cfi_register 13, 0
 298 0002 20F00701 		bic	r1, r0, #7
 299 0006 8D46     		mov	sp, r1
 300 0008 81B4     		push	{r0, r7}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 13, -8
 303              		.cfi_offset 7, -4
 304 000a 00AF     		add	r7, sp, #0
 305              		.cfi_def_cfa_register 7
 306              	.L15:
 102:../src/Interrupt.c **** 	//reset_system();
 103:../src/Interrupt.c **** 	while (1);
 307              		.loc 1 103 0 discriminator 1
 308 000c FEE7     		b	.L15
 309              		.cfi_endproc
 310              	.LFE109:
 312 000e 00BF     		.section	.text.CacheError_IRQHandler,"ax",%progbits
 313              		.align	2
 314              		.global	CacheError_IRQHandler
 315              		.thumb
 316              		.thumb_func
 318              	CacheError_IRQHandler:
 319              	.LFB110:
 104:../src/Interrupt.c **** }
 105:../src/Interrupt.c **** 
 106:../src/Interrupt.c **** __attribute__((__interrupt__)) void CacheError_IRQHandler(void)
 107:../src/Interrupt.c **** {
 320              		.loc 1 107 0
 321              		.cfi_startproc
 322              		@ Stack Align: May be called with mis-aligned SP.
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 1, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 326 0000 6846     		mov	r0, sp
 327              		.cfi_register 13, 0
 328 0002 20F00701 		bic	r1, r0, #7
 329 0006 8D46     		mov	sp, r1
 330 0008 81B4     		push	{r0, r7}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 13, -8
 333              		.cfi_offset 7, -4
 334 000a 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 336              	.L17:
 108:../src/Interrupt.c **** 	//reset_system();
 109:../src/Interrupt.c **** 	while (1);
 337              		.loc 1 109 0 discriminator 1
 338 000c FEE7     		b	.L17
 339              		.cfi_endproc
 340              	.LFE110:
 342 000e 00BF     		.section	.text.ECC_Error_IRQHandler,"ax",%progbits
 343              		.align	2
 344              		.global	ECC_Error_IRQHandler
 345              		.thumb
 346              		.thumb_func
 348              	ECC_Error_IRQHandler:
 349              	.LFB111:
 110:../src/Interrupt.c **** }
 111:../src/Interrupt.c **** 
 112:../src/Interrupt.c **** 
 113:../src/Interrupt.c **** __attribute__((__interrupt__)) void ECC_Error_IRQHandler(void)
 114:../src/Interrupt.c **** {
 350              		.loc 1 114 0
 351              		.cfi_startproc
 352              		@ Stack Align: May be called with mis-aligned SP.
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356 0000 6846     		mov	r0, sp
 357              		.cfi_register 13, 0
 358 0002 20F00701 		bic	r1, r0, #7
 359 0006 8D46     		mov	sp, r1
 360 0008 81B4     		push	{r0, r7}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 13, -8
 363              		.cfi_offset 7, -4
 364 000a 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 366              	.L19:
 115:../src/Interrupt.c **** 	//reset_system();
 116:../src/Interrupt.c **** 	while (1);
 367              		.loc 1 116 0 discriminator 1
 368 000c FEE7     		b	.L19
 369              		.cfi_endproc
 370              	.LFE111:
 372 000e 00BF     		.text
 373              	.Letext0:
 374              		.file 2 "c:\\microsemi\\softconsole_v4.0\\arm-none-eabi-gcc\\arm-none-eabi\\include\\machine\\_def
 375              		.file 3 "c:\\microsemi\\softconsole_v4.0\\arm-none-eabi-gcc\\arm-none-eabi\\include\\sys\\_stdint.
 376              		.file 4 "C:\\Microsemi\\SoftConsole_v4.0\\CMSIS\\V4.3\\Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Interrupt.c
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:19     .text.prvGetRegistersFromStack:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:24     .text.prvGetRegistersFromStack:00000000 prvGetRegistersFromStack
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:93     .text.NMI_Handler:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:98     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:123    .text.HardFault_Handler:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:128    .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:163    .text.MemManage_Handler:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:168    .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:193    .text.BusFault_Handler:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:198    .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:223    .text.UsageFault_Handler:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:228    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:253    .text.WdogWakeup_IRQHandler:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:258    .text.WdogWakeup_IRQHandler:00000000 WdogWakeup_IRQHandler
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:283    .text.CommSwitchError_IRQHandler:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:288    .text.CommSwitchError_IRQHandler:00000000 CommSwitchError_IRQHandler
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:313    .text.CacheError_IRQHandler:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:318    .text.CacheError_IRQHandler:00000000 CacheError_IRQHandler
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:343    .text.ECC_Error_IRQHandler:00000000 $t
C:\Users\jiryu\AppData\Local\Temp\cch89raL.s:348    .text.ECC_Error_IRQHandler:00000000 ECC_Error_IRQHandler
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.68149608ea1c0d23dbbfc534e19a39c3
                           .group:00000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.ctype.h.29.655cb005a4d596b4713c7a42170c401a
                           .group:00000000 wm4.stdarg.h.31.72c3aa8d68b291953fa52b9471bcdff7
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.stddef.h.184.159df79b4ca79c76561572a55985524c
                           .group:00000000 wm4.cdefs.h.47.a14b68a47d722a767cc4688ffe478d81
                           .group:00000000 wm4.stddef.h.39.fb88e218f22ad7a0ab38f3d93c6eb3e4
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.81.ded4e8fbe2d299b79c956dc834e43661
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.68.a99a2db1e55915cfd1b035cc1e9fcff1
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.54.cd3744e0b066087ec8fbb1bdc22d1043
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4._intsup.h.10.b2832a532eae49c14d45880be6d4ca65
                           .group:00000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:00000000 wm4.limits.h.2.9dea55bedb68394d9750fdf18fad85e9
                           .group:00000000 wm4.limits.h.60.b4bc9eda7e37043243f7148a2c6d0306
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.m2sxxx.h.14.987ea2aeaafde240411e8c56d47721f7
                           .group:00000000 wm4.core_cm3.h.43.614605f47657df9251f3b3f57590a49a
                           .group:00000000 wm4.core_cmInstr.h.39.addda81f1f3453ba31dd54fc5b6fcee8
                           .group:00000000 wm4.core_cm3.h.160.4f087d7d2b17fc46469486aedc40cf5c
                           .group:00000000 wm4.m2sxxx.h.2709.9eef8620912489dbc5c26e98701cdac3
                           .group:00000000 wm4.sys_config_mss_clocks.h.10.c7f4d81ec72bcea6cafb9cc9c2acf4ab
                           .group:00000000 wm4.sys_config.h.25.1448a2ceceaa3c2e8913533fa4e42cee
                           .group:00000000 wm4.mss_uart.h.258.ed2d082f8e6703bd440653ce1fa4b528
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.mss_watchdog.h.135.cd7fdb2556dfc88c684a3bccbcbeffd0
                           .group:00000000 wm4.mss_nvm.h.54.53fe48cb67630dbcda63b96130444f53
                           .group:00000000 wm4.mss_sys_services.h.495.b87512b711a1bf96f4edb360126a223b
                           .group:00000000 wm4.protocol.h.2.6a5796ea80238bc4f9a16400f98bef7e
                           .group:00000000 wm4.storage.h.2.37efc95cfbe2d56f733e692b6f73ffca
                           .group:00000000 wm4.system.h.2.20e7c232f891b8ec2c2a3cc764cb981e
                           .group:00000000 wm4.version.h.2.bf62ea74301f6d323824787edbb86b92

NO UNDEFINED SYMBOLS
